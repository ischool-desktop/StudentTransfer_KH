<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Aspose.Cells</name>
  </assembly>
  <members>
    <member name="T:Aspose.Cells.BuiltInDocumentProperties">
      <summary>
            A collection of built-in document properties.
            </summary>
      <remarks>
        <p>Provides access to <see cref="T:Aspose.Cells.DocumentProperty" /> objects by their names (using an indexer) and
            via a set of typed properties that return values of appropriate types.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Cells.DocumentProperties">
      <summary>
            Base class for <see cref="T:Aspose.Cells.BuiltInDocumentProperties" /> and <see cref="T:Aspose.Cells.CustomDocumentProperties" /> collections.
            </summary>
    </member>
    <member name="M:Aspose.Cells.DocumentProperties.GetEnumerator">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.DocumentProperties.Contains(System.String)">
      <summary>
            Returns true if a property with the specified name exists in the collection.
            </summary>
      <param name="name">The case-insensitive name of the property.</param>
      <returns>True if the property exists in the collection; false otherwise.</returns>
    </member>
    <member name="M:Aspose.Cells.DocumentProperties.IndexOf(System.String)">
      <summary>
            Gets the index of a property by name.
            </summary>
      <param name="name">The case-insensitive name of the property.</param>
      <returns>The zero based index. Negative value if not found.</returns>
    </member>
    <member name="M:Aspose.Cells.DocumentProperties.Remove(System.String)">
      <summary>
            Removes a property with the specified name from the collection.
            </summary>
      <param name="name">The case-insensitive name of the property.</param>
    </member>
    <member name="M:Aspose.Cells.DocumentProperties.RemoveAt(System.Int32)">
      <summary>
            Removes a property at the specified index.
            </summary>
      <param name="index">The zero based index.</param>
    </member>
    <member name="M:Aspose.Cells.DocumentProperties.Clear">
      <summary>
            Removes all properties from the collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DocumentProperties.Count">
      <summary>
            Gets number of items in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DocumentProperties.Item(System.String)">
      <overloads>Returns a <see cref="T:Aspose.Cells.DocumentProperty" /> object.</overloads>
      <summary>
            Returns a <see cref="T:Aspose.Cells.DocumentProperty" /> object by the name of the property.
            </summary>
      <remarks>
        <p>Returns null if a property with the specified name is not found.</p>
      </remarks>
      <param name="name">The case-insensitive name of the property to retrieve.</param>
    </member>
    <member name="P:Aspose.Cells.DocumentProperties.Item(System.Int32)">
      <summary>
            Returns a <see cref="T:Aspose.Cells.DocumentProperty" /> object by index.
            </summary>
      <param name="index">Zero-based index of the <see cref="T:Aspose.Cells.DocumentProperty" /> to retrieve.</param>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Item(System.String)">
      <overloads>Returns a <see cref="T:Aspose.Cells.DocumentProperty" /> object.</overloads>
      <summary>
            Returns a <see cref="T:Aspose.Cells.DocumentProperty" /> object by the name of the property.
            </summary>
      <remarks>
        <p>The string names of the properties correspond to the names of the typed
            properties available from <see cref="T:Aspose.Cells.BuiltInDocumentProperties" />.</p>
        <p>If you request a property that is not present in the document, but the name
            of the property is recognized as a valid built-in name, a new <see cref="T:Aspose.Cells.DocumentProperty" /> 
            is created, added to the collection and returned. The newly created property is assigned
            a default value (empty string, zero, false or DateTime.MinValue depending on the type
            of the built-in property).</p>
        <p>If you request a property that is not present in the document and the name
            is not recognized as a built-in name, a null is returned.</p>
      </remarks>
      <param name="name">The case-insensitive name of the property to retrieve.</param>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Author">
      <summary>
            Gets or sets the name of the document's author.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Bytes">
      <summary>
            Represents an estimate of the number of bytes in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Characters">
      <summary>
            Represents an estimate of the number of characters in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.CharactersWithSpaces">
      <summary>
            Represents an estimate of the number of characters (including spaces) in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Comments">
      <summary>
            Gets or sets the document comments.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Category">
      <summary>
            Gets or sets the category of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Company">
      <summary>
            Gets or sets the company property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.CreatedTime">
      <summary>
            Gets or sets date of the document creation in UTC.
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Keywords">
      <summary>
            Gets or sets the document keywords.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.LastPrinted">
      <summary>
            Gets or sets the date when the document was last printed in UTC.
            </summary>
      <remarks>
        <p>If the document was never printed, this property will return DateTime.MinValue.</p>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.LastSavedBy">
      <summary>
            Gets or sets the name of the last author.
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.LastSavedTime">
      <summary>
            Gets or sets the time of the last save in UTC.
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Lines">
      <summary>
            Represents an estimate of the number of lines in the document.
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Manager">
      <summary>
            Gets or sets the manager property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.NameOfApplication">
      <summary>
            Gets or sets the name of the application.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Pages">
      <summary>
            Represents an estimate of the number of pages in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Paragraphs">
      <summary>
            Represents an estimate of the number of paragraphs in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.RevisionNumber">
      <summary>
            Gets or sets the document revision number. 
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Subject">
      <summary>
            Gets or sets the subject of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Template">
      <summary>
            Gets or sets the informational name of the document template.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Title">
      <summary>
            Gets or sets the title of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.TotalEditingTime">
      <summary>
            Gets or sets the total editing time in minutes.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Version">
      <summary>
            Represents the version number of the application that created the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BuiltInDocumentProperties.Words">
      <summary>
            Represents an estimate of the number of words in the document.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CustomDocumentProperties">
      <summary>
            A collection of custom document properties. 
            </summary>
      <remarks>
        <p>Each <see cref="T:Aspose.Cells.DocumentProperty" /> object represents a custom property of a container document.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.CustomDocumentProperties.Add(System.String,System.String)">
      <overloads>Creates a new custom document property.</overloads>
      <summary>
            Creates a new custom document property of the <b>PropertyType.String</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.CustomDocumentProperties.Add(System.String,System.Int32)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.Number</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.CustomDocumentProperties.Add(System.String,System.DateTime)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.DateTime</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.CustomDocumentProperties.Add(System.String,System.Boolean)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.Boolean</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.CustomDocumentProperties.Add(System.String,System.Double)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.Float</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="T:Aspose.Cells.DocumentProperty">
      <summary>
            Represents a custom or built-in document property.
            </summary>
    </member>
    <member name="M:Aspose.Cells.DocumentProperty.ToString">
      <summary>
            Returns the property value as a string.
            </summary>
      <remarks>
        <p>Converts a number property using Object.ToString(). Converts a boolean property
            into "Y" or "N". Converts a date property into a short date string.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.DocumentProperty.ToInt">
      <summary>
            Returns the property value as integer.
            </summary>
      <remarks>
            Throws an exception if the property type is not PropertyType.Number.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.DocumentProperty.ToDouble">
      <summary>
            Returns the property value as double.
            </summary>
      <remarks>
            Throws an exception if the property type is not PropertyType.Float.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.DocumentProperty.ToDateTime">
      <summary>
            Returns the property value as DateTime in local timezone.
            </summary>
      <remarks>
        <p>Throws an exception if the property type is not PropertyType.Date.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.DocumentProperty.ToBool">
      <summary>
            Returns the property value as bool.
            </summary>
      <remarks>
        <p>Throws an exception if the property type is not PropertyType.Boolean.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.DocumentProperty.Name">
      <summary>
            Returns the name of the property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DocumentProperty.Value">
      <summary>
            Gets or sets the value of the property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DocumentProperty.Type">
      <summary>
            Gets the data type of the property.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PropertyType">
      <summary>
            Specifies data type of a document property.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PropertyType.Boolean">
      <summary>
            The property is a boolean value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PropertyType.DateTime">
      <summary>
            The property is a date time value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PropertyType.Double">
      <summary>
            The property is a floating number.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PropertyType.Number">
      <summary>
            The property is an integer number.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PropertyType.String">
      <summary>
            The property is a string value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PropertyType.Blob">
      <summary>
            The property is a byte array.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CellsHelper">
      <summary>
            Provides helper functions.
            </summary>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.CellNameToIndex(System.String,System.Int32@,System.Byte@)">
      <summary>
            Gets the cell row and column indexes according to its name
            </summary>
      <param name="cellName">Name of cell.</param>
      <param name="row">Output row index</param>
      <param name="column">Output column index</param>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.CellIndexToName(System.Int32,System.Int32)">
      <summary>
            Gets cell name according to its row and column indexes.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>Name of cell.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.ColumnIndexToName(System.Int32)">
      <summary>
            Gets column name according to column index.
            </summary>
      <param name="column">Column index.</param>
      <returns>Name of column.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.ColumnNameToIndex(System.String)">
      <summary>
            Gets column index according to column name.
            </summary>
      <param name="columnName">Column name.</param>
      <returns>Column index.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.RowIndexToName(System.Int32)">
      <summary>
            Gets row name according to row index.
            </summary>
      <param name="row">Row index.</param>
      <returns>Name of row.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.RowNameToIndex(System.String)">
      <summary>
            Gets row index according to row name.
            </summary>
      <param name="rowName">Row name.</param>
      <returns>Row index.</returns>
    </member>
    <member name="T:Aspose.Cells.ArcShape">
      <summary>
            Represents the arc shape.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Shape">
      <summary>
      </summary>
    </member>
    <member name="M:Aspose.Cells.Shape.AddHyperlink(System.String)">
      <summary>
            Adds a hyperlink to the shape.
            </summary>
      <param name="address">Address of the hyperlink.</param>
      <returns>Return the new hyperlink object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shape.MoveToRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves the shape to a specified range.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
    </member>
    <member name="P:Aspose.Cells.Shape.LineFormat">
      <summary>
            Returns a MsoLineFormat object that contains line formatting properties for the specified shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.FillFormat">
      <summary>
            Returns a MsoFillFormat object that contains fill formatting properties for the specified shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.TextFrame">
      <summary>
            Returns a TextFrame object that contains the alignment and anchoring properties for the specified shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.IsHidden">
      <summary>
            Indicates whether the object is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.Rotation">
      <summary>
            Gets and sets the rotation of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.Hyperlink">
      <summary>
            Gets the hyperlink of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.IsGroup">
      <summary>
            Indicates whether the shape is a group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.IsLocked">
      <summary>
            True if the object is locked, False if the object can be modified when the sheet is protected. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.IsPrinted">
      <summary>
            True if the object is printable
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.MsoDrawingType">
      <summary>
            Gets and sets mso drawing type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.Placement">
      <summary>
            Returns or sets the way the shape is attached to the cells below it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.UpperLeftRow">
      <summary>
            Represents upper left corner row index. 
            </summary>
      <remarks>If the shape is in the shape or in the group , UpperLeftRow will be ignored.</remarks>
    </member>
    <member name="P:Aspose.Cells.Shape.UpperDeltaY">
      <summary>
            Gets or sets the shape's vertical offset from its upper left corner row.
            <remarks>The range of value is 0 to 256.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.Shape.UpperLeftColumn">
      <summary>
            Represents upper left corner column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.UpperDeltaX">
      <summary>
            Gets or sets the shape's horizontal offset from its upper left corner column.
            <remarks>The range of value is 0 to 1024.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.Shape.LowerRightRow">
      <summary>
            Represents lower right corner row index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.LowerDeltaY">
      <summary>
            Gets or sets the shape's vertical offset from its lower right corner row.
            <remarks>The range of value is 0 to 256.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.Shape.LowerRightColumn">
      <summary>
            Represents lower right corner column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.LowerDeltaX">
      <summary>
            Gets or sets the shape's horizontal  offset from its lower right corner column.
            <remarks>The range of value is 0 to 1024.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.Shape.Width">
      <summary>
            Represents the width of shape, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.WidthInch">
      <summary>
             Represents the width of the shape, in unit of inch. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.WidthCM">
      <summary>
            Represents the width of the shape, in unit of centimeters. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.Height">
      <summary>
            Represents the height of shape, in unit of pixel.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.HeightInch">
      <summary>
            Represents the height of the shape, in unit of inches. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.HeightCM">
      <summary>
            Represents the height of the shape, in unit of inches. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.Left">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.LeftInch">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.LeftCM">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.Top">
      <summary>
            Represents the vertical offset of shape from its top row, in unit of pixels.
            </summary>
      <remarks>If the shape is in the chart, represents the vertical offset of shape from its top border.</remarks>
    </member>
    <member name="P:Aspose.Cells.Shape.TopInch">
      <summary>
             Represents the vertical offset of shape from its top row, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.TopCM">
      <summary>
             Represents the vertical offset of shape from its top row, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.WidthScale">
      <summary>
            Gets and sets the width scale.If the shape is picture ,the WidthScale property only returns 100;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.HeightScale">
      <summary>
             Gets and sets the width scale.If the shape is picture ,the WidthScale property only returns 100;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Shape.TopInShape">
      <summary>
            Represents the vertical offset of shape from the top border of the parent shape, in unit of 1/4000 of height of the parent shape.
            </summary>
      <remarks>Only Applies when this shape in the group or chart.</remarks>
    </member>
    <member name="P:Aspose.Cells.Shape.LeftInShape">
      <summary>
            Represents the vertical offset of shape from the left border of the parent shape, in unit of 1/4000 of width of the parent shape.
            </summary>
      <remarks>Only Applies when this shape in the group or chart.</remarks>
    </member>
    <member name="P:Aspose.Cells.Shape.WidthInShape">
      <summary>
            Represents the width of the shape, in unit of 1/4000 of the parent shape.
            </summary>
      <remarks>Only Applies when this shape in the group or chart.</remarks>
    </member>
    <member name="P:Aspose.Cells.Shape.HeightInShape">
      <summary>
            Represents the vertical offset of shape from the top border of the parent shape, in unit of 1/4000 of height of the parent shape..
            </summary>
      <remarks>Only Applies when this shape in the group or chart.</remarks>
    </member>
    <member name="T:Aspose.Cells.Area">
      <summary>
            Encapsulates the object that represents a chart area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Area.BackgroundColor">
      <summary>
            Gets or sets the background <see cref="T:System.Drawing.Color" /> of the <see cref="T:Aspose.Cells.Area" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Area.ForegroundColor">
      <summary>
            Gets or sets the foreground <see cref="T:System.Drawing.Color" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Area.Formatting">
      <summary>
            Represents the formatting of the area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Area.InvertIfNegative">
      <summary>
            True if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Area.FillFormat">
      <summary>
            Represents a <seealso cref="P:Aspose.Cells.Area.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ASeries">
      <summary>
            Encapsulates the object that represents a single data series in a chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.Points">
      <summary>
            Gets the collection of points in a series in a chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.Area">
      <summary>
            Represents the background area of ASeries object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.Line">
      <summary>
            Represents the line or border of ASeries object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.Name">
      <summary>
            Gets or sets the name of the data series.
            </summary>
      <example>
        <code>
            [C#]
            
            //Reference name to a cell
            chart.NSeries[0].Name = "=A1";
            
            //Set a string to name
            chart.NSeries[0].Name = "First Series";
            [Visual Basic]
            
            'Reference name to a cell
            chart.NSeries[0].Name = "=A1"
            
            'Set a string to name
            chart.NSeries[0].Name = "First Series"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.ASeries.Values">
      <summary>
            Represents the data of the chart series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.XValues">
      <summary>
            Represents the x values of the chart series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.BubbleSizes">
      <summary>
            Represents the bubble size values of the chart series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.TrendLines">
      <summary>
            Returns an object that represents a collection of all the trendlines for the series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.Smooth">
      <summary>
            Represents curve smoothing. 
            True if curve smoothing is turned on for the line chart or scatter chart.
            Applies only to line and scatter connected by lines charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.Shadow">
      <summary>
            True if the series has a shadow. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.Has3DEffect">
      <summary>
            True if the series has a three-dimensional appearance. 
            Applies only to bubble charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.BarShape">
      <summary>
            Returns or sets the shape used with the 3-D bar or column chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.DataLabels">
      <summary>
            Represents the DataLabels object for the specified ASeries. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.Type">
      <summary>
            Gets or sets a data series' type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.MarkerStyle">
      <summary>
            Represents the marker style in a line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.MarkerForegroundColor">
      <summary>
            Represents the marker foregournd color in a line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.MarkerBackgroundColorSetType">
      <summary>
            Gets or sets the marker background color set type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.MarkerForegroundColorSetType">
      <summary>
            Gets or sets the marker foreground color set type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.MarkerBackgroundColor">
      <summary>
            Represents the marker backgournd color in a line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.MarkerSize">
      <summary>
            Represents the marker size in a line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.PlotOnSecondAxis">
      <summary>
            Indicates if this series is plotted on second value axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.XErrorBar">
      <summary>
            Represents Y direction error bar of the series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.YErrorBar">
      <summary>
            Represents Y direction error bar of the series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.HasHiLoLines">
      <summary>
            True if the line chart has high-low lines. 
             Applies only to line charts.
             </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.HiLoLines">
      <summary>
            Returns a HiLoLines object that represents the high-low lines for a series on a line chart. 
            Applies only to line charts.
             </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.HasSeriesLines">
      <summary>
            True if a stacked column chart or bar chart has series lines or
            if a Pie of Pie chart or Bar of Pie chart has connector lines between the two sections. 
            Applies only to stacked column charts, bar charts, Pie of Pie charts, or Bar of Pie charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.SeriesLines">
      <summary>
            Returns a SeriesLines object that represents the series lines for a stacked bar chart or a stacked column chart.
            Applies only to stacked bar and stacked column charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.HasDropLines">
      <summary>
            True if the chart has drop lines.
            Applies only to line chart or area charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.DropLines">
      <summary>
            Returns a Line object that represents the drop lines for a series on the line chart or area chart.
            Applies only to line chart or area charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.HasUpDownBars">
      <summary>
            True if a line chart has up and down bars.
            Applies only to line charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.DownBars">
      <summary>
            Returns an DropBars object that represents the down bars on a line chart.
            Applies only to line charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.IsColorVaried">
      <summary>
            Represents if the color of points is varied. 
            The chart must contain only one series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.GapWidth">
      <summary>
            Returns or sets the space between bar or column clusters, as a percentage of the bar or column width. The value of this property must be between 0 and 500.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.FirstSliceAngle">
      <summary>
            Gets or sets the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical). Applies only to pie, 3-D pie, and doughnut charts, 0 to 360. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.Overlap">
      <summary>
            Specifies how bars and columns are positioned.
            Can be a value between – 100 and 100. 
            Applies only to 2-D bar and 2-D column charts. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.SecondPlotSize">
      <summary>
            Returns or sets the size of the secondary section of either a pie of pie chart or a bar of pie chart, 
            as a percentage of the size of the primary pie.
            Can be a value from 5 to 200. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.SplitType">
      <summary>
            Returns or sets the way the two sections of either a pie of pie chart or a bar of pie chart are split.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.SplitValue">
      <summary>
            Returns or sets the threshold value separating the two sections of either a pie of pie chart or a bar of pie chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.BubbleScale">
      <summary>
            Returns or sets the scale factor for bubbles in the specified chart group. 
            Can be an integer value from 0 (zero) to 300, 
            corresponding to a percentage of the default size.
            Applies only to bubble charts. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.SizeRepresents">
      <summary>
            Returns or sets what the bubble size represents on a bubble chart. 
            Can be either of the following XlSizeRepresents constants: xlSizeIsArea or xlSizeIsWidth. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.ShowNegativeBubbles">
      <summary>
            True if negative bubbles are shown for the chart group. Valid only for bubble charts. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.DoughnutHoleSize">
      <summary>
            Returns or sets the size of the hole in a doughnut chart group. 
            The hole size is expressed as a percentage of the chart size, between 10 and 90 percent.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.HasRadarAxisLabels">
      <summary>
            True if a radar chart has category axis labels. Applies only to radar charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ASeries.HasLeaderLines">
      <summary>
            True if the series has leader lines.
            </summary>
    </member>
    <member name="T:Aspose.Cells.AutoFilter">
      <summary>
            Represents autofiltering for the specified worksheet.
            </summary>
      <example>
        <code>
            //Set autofilter in column 1 and 2.
            sheet.AutoFilter.Range = "A1:B1";
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.SetRange(System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the range to which the specified AutoFilter applies.
            </summary>
      <param name="row">Row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column Index.</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.Filter(System.Int32,System.String)">
      <summary>
            Filters a list with specified criteria.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <param name="criteria">The specified criteria (a string; for example, "101"). </param>
    </member>
    <member name="P:Aspose.Cells.AutoFilter.Range">
      <summary>
            Represents the range to which the specified AutoFilter applies.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CrossType">
      <summary>
            Represents the axis cross type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CrossType.Automatic">
      <summary>
            Microsoft Excel sets the axis crossing point.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CrossType.Maximum">
      <summary>
            The axis crosses at the maximum value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CrossType.Custom">
      <summary>
            The axis crosses at the custom value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CategoryType">
      <summary>
            Represents the category axis type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CategoryType.AutomaticScale">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CategoryType.CategoryScale">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CategoryType.TimeScale">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.TimeUnit">
      <summary>
            Represents the base unit for the category axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimeUnit.Days">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TimeUnit.Months">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TimeUnit.Years">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Axis">
      <summary>
            Encapsulates the object that represents a chart's axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.MinValue">
      <summary>
            Represents the minimum value on the value axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.MaxValue">
      <summary>
            Represents the maximum value on the value axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.MajorUnit">
      <summary>
            Represents the major units for the axis.
            <remarks> The major units must be greated than zero.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.Axis.MinorUnit">
      <summary>
            Represents the minor units for the axis.
            <remarks> The minor units must be greated than zero.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.Axis.AxisLine">
      <summary>
            Gets the appearance of an Axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.MajorTickMark">
      <summary>
            Represents the type of major tick mark for the specified axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.MinorTickMark">
      <summary>
            Represents the type of minor tick mark for the specified axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.TickLabelPosition">
      <summary>
            Represents the position of tick-mark labels on the specified axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.CrossAt">
      <summary>
            Represents the point on the specified axis where the other axis crosses.
            </summary>
      <remarks>The number should be a integer when it applies to category axis.
            And the value must be between 1 and 31999.</remarks>
    </member>
    <member name="P:Aspose.Cells.Axis.Crosses">
      <summary>
            Represents the point on the specified axis where the other axis crosses.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.IsLogarithmic">
      <summary>
            Represents if the value axis scale type is logarithmic or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.IsPlotOrderReversed">
      <summary>
            Represents if Microsoft Excel plots data points from last to first.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.AxisBetweenCategories">
      <summary>
            Represents if the value axis crosses the category axis between categories.
            </summary>
      <remarks>This property applies only to category axes, and it doesn't apply to 3-D charts.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Axis.TickLabels">
      <summary>
            Returns a <see cref="T:Aspose.Cells.TickLabels" /> object that represents the tick-mark labels for the specified axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.TickLabelSpacing">
      <summary>
            Represents the number of categories or series between tick-mark labels. Applies only to category and series axes.
            </summary>
      <remarks>The number must be between 1 and 31999.</remarks>
    </member>
    <member name="P:Aspose.Cells.Axis.TickMarkSpacing">
      <summary>
            Returns or sets the number of categories or series between tick marks. Applies only to category and series axes. 
            </summary>
      <remarks>The number must be between 1 and 31999.</remarks>
    </member>
    <member name="P:Aspose.Cells.Axis.DisplayUnit">
      <summary>
            Represents the unit label for the specified axis. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.DisplayUnitLabel">
      <summary>
            Represents a unit label on an axis in the specified chart. 
            Unit labels are useful for charting large values— for example, in the millions or billions. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.Title">
      <summary>
            Gets the axis' title.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.CategoryType">
      <summary>
            Represents the category axis type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.BaseUnitScale">
      <summary>
            Represents the base unit scale for the category axis.
            </summary>
      <remarks>Setting this property only takes effect when the CategoryType property is set to TimeScale.</remarks>
    </member>
    <member name="P:Aspose.Cells.Axis.MajorUnitScale">
      <summary>
            Represents the major unit scale for the category axis.
            </summary>
      <example>
        <code>
            [C#]
            
            chart.CategoryAxis.CategoryType = CategoryType.TimeScale;
            chart.CategoryAxis.MajorUnitScale = TimeUnit.Months;
            chart.CategoryAxis.MajorUnit = 2;
            
            [Visual Basic]
            chart.CategoryAxis.CategoryType = CategoryType.TimeScale
            chart.CategoryAxis.MajorUnitScale = TimeUnit.Months
            chart.CategoryAxis.MajorUnit = 2
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Axis.MinorUnitScale">
      <summary>
            Represents the major unit scale for the category axis.
            </summary>
      <example>
        <code>
            [C#]
            
            chart.CategoryAxis.CategoryType = CategoryType.TimeScale;
            chart.CategoryAxis.MinorUnitScale = TimeUnit.Months;
            chart.CategoryAxis.MinorUnit = 2;
            
            [Visual Basic]
            chart.CategoryAxis.CategoryType = CategoryType.TimeScale
            chart.CategoryAxis.MinorUnitScale = TimeUnit.Months
            chart.CategoryAxis.MinorUnit = 2
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Axis.IsVisible">
      <summary>
            Represents if the axis is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Axis.MajorGridLines">
      <summary>
            Represents major gridlines on a chart axis.
            </summary>
      <example>
        <code>
            [C#]
            
            chart.ValueAxis.MajorGridLines.IsVisible = false;
            chart.CategoryAxis.MajorGridLines.IsVisible = true;
            
            [Visual Basic]
            chart.ValueAxis.MajorGridLines.IsVisible = false
            chart.CategoryAxis.MajorGridLines.IsVisible = true
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Axis.MinorGridLines">
      <summary>
            Represents minor gridlines on a chart axis.
            </summary>
    </member>
    <member name="T:Aspose.Cells.BackgroundMode">
      <summary>
            Represents the display mode of the background.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundMode.Automatic">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundMode.Opaque">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundMode.Transparent">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.BackgroundType">
      <summary>
            Enumerates cell background pattern types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.DiagonalCrosshatch">
      <summary>
            Represents diagonal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.DiagonalStripe">
      <summary>
            Represents diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray6">
      <summary>
            Represents 6.25% gray pattern
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray12">
      <summary>
            Represents 12.5% gray pattern
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray25">
      <summary>
            Represents 25% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray50">
      <summary>
            Represents 50% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray75">
      <summary>
            Represents 75% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.HorizontalStripe">
      <summary>
            Represents horizontal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.None">
      <summary>
            Represents no background.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ReverseDiagonalStripe">
      <summary>
            Represents reverse diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Solid">
      <summary>
            Represents solid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThickDiagonalCrosshatch">
      <summary>
            Represents thick diagonal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinDiagonalCrosshatch">
      <summary>
            Represents thin diagonal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinDiagonalStripe">
      <summary>
            Represents thin diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinHorizontalCrosshatch">
      <summary>
            Represents thin horizontal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinHorizontalStripe">
      <summary>
            Represents thin horizontal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinReverseDiagonalStripe">
      <summary>
            Represents thin reverse diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinVerticalStripe">
      <summary>
            Represents thin vertical stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.VerticalStripe">
      <summary>
            Represents vertical stripe pattern.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Bar3DShapeType">
      <summary>
            Represents the shape used with the 3-D bar or column chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Bar3DShapeType.Box">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Bar3DShapeType.PyramidToPoint">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Bar3DShapeType.PyramidToMax">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Bar3DShapeType.Cylinder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Bar3DShapeType.ConeToPoint">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Bar3DShapeType.ConeToMax">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Border">
      <summary>
            Encapsulates the object that represents the cell border.
            </summary>
      <example>
        <code>
            [C#]
            
            int styleIndex = workbook.Styles.Add();
            Style style = workbook.Styles[styleIndex];
            //Set top border style and color
            Border border = style.Borders[BorderType.TopBorder];
            border.LineStyle = CellBorderType.Medium;
            border.Color = Color.Red;
            cell.Style = style;
            
            [Visual Basic]
            
            Dim styleIndex as Integer = workbook.Styles.Add()
            Dim style as Style = workbook.Styles[styleIndex]
            'Set top border style and color
            Dim border as Border = style.Borders(BorderType.TopBorder)
            border.LineStyle = CellBorderType.Medium
            border.Color = Color.Red
            cell.Style = style
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Border.Color">
      <summary>
            Gets or sets the <see cref="T:System.Drawing.Color" /> of the border.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Border.LineStyle">
      <summary>
            Gets or sets the cell border type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Borders">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Border" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Borders.SetColor(System.Drawing.Color)">
      <summary>
            Sets the <see cref="T:System.Drawing.Color" /> of all borders in the collection.
            </summary>
      <param name="color">Borders' <see cref="T:System.Drawing.Color" />.</param>
    </member>
    <member name="M:Aspose.Cells.Borders.SetStyle(Aspose.Cells.CellBorderType)">
      <summary>
            Sets the style of all borders of the collection.
            </summary>
      <param name="style">Borders' style</param>
    </member>
    <member name="P:Aspose.Cells.Borders.Item(Aspose.Cells.BorderType)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Border" /> element at the specified index.
             </summary>
      <param name="borderType">The border to be retrieved.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.Borders.DiagonalColor">
      <summary>
            Gets or sets the <see cref="T:System.Drawing.Color" /> of Diagonal lines.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Borders.DiagonalStyle">
      <summary>
            Gets or sets the style of Diagonal lines.
            </summary>
    </member>
    <member name="T:Aspose.Cells.BorderType">
      <summary>
            Enumerates the border line and diagonal line types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.BottomBorder">
      <summary>
            Represents bottom border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.DiagonalDown">
      <summary>
            Represents the diagonal line from top left to right bottom.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.DiagonalUp">
      <summary>
            Represents the diagonal line from bottom left to right top.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.LeftBorder">
      <summary>
            Represents left border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.RightBorder">
      <summary>
            Represents right border line exists.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.TopBorder">
      <summary>
            Represents top border line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.BubbleSizeRepresents">
      <summary>
            Represents what the bubble size represents on a bubble chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BubbleSizeRepresents.SizeIsArea">
      <summary>
            Represents the size is area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BubbleSizeRepresents.SizeIsWidth">
      <summary>
            Represents the size is width.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Button">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Button.Text">
      <summary>
            Represents the string in this Button object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Button.Font">
      <summary>
            Represents the font of textbox.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Cell">
      <summary>
             Encapsulates the object that represents a single Workbook cell.
             </summary>
      <example>
        <code>
            	[C#]
            	
            	Workbook excel = new Workbook();
            	Cells cells = excel.Worksheets[0].Cells;
            	
            	//Put a string into a cell
            	Cell cell = cells[0, 0];
            	cell.PutValue("Hello");
            	
            	string first = cell.StringValue;
            		
            	//Put an integer into a cell
            	cell = cells["B1"];
            	cell.PutValue(12);
            	
            	int second = cell.IntValue;
            	
            	//Put a double into a cell
            	cell = cells[0, 2];
            	cell.PutValue(-1.234);
            	
            	double third = cell.DoubleValue;
            	
            	//Put a formula into a cell
            	cell = cells["D1"];
            	cell.Formula = "=B1 + C1";
            	
            	//Put a combined formula: "sum(average(b1,c1), b1)" to cell at b2
            	cell = cells["b2"];
            	cell.Formula = "=sum(average(b1,c1), b1)";
            	
            	//Set style of a cell
            	Style style = cell.Style;
            	//Set background color
            	style.BackgroundColor = Color.Yellow;
            	//Set format of a cell
            	style.Font.Name = "Courier New";
            	style.VerticalAlignment = TextAlignmentType.Top;
            
            
             
             [Visual Basic]
             
            	Dim excel as Workbook = new Workbook()
            	Dim cells as Cells = exce.Worksheets(0).Cells
            	
            	'Put a string into a cell
            	Dim cell as Cell = cells(0, 0)
            	cell.PutValue("Hello")
            	
            	Dim first as String = cell.StringValue
            		
            	//Put an integer into a cell
            	cell = cells("B1")
            	cell.PutValue(12)
            	
            	Dim second as Integer = cell.IntValue
            	
            	//Put a double into a cell
            	cell = cells(0, 2)
            	cell.PutValue(-1.234)
            	
            	Dim third as Double = cell.DoubleValue
            	
            	//Put a formula into a cell
            	cell = cells("D1")
            	cell.Formula = "=B1 + C1"
            	
            	//Put a combined formula: "sum(average(b1,c1), b1)" to cell at b2
            	cell = cells("b2")
            	cell.Formula = "=sum(average(b1,c1), b1)"
            		
            	//Set style of a cell
            	Dim style as Style = cell.Style
            	
            	//Set background color
            	style.BackgroundColor = Color.Yellow
            	//Set font of a cell
            	style.Font.Name = "Courier New"
            	style.VerticalAlignment = TextAlignmentType.Top
            	
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.Boolean)">
      <summary>
            Puts an boolean value into the cell.
            </summary>
      <param name="boolValue">
      </param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.Int32)">
      <summary>
            Puts an integer value into the cell.
            </summary>
      <param name="intValue">Input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.Double)">
      <summary>
            Puts a double value into the cell.
            </summary>
      <param name="doubleValue">Input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.String,System.Boolean)">
      <summary>
            Puts a string value into the cell and converts the value to other data type if appropriate.
            </summary>
      <param name="stringValue">Input value</param>
      <param name="isConverted">True: converted to other data type if appropriate.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.String)">
      <summary>
            Puts a string value into the cell.
            </summary>
      <param name="stringValue">Input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.DateTime)">
      <summary>
            Puts a DateTime value into the cell.
            </summary>
      <param name="dateTime">Input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.Object)">
      <summary>
            Puts an object value into the cell.
            </summary>
      <param name="objectValue">input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.SetArrayFormula(System.String,System.Int32,System.Int32)">
      <summary>
            Sets an array formula to a range of cells.
            </summary>
      <param name="arrayFormula">Array formula.</param>
      <param name="rowNumber">Number of rows to populate result of the array formula.</param>
      <param name="columnNumber">Number of columns to populate result of the array formula.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.SetAddInFormula(System.String,System.String)">
      <summary>
            Sets an Add-In formula to the cell.
            </summary>
      <param name="addInFileName">Add-In file name.</param>
      <param name="addInFunction">Add-In function name.</param>
      <example>
        <code>
            [C#]
            cells["h11"].SetAddInFormula("HRVSTTRK.xla", "=pct_overcut(F3:G3)");
            cells["h12"].SetAddInFormula("HRVSTTRK.xla", "=pct_overcut()"); 
            
            [Visual Basic]
            cells("h11").SetAddInFormula("HRVSTTRK.xla", "=pct_overcut(F3:G3)")
            cells("h12").SetAddInFormula("HRVSTTRK.xla", "=pct_overcut()")
            </code>
      </example>
      <remarks>
            Add-In file should be placed in the directory or sub-directory of Workbook Add-In library.
            For example, file name can be "Eurotool.xla" or "solver\solver.xla". 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.Copy(Aspose.Cells.Cell)">
      <summary>
            Copys data from a source cell.
            </summary>
      <param name="cell">Source <see cref="T:Aspose.Cells.Cell" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.Characters(System.Int32,System.Int32)">
      <summary>
            Returns a Characters object that represents a range of characters within the cell text.
            </summary>
      <param name="startIndex">The index of the start of the character.</param>
      <param name="length">The number of characters.</param>
      <returns>Characters object.</returns>
      <remarks>This method only works on cell with string value.</remarks>
      <example>
        <code>
            [C#]
            excel.Worksheets[0].Cells["A1"].PutValue("Helloworld");
            excel.Worksheets[0].Cells["A1"].Characters(5, 5).Font.IsBold = true;
            excel.Worksheets[0].Cells["A1"].Characters(5, 5).Font.Color = Color.Blue;
            
            [Visual Basic]
            excel.Worksheets(0).Cells("A1").PutValue("Helloworld")
            excel.Worksheets(0).Cells("A1").Characters(5, 5).Font.IsBold = True
            excel.Worksheets(0).Cells("A1").Characters(5, 5).Font.Color = Color.Blue
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Cell.GetMergedRange">
      <summary>
            Returns a <see cref="T:Aspose.Cells.Range" /> object which represents a merged range.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.Range" /> object. Null if this cell is not merged.</returns>
    </member>
    <member name="P:Aspose.Cells.Cell.DateTimeValue">
      <summary>
            Gets the DateTime value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Row">
      <summary>
            Gets row number (zero based) of the cell.
            </summary>
      <value>Cell row number</value>
    </member>
    <member name="P:Aspose.Cells.Cell.Column">
      <summary>
            Gets column number (zero based) of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.IsFormula">
      <summary>
            Represents if the specified cell contains formula.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Type">
      <summary>
            Represents cell type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Name">
      <summary>
            Gets the name of the cell. 
            </summary>
      <remarks>
            A cell name includes its column letter and row number. For example, the name of a cell in row 0 and column 0 is A1.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Cell.IsErrorValue">
      <summary>
            Checks if a formula can properly evaluate a result.
            </summary>
      <remarks>Only applies to formula cell.</remarks>
    </member>
    <member name="P:Aspose.Cells.Cell.StringValue">
      <summary>
            Gets the string value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.IntValue">
      <summary>
            Gets the integer value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.DoubleValue">
      <summary>
            Gets the double value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.FloatValue">
      <summary>
            Gets the float value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.BoolValue">
      <summary>
            Gets the boolean value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Style">
      <summary>
            Gets or sets the <see cref="T:Aspose.Cells.Style" /> of the <see cref="T:Aspose.Cells.Cell" /> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Formula">
      <summary>
             Gets or sets a formula of the <see cref="T:Aspose.Cells.Cell" />.
             </summary>
      <remarks>A formula string always begins with an equal sign (=). 
            And please always use comma(,) as parameters delimeter, such as "=SUM(A1, E1, H2)".<p></p>
            User can set any formula in Workbook designer file. Aspose.Cells will keep all the formulas.
            If user use this property to set a formula to a cell, major part of Workbook built-in functions
            is supported. And more is coming. If you have any special need for Workbook built-in functions, 
            please let us know.
            <p>Now Workbook built-in functions supported by Aspose.Cells:</p><font color="blue"><p><b>[A]</b></p><p>ABS, ACOS, ACOSH, AND, ASC, ASIN, ASINH, ATAN, ATAN2, ATANH, AVEDEV, AVERAGE,AVERAGEA</p><p><b>[C]</b></p><p>CEILING, CHAR, CODE, COLUMN, COLUMNS, COMBIN, CONCATENATE, CORREL, COS, COSH, COUNT, COUNTA, COUNTBLANK, COUNTIF</p><p><b>[D]</b></p><p>DATE, DATEVALUE, DAVERAGE, DAY, DAYS360, DCOUNT, DCOUNTA, DEGREES, DGET, DMAX, DMIN, DOLLAR, DPRODUCT,</p><p>DSTDEV, DSTDEVP, DSUM, DVAR, DVARP</p><p><b>[E]</b></p><p>EVEN, EXACT, EXP</p><p><b>[F]</b></p><p>FACT, FALSE, FIND, FIXED, FLOOR, FORECAST, FV</p><p><b>[H]</b></p><p>HLOOKUP, HOUR, HYPERLINK</p><p><b>[I]</b></p><p>IF, INDEX, INDIRECT, INT, IRR, ISBLANK, ISERR, ISERROR, ISNA, ISNUMBER, ISREF</p><p><b>[L]</b></p><p>LEFT, LEN, LINEST, LN, LOG, LOG10, LOOKUP, LOWER</p><p><b>[M]</b></p><p>MATCH, MAX, MEDIAN, MID, MIN, MINUTE, MOD, MONTH</p><p><b>[N]</b></p><p>NOT, NOW, NPV</p><p><b>[O]</b></p><p>ODD, OFFSET,OR</p><p><b>[P]</b></p><p>PEARSON, PI, PMT, POWER, PRODUCT, PV</p><p><b>[R]</b></p><p>RADIANS, RAND, RANK, REPLACE, REPT, RIGHT, ROUND, ROUNDDOWN, ROUNDUP, ROW, ROWS, RSQ</p><p><b>[S]</b></p><p>SEARCH, SECOND, SIGN, SIN, SINH, SQRT, STDEV, STDEVP, SUBSTITUTE, SUBTOTAL, SUM, SUMIF, SUMPRODUCT, SUMSQ, 
            SUMX2MY2, SUMX2PY2, SUMXMY2</p><p><b>[T]</b></p><p>T, TAN, TANH, TEXT, TIME, TODAY, TRANSPOSE, TRIM, TRUE, TRUNC</p><p>[U]</p><p>UPPER</p><p><b>[V]</b></p><p>VALUE, VLOOKUP</p><p><b>[W]</b></p><p>WEEKDAY, WIDECHAR</p><p><b>[Y]</b></p><p>YEAR</p></font></remarks>
      <example>
        <code>
            [C#]
            
            Workbook excel = new Workbook();
            Cells cells = excel.Worksheets[0];
            cells["B6"].Formula = "=sum(b2:b5, E1) + sheet2!A1";
            
            [Visual Basic]
            
            Dim excel As Workbook =  New Workbook() 
            Dim cells As Cells =  excel.Worksheets(0) 
            cells("B6").Formula = "=sum(b2:b5, E1) + sheet2!A1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Cell.R1C1Formula">
      <summary>
            Gets or sets a R1C1 formula of the <see cref="T:Aspose.Cells.Cell" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Value">
      <summary>
            Gets the value contained in this cell.
            </summary>
      <remarks>Possible type:
            <p>null,</p><p>Boolean,</p><p>DateTime,</p><p>Double,</p><p>Integer</p><p>String.</p></remarks>
    </member>
    <member name="P:Aspose.Cells.Cell.IsStyleSet">
      <summary>
            Indicates if the cell's style is set. If return false, it means this cell has a default cell format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.IsMerged">
      <summary>
            Checks if a cell is part of a merged range or not. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.HtmlString">
      <summary>
            Returns the html string which contains data and some formattings in this cell.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CellArea">
      <summary>
            Represent an area of cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellArea.StartRow">
      <summary>
            Gets or set the start row of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellArea.EndRow">
      <summary>
            Gets or set the end row of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellArea.StartColumn">
      <summary>
            Gets or set the start column of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellArea.EndColumn">
      <summary>
            Gets or set the end column of this area.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CellBorderType">
      <summary>
            Enumerates a cell's border type. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.DashDot">
      <summary>
            Represents thin dash-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.DashDotDot">
      <summary>
            Represents thin dash-dot-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Dashed">
      <summary>
            Represents dashed line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Dotted">
      <summary>
            Represents dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Double">
      <summary>
            Represents double line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Hair">
      <summary>
            Represents hair line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.MediumDashDot">
      <summary>
            Represents medium dash-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.MediumDashDotDot">
      <summary>
            Represents medium dash-dot-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.MediumDashed">
      <summary>
            Represents medium dashed line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.None">
      <summary>
            Represents no line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Medium">
      <summary>
            Represents medium line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.SlantedDashDot">
      <summary>
            Represents slanted medium dash-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Thick">
      <summary>
            Represents thick line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Thin">
      <summary>
            Represents thin line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Cells">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Cell" /> objects.
            </summary>
      <example>
        <code>
            
            [C#]
            
            Workbook excel = new Workbook();
            Cells cells = excel.Worksheets[0].Cells;
            
            //Set default row height
            cells.StandardHeight = 20;
            //Set row height
            cells.SetRowHeight(2, 20.5);
            
            //Set default colum width
            cells.StandardWidth = 15;
            //Set column width
            cells.SetColumnWidth(3, 12.57);
            
            //Merge cells
            cells.Merge(5, 4, 2, 2);
            
            //Import data
            DataTable dt = new DataTable("Products");
            dt.Columns.Add("Product_ID",typeof(Int32));
            dt.Columns.Add("Product_Name",typeof(string));
            dt.Columns.Add("Units_In_Stock",typeof(Int32));
            DataRow dr = dt.NewRow();
            dr[0] = 1;
            dr[1] = "Aniseed Syrup";
            dr[2] = 15;
            dt.Rows.Add(dr);
            dr = dt.NewRow();
            dr[0] = 2;
            dr[1] = "Boston Crab Meat";
            dr[2] = 123;
            dt.Rows.Add(dr);
            cells.ImportDataTable(dt, true, 12, 12, 10, 10);
            
            //Export data
            DataTable outDataTable = cells.ExportDataTable(12, 12, 10, 10);
            
            [Visual Basic]
            
            Dim excel as Workbook = new Workbook()
            Dim cells as Cells = exce.Worksheets(0).Cells
            
            'Set default row height
            cells.StandardHeight = 20
            'Set row height
            cells.SetRowHeight(2, 20.5)
            
            'Set default colum width
            cells.StandardWidth = 15
            'Set column width
            cells.SetColumnWidth(3, 12.57)
            
            'Merge cells
            cells.Merge(5, 4, 2, 2)
            
            'Import data
            Dim dt as DataTable = new DataTable("Employee")
            dt.Columns.Add("Employee_ID",typeof(Int32))
            dt.Columns.Add("Employee_Name",typeof(string))
            dt.Columns.Add("Gender",typeof(string))
            Dim dr as DataRow = dt.NewRow()
            dr(0) = 1
            dr(1) = "John Smith"
            dr(2) = "Male"
            dt.Rows.Add(dr)
            dr = dt.NewRow()
            dr(0) = 2
            dr(1) = "Mary Miller"
            dr(2) = "Female"
            dt.Rows.Add(dr)
            cells.ImportDataTable(dt, true, 12, 12, 10, 10)
            
            'Export data
            Dim outDataTable as DataTable = cells.ExportDataTable(12, 12, 10, 10)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Cells.CheckExistence(System.Int32,System.Int32)">
      <summary>
            Checks if a cell exists
            </summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <returns>Return -1 if a Cell object does not exists; 
            Otherwise return the index of the cell object in this list. </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CreateRange(System.String,System.String)">
      <summary>
            Creates a <see cref="T:Aspose.Cells.Range" /> object from a range of cells.
            </summary>
      <param name="upperLeftCell">Upper left cell name.</param>
      <param name="lowerRightCell">Lower right cell name.</param>
      <returns>A <see cref="T:Aspose.Cells.Range" /> object</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CreateRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:Aspose.Cells.Range" /> object from a range of cells.
            </summary>
      <param name="firstRow">First row of this range</param>
      <param name="firstColumn">First column of this range</param>
      <param name="rowNumber">Number of rows</param>
      <param name="columnNumber">Number of columns</param>
      <returns>A <see cref="T:Aspose.Cells.Range" /> object</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CreateRange(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Creates a <see cref="T:Aspose.Cells.Range" /> object from rows of cells or columns of cells.
            </summary>
      <param name="firstIndex">First row index or first column index, zero based.</param>
      <param name="number">Total number of rows or columns, one based.</param>
      <param name="isVertical">True - Range created from columns of cells. False - Range created from rows of cells. </param>
      <returns>A <see cref="T:Aspose.Cells.Range" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <example>
        <code>
            [C#]
            
            Workbook excel = new Workbook();
            string designerFile = MapPath("Designer") + "\\List.xls";
            excel.Open(designerFile);
            Worksheet sheet = excel.Worksheets[0];
            DataTable dt = sheet.Cells.ExportDataTable(6, 1, 69, 4);
            this.DataGrid1.DataSource = dt;
            this.DataGrid1.DataBind();
            
            [Visual Basic]
            
            Dim excel As excel = New excel()
            Dim designerFile As String = MapPath("Designer") + "\List.xls"
            excel.Open(designerFile)
            Dim sheet As Worksheet = excel.Worksheets(0)
            Dim dt As DataTable = sheet.Cells.ExportDataTable(6, 1, 69, 4)
            Me.DataGrid1.DataSource = dt
            Me.DataGrid1.DataBind()
            </code>
      </example>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
      <remarks>
            If you use this method to export a block of data, please be sure that the data in a column 
            should be the same data type. Otherwise, use the <see cref="M:Aspose.Cells.Cells.ExportDataTableAsString(System.Int32,System.Int32,System.Int32,System.Int32)" /> method instead.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Int32,System.Byte,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="rowNumber">Number of rows to be exported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be exported,no more than 256.</param>
      <param name="exportColumnName">Indicates whether the data in the first row are exported to the column name of the DataTable.</param>
      <param name="isVertical">True if a row in Workbook file represents a row in DataTable. False if a column in Workbook file represents a row in DataTable.</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Int32,System.Byte,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <param name="exportColumnName">Indicates whether the data in the first row are exported to the column name of the DataTable.</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTableAsString(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
      <remarks>All data in the <see cref="T:Aspose.Cells.Cells" /> collection are converted to strings.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTableAsString(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <param name="exportColumnName">Indicates whether the data in the first row are exported to the column name of the DataTable.</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
      <remarks>All data in the <see cref="T:Aspose.Cells.Cells" /> collection are converted to strings.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.String)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> object into a worksheet.		
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.</param>
      <param name="startCell">The name of start cell to insert the DataTable, such as "A2".</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Byte,System.Boolean,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> object into a worksheet.		
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.</param>
      <param name="firstRow">The row number of the first cell to import.</param>
      <param name="firstColumn">The column number of the first cell to import.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Byte)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> object into a worksheet.		
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.</param>
      <param name="firstRow">The row number of the first cell to import.</param>
      <param name="firstColumn">The column number of the first cell to import.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Byte,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> object into a worksheet.		
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.</param>
      <param name="firstRow">The row number of the first cell to import.</param>
      <param name="firstColumn">The column number of the first cell to import.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            DataTable dt = new DataTable("Employee");
            dt.Columns.Add("Employee_ID",typeof(Int32));
            dt.Columns.Add("Employee_Name",typeof(string));
            dt.Columns.Add("Gender",typeof(string));
            DataRow dr = dt.NewRow();
            dr[0] = 1;
            dr[1] = "John Smith";
            dr[2] = "Male";
            dt.Rows.Add(dr);
            dr = dt.NewRow();
            dr[0] = 2;
            dr[1] = "Mary Miller";
            dr[2] = "Female";
            dt.Rows.Add(dr);
            cells.ImportDataTable(dt, true, 12, 12, 10, 10);
            
            [Visual Basic]
            
            Dim dt As DataTable =  New DataTable("Employee") 
            dt.Columns.Add("Employee_ID",Type.GetType(Int32))
            dt.Columns.Add("Employee_Name",Type.GetType(String))
            dt.Columns.Add("Gender",Type.GetType(String))
            Dim dr As DataRow =  dt.NewRow() 
            dr(0) = 1
            dr(1) = "John Smith"
            dr(2) = "Male"
            dt.Rows.Add(dr)
            dr = dt.NewRow()
            dr(0) = 2
            dr(1) = "Mary Miller"
            dr(2) = "Female"
            dt.Rows.Add(dr)
            cells.ImportDataTable(dt, True, 12, 12, 10, 10)
            </code>
      </example>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFromDataReader(System.Data.SqlClient.SqlDataReader,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> object which contains data.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFromDataReader(System.Data.SqlClient.SqlDataReader,System.Boolean,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> object which contains data.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data reader will be imported to the first row.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFromDataReader(System.Data.OleDb.OleDbDataReader,System.Boolean,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.OleDb.OleDbDataReader" /> object which contains data.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data reader will be imported to the first row.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFromDataReader(System.Data.OleDb.OleDbDataReader,System.Int32,System.Byte,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.OleDb.OleDbDataReader" /> object which contains data.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataColumn(System.Data.DataView,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a column of a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data view will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="importColumnIndex">The index of the imported DataColumn in a <see cref="T:System.Data.DataTable" />.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataColumn(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            Imports a column of a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="importColumnName">The name of the imported DataColumn in a <see cref="T:System.Data.DataTable" />.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataColumn(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a column of a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="importColumnIndex">The index of the imported DataColumn in a <see cref="T:System.Data.DataTable" />.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataColumn(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Object)">
      <summary>
            Imports a column of a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="importColumnIndex">The index of the imported DataColumn in a <see cref="T:System.Data.DataTable" />.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="defaultValue">Default value for this data column.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="dateFormatString">Date format string for cells.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>This method automatically format date time values. 
            However, if the DateTable is very huge, this method may slow down the program.
            In this case, you'd better format the cell manually.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="dateFormatString">Date format string for cells.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>This method automatically format date time values. 
            However, if the DateTable is very huge, this method may slow down the program.
            In this case, you'd better format the cell manually.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataRow(System.Data.DataRow,System.Int32,System.Int32)">
      <summary>
            Imports a DataRow into the Excel file.
            </summary>
      <param name="dataRow">DataRow object.</param>
      <param name="row">Row index.</param>
      <param name="firstColumn">First column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportTwoDimensionArray(System.Object[0:,0:],System.Int32,System.Int32)">
      <summary>
            Imports a two-dimension array of data into a worksheet.
            </summary>
      <param name="objArray">Two-dimension data array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportObjectArray(System.Object[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of data into a worksheet.
            </summary>
      <param name="objArray">Data array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArrayList(System.Collections.ArrayList,System.Int32,System.Byte,System.Boolean)">
      <summary>
            Imports an arraylist of data into a worksheet.
            </summary>
      <param name="arrayList">Data arraylist.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportObjectArray(System.Object[],System.Int32,System.Byte,System.Boolean,System.Int32)">
      <summary>
            Imports an array of data into a worksheet.
            </summary>
      <param name="objArray">Data array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
      <param name="skip">Skipped number of rows or columns.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.String[0:,0:],System.Int32,System.Int32)">
      <summary>
            Imports a two-dimension array of string into a worksheet.
            </summary>
      <param name="stringArray">Two-dimension string array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFormulaArray(System.String[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of formula into a worksheet.
            </summary>
      <param name="stringArray">Formula array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.String[],System.Int32,System.Byte,System.Boolean)">
      <summary>
            Imports an array of string into a worksheet.
            </summary>
      <param name="stringArray">String array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.Int32[0:,0:],System.Int32,System.Int32)">
      <summary>
            Imports a two-dimension array of integer into a worksheet.
            </summary>
      <param name="intArray">Two-dimension integer array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.Int32[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of integer into a worksheet.
            </summary>
      <param name="intArray">Integer array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.Double[0:,0:],System.Int32,System.Int32)">
      <summary>
            Imports a two-dimension array of double into a worksheet.
            </summary>
      <param name="doubleArray">Two-dimension double array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.Double[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of double into a worksheet.
            </summary>
      <param name="doubleArray">Double array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CellNameToIndex(System.String,System.Int32@,System.Byte@)">
      <summary>
            Obsolete.Gets the cell row and column indexes according to its name
            </summary>
      <param name="cellName">Name of cell.</param>
      <param name="row">Output row index</param>
      <param name="column">Output column index</param>
      <remarks>NOTE: This member is now obsolete. Instead, 
            you should use <see cref="M:Aspose.Cells.CellsHelper.CellNameToIndex(System.String,System.Int32@,System.Byte@)" /> for the same purpose. 
            It will be removed 12 months later since release 3.6.0 in December 2005. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.Merge(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Merges a specified range of cells into a single cell. 		
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="rowNumber">Number of rows(one based)</param>
      <param name="columnNumber">Number of columns(one based)</param>
      <remarks>
            Reference the merged cell via the address of the upper-left cell in the range. 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.UnMerge(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Unmerges a specified range of merged cells. 		
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="rowNumber">Number of rows(one based)</param>
      <param name="columnNumber">Number of columns(one based)</param>
    </member>
    <member name="M:Aspose.Cells.Cells.HideRow(System.Int32)">
      <summary>
            Hides a row.
            </summary>
      <param name="row">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UnhideRow(System.Int32,System.Double)">
      <summary>
            Unhides a row.
            </summary>
      <param name="row">Row index.</param>
      <param name="height">Row height.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetRowHeightPixel(System.Int32,System.Int32)">
      <summary>
            Sets row height in unit of pixels.
            </summary>
      <param name="row">Row index.</param>
      <param name="pixels">Number of pixels.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetRowHeight(System.Int32,System.Double)">
      <summary>
            Sets the height of the specified row.
            </summary>
      <param name="row">Row index.</param>
      <param name="height">Height of row.</param>
      <remarks>To hide a row, sets row height to zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetRowHeight(System.Int32)">
      <summary>
            Gets the height of a specified row.
            </summary>
      <param name="row">Row index</param>
      <returns>Height of row</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetRowHeightPixel(System.Int32)">
      <summary>
            Gets the height of a specified row in unit of pixel.
            </summary>
      <param name="row">Row index</param>
      <returns>Height of row</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.HideColumn(System.Byte)">
      <summary>
            Hides a column.
            </summary>
      <param name="column">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UnhideColumn(System.Int32,System.Double)">
      <summary>
            Unhides a column
            </summary>
      <param name="column">Column index.</param>
      <param name="width">Column width.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetColumnWidthPixel(System.Int32,System.Int32)">
      <summary>
            Sets column width in unit of pixels.
            </summary>
      <param name="column">Column index.</param>
      <param name="pixel">Number of pixels.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetColumnWidth(System.Int32,System.Double)">
      <summary>
            Sets the width of the specified column.
            </summary>
      <param name="column">Column index.</param>
      <param name="width">Width of column.</param>
      <remarks>To hide a column, sets column width to zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetColumnWidthPixel(System.Int32)">
      <summary>
            Gets the width of the specified column, in units of pixel.
            </summary>
      <param name="column">Column index</param>
      <returns>Width of column</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetColumnWidth(System.Int32)">
      <summary>
            Gets the width of the specified column
            </summary>
      <param name="column">Column index</param>
      <returns>Width of column</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.RowIndexToName(System.Int32)">
      <summary>
            Obsolete.Gets row name according to row index.
            </summary>
      <param name="row">Row index.</param>
      <returns>Name of row.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            you should use <see cref="M:Aspose.Cells.CellsHelper.RowIndexToName(System.Int32)" /> for the same purpose. 
            It will be removed 12 months later since release 3.6.0 in December 2005. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ColumnNameToIndex(System.String)">
      <summary>
            Obsolete.Gets column index according to column name.
            </summary>
      <param name="columnName">Column name.</param>
      <returns>Column index.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            you should use <see cref="M:Aspose.Cells.CellsHelper.ColumnNameToIndex(System.String)" /> for the same purpose. 
            It will be removed 12 months later since release 3.6.0 in December 2005. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ColumnIndexToName(System.Byte)">
      <summary>
            Obsolete.Gets column name according to column index.
            </summary>
      <param name="column">Column index.</param>
      <returns>Name of column.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            you should use <see cref="M:Aspose.Cells.CellsHelper.ColumnIndexToName(System.Int32)" /> for the same purpose. 
            It will be removed 12 months later since release 3.6.0 in December 2005. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.CellIndexToName(System.Int32,System.Int32)">
      <summary>
            Obsolete.Gets cell name according to its row and column indexes.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>Name of cell.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            you should use <see cref="M:Aspose.Cells.CellsHelper.CellIndexToName(System.Int32,System.Int32)" /> for the same purpose. 
            It will be removed 12 months later since release 3.6.0 in December 2005. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.MaxDataRowInColumn(System.Int32)">
      <summary>
            Gets the maximum row index of cell which contains data in the specified column.
            </summary>
      <param name="column">Column index.</param>
      <returns>Maximum row index.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyColumn(Aspose.Cells.Cells,System.Int32,System.Int32)">
      <summary>
            Copys data and formattings of a whole column.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formattings to copy.</param>
      <param name="sourceColumnIndex">Source column index.</param>
      <param name="destinationColumnIndex">Destination column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyRow(Aspose.Cells.Cells,System.Int32,System.Int32)">
      <summary>
            Copys data and formattings of a whole row.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formattings to copy.</param>
      <param name="sourceRowIndex">Source row index.</param>
      <param name="destinationRowIndex">Destination row index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UngroupColumns(System.Byte,System.Byte)">
      <summary>
            Ungroups columns.
            </summary>
      <param name="firstIndex">The first column index to be ungrouped.</param>
      <param name="lastIndex">The last column index to be ungrouped.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GroupColumns(System.Byte,System.Byte)">
      <summary>
            Groups columns.
            </summary>
      <param name="firstIndex">The first column index to be grouped.</param>
      <param name="lastIndex">The last column index to be grouped.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GroupColumns(System.Byte,System.Byte,System.Boolean)">
      <summary>
            Groups columns.
            </summary>
      <param name="firstIndex">The first column index to be grouped.</param>
      <param name="lastIndex">The last column index to be grouped.</param>
      <param name="isHidden">Specifies if the grouped columns are hidden.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UngroupRows(System.Int32,System.Int32)">
      <summary>
            Ungroups rows.
            </summary>
      <param name="firstIndex">The first row index to be ungrouped.</param>
      <param name="lastIndex">The last row index to be ungrouped.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GroupRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstIndex">The first row index to be grouped.</param>
      <param name="lastIndex">The last row index to be grouped.</param>
      <param name="isHidden">Specifies if the grouped columns are hidden.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GroupRows(System.Int32,System.Int32)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstIndex">The first row index to be grouped.</param>
      <param name="lastIndex">The last row index to be grouped.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteColumn(System.Int32,System.Boolean)">
      <summary>
            Deletes a column.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteColumn(System.Int32)">
      <summary>
            Deletes a column.
            </summary>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertColumn(System.Int32)">
      <summary>
            Inserts a new column into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteRows(System.Int32,System.Int32)">
      <summary>
            Deletes several rows.
            </summary>
      <param name="rowIndex">The first row index to be deleted.</param>
      <param name="rowNumber">Number of rows to be deleted.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteRow(System.Int32)">
      <summary>
            Deletes a row.
            </summary>
      <param name="rowIndex">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Deletes multiple rows in the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="rowNumber">Number of rows to be inserted.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertColumn(System.Int32,System.Boolean)">
      <summary>
            Inserts a new column into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="updateReference">Indicates if references in other worksheets will be updated.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Inserts multiple rows into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="rowNumber">Number of rows to be inserted.</param>
      <param name="updateReference">Indicates if references in other worksheets will be updated.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRows(System.Int32,System.Int32)">
      <summary>
            Inserts multiple rows into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="rowNumber">Number of rows to be inserted.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRow(System.Int32)">
      <summary>
            Inserts a new row into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearRange(System.Int32,System.Byte,System.Int32,System.Byte)">
      <summary>
            Clears contents and formatting of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearContents(System.Int32,System.Byte,System.Int32,System.Byte)">
      <summary>
            Clears contents of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearFormats(System.Int32,System.Byte,System.Int32,System.Byte)">
      <summary>
            Clears formatting of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Int32,System.Byte)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Int32,System.Byte,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Int32,System.Byte,System.Int32,System.Int32)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Int32,System.Byte,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Boolean,System.Int32,System.Byte,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data view will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Boolean,System.Int32,System.Byte,System.Int32,System.Int32,System.Boolean,System.String)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data view will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="numberFormatString">Number format string for cells.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Boolean,System.Int32,System.Byte,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data view will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataGridAsString(System.Web.UI.WebControls.DataGrid,System.Int32,System.Byte,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Web.UI.WebControls.DataGrid" /> into a worksheet. This method doesn't try to convert text into numeric values.
            </summary>
      <param name="dataGrid">The <see cref="T:System.Web.UI.WebControls.DataGrid" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataGrid(System.Web.UI.WebControls.DataGrid,System.Int32,System.Byte,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Web.UI.WebControls.DataGrid" /> into a worksheet.
            </summary>
      <param name="dataGrid">The <see cref="T:System.Web.UI.WebControls.DataGrid" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataGrid(System.Web.UI.WebControls.DataGrid,System.Int32,System.Byte,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Web.UI.WebControls.DataGrid" /> into a worksheet.
            </summary>
      <param name="dataGrid">The <see cref="T:System.Web.UI.WebControls.DataGrid" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be imported,no more than 256.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.FindFormula(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with the input string.
            </summary>
      <param name="formula">The formula to search for.</param>
      <param name="previousCell">Previous cell with the same formula. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>This method is supported in Standard and above versions of Aspose.Cells.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindFormulaContains(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with formla which contains the input string.
            </summary>
      <param name="formula">The formula to search for.</param>
      <param name="previousCell">Previous cell with the same formula. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>This method is supported in Standard and above versions of Aspose.Cells.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell,Aspose.Cells.CellArea)">
      <summary>
            Finds the cell with the input string in the specified area.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <param name="area">Searched area.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell,Aspose.Cells.CellArea,System.Boolean)">
      <summary>
            Finds the cell with the input string in the specified area.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <param name="area">Searched area.</param>
      <param name="upDown">Search order. True: Up. False: Down.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell,System.Boolean)">
      <summary>
            Finds the cell with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <param name="upDown">Search order. True: Up. False: Down.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringStartsWith(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell starting with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringEndsWith(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell ending with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringContains(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell containing with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringContains(System.String,Aspose.Cells.Cell,System.Boolean,Aspose.Cells.CellArea)">
      <summary>
            Finds the cell containing with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <param name="isCaseSensitive">Indicates if the searched string is case sensitive.</param>
      <param name="area">Searched area.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringContains(System.String,Aspose.Cells.Cell,System.Boolean)">
      <summary>
            Finds the cell containing with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <param name="isCaseSensitive">Indicates if the searched string is case sensitive.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindNumber(System.Int32,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with the input integer.
            </summary>
      <param name="inputNumber">The integer to search for.</param>
      <param name="previousCell">Previous cell with the same integer. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.FindNumber(System.Double,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with the input double.
            </summary>
      <param name="inputNumber">The double to search for.</param>
      <param name="previousCell">Previous cell with the same double. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.EndCellInRow(System.Int32)">
      <summary>
            Gets the last cell in this row.
            </summary>
      <param name="rowIndex">Row index.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.EndCellInColumn(System.Byte)">
      <summary>
            Gets the last cell in this column.
            </summary>
      <param name="columnIndex">Column index.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.EndCellInColumn(System.Int32,System.Int32,System.Byte,System.Byte)">
      <summary>
            Gets the last cell with maximum column index in this range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column index.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.EndCellInRow(System.Int32,System.Int32,System.Byte,System.Byte)">
      <summary>
            Gets the last cell with maximum row index in this range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column index.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Int32,System.Int32,System.Int32,System.Int32,System.Object[])">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="rowNumber">Number of rows to be exported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be exported,no more than 256.</param>
      <param name="defaultValues">Default values for each data column.</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
      <remarks>
            If you use this method to export a block of data, please be sure that the data in a column 
            should be the same data type. And the type of data column will be same as the default value.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRange(Aspose.Cells.CellArea,System.Int32,Aspose.Cells.ShiftType,System.Boolean)">
      <summary>
            Inserts a range of cells and shift cells according to the shift option.
            </summary>
      <param name="area">Shift area.</param>
      <param name="shiftNumber">Number of rows or columns to be inserted.</param>
      <param name="shiftType">Shift cells option.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRange(Aspose.Cells.CellArea,Aspose.Cells.ShiftType)">
      <summary>
            Inserts a range of cells and shift cells according to the shift option.
            </summary>
      <param name="area">Shift area.</param>
      <param name="shiftType">Shift cells option.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRange(Aspose.Cells.CellArea,System.Int32,Aspose.Cells.ShiftType)">
      <summary>
            Inserts a range of cells and shift cells according to the shift option.
            </summary>
      <param name="area">Shift area.</param>
      <param name="shiftNumber">Number of rows or columns to be inserted.</param>
      <param name="shiftType">Shift cells option.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteRange(System.Int32,System.Byte,System.Int32,System.Byte,Aspose.Cells.ShiftType)">
      <summary>
            Deletes a range of cells and shift cells according to the shift option.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
      <param name="shiftType">Shift cells option.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportArray(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a two-dimension <see cref="T:System.Array" /> object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="rowNumber">Number of rows to be exported,no more than 65536.</param>
      <param name="columnNumber">Number of columns to be exported,no more than 256.</param>
      <returns>Exported <see cref="T:System.Array" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ConvertStringToNumericValue">
      <summary>
            Converts string data in cells to numeric value if possible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Rows">
      <summary>
            Gets the collection of <see cref="T:Aspose.Cells.Row" /> objects that represents the individual rows in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Item(System.Int32)">
      <summary>
             Gets cell items within the worksheet
             </summary>
      <param name="index">The zero based index of the element.</param>
      <value>The element at the specified index.</value>
      <remarks>
             This is the indexer for the Cells class.
             Gets the cell element at the specified index. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.Item(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Cell" /> element at the specified cell row index and column index.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>The <see cref="T:Aspose.Cells.Cell" /> object.</returns>
      <example>
        <code> 
            [C#]
            
            Cells cells = excel.Worksheets[0].Cells;
            Cell cell = cells[0, 0];	//Gets the cell at "A1"
            
            [Visual Basic]
            
            Dim cells As Cells =  excel.Worksheets(0).Cells 
            Dim cell As Cell =  cells(0,0)  'Gets the cell at "A1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Cells.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Cell" /> element at the specified cell name.
            </summary>
      <param name="cellName">Cell name,including its column letter and row number, for example A5.</param>
      <returns>A <see cref="T:Aspose.Cells.Cell" /> object</returns>
      <example>
        <code>
            [C#]
            
            Cells cells = excel.Worksheets[0].Cells;
            Cell cell = cells["A1"];	//Gets the cell at "A1"
            
            [Visual Basic]
            
            Dim cells As Cells =  excel.Worksheets(0).Cells 
            Dim cell As Cell =  cells("A1")  'Gets the cell at "A1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Cells.StandardWidth">
      <summary>
            Gets or sets the default column width in the worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.StandardHeight">
      <summary>
            Gets or sets the default row height in this worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.IsStringsPreserved">
      <summary>
            Gets or sets a value indicating whether all worksheet values are preserved as strings. Default is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MinRow">
      <summary>
            Minimum row index of cell which contains data or style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MinColumn">
      <summary>
            Minimum column index of cell which contains data or style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxDataRow">
      <summary>
            Maximum row index of cell which contains data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxRow">
      <summary>
            Maximum row index of cell which contains data or style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxDataColumn">
      <summary>
            Maximum column index of cell which contains data.
            </summary>
      <remarks>Don't call this property repeatedly. This property will iterate all cells in a worksheet.</remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxColumn">
      <summary>
            Maximum column index of cell which contains data or style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Columns">
      <summary>
            Gets the collection of <see cref="T:Aspose.Cells.Column" /> objects that represents the individual columns in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Ranges">
      <summary>
            Gets the collection of <see cref="T:Aspose.Cells.Range" /> objects created at run time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.End">
      <summary>
            Gets the last cell in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Start">
      <summary>
            Gets the first cell in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MergedCells">
      <summary>
            Gets the collection of merged cells.
            </summary>
      <remarks>In this collection, each item is a <see cref="T:Aspose.Cells.CellArea" /> structure which represents an area of merged cells.</remarks>
    </member>
    <member name="T:Aspose.Cells.CellsException">
      <summary>
            The exception that is thrown when Aspose.Cells specified error occurs.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsException.Code">
      <summary>
            Represenets custom exception code.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CellValueType">
      <summary>
            Specifies a cell value type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsBool">
      <summary>
            Cell value is boolean.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsDateTime">
      <summary>
            Cell value is datetime.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsError">
      <summary>
            Cell contains error value
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsNull">
      <summary>
            Blank cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsNumeric">
      <summary>
            Cell value is numeric.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsString">
      <summary>
            Cell value is string.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsUnknown">
      <summary>
            Cell value type is unknown.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Characters">
      <summary>
            Represents a range of characters within the cell text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Characters.StartIndex">
      <summary>
            Gets the start index of the characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Characters.Length">
      <summary>
            Gets the length of the characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Characters.Font">
      <summary>
            Returns the font of this object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Chart">
      <summary>
            Encapsulates the object that represents a single Excel chart.
            </summary>
      <example>
        <code>
            [C#]
            
            Workbook workbook = new Workbook();
            Worksheet sheet = workbook.Worksheets[0];
            
            Cells cells = sheet.Cells;
            cells[0,1].PutValue("Income");
            cells[1,0].PutValue("Company A");
            cells[2,0].PutValue("Company B");
            cells[3,0].PutValue("Company C");
            cells[1,1].PutValue(10000);
            cells[2,1].PutValue(20000);
            cells[3,1].PutValue(30000);
            		
            int chartIndex = sheet.Charts.Add(ChartType.Column, 9, 9, 21, 15);
            
            Chart chart = sheet.Charts[chartIndex];
            chart.NSeries.Add("B2:B4", true);
            chart.NSeries.CategoryData = "A2:A4";
            
            ASeries aSeries = chart.NSeries[0];
            aSeries.Name = "=B1";
            chart.IsLegendShown = true;
            chart.Title.Text = "Income Analysis";
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook()
            Dim sheet as Worksheet = workbook.Worksheets(0)
            
            Dim cells as Cells = sheet.Cells
            cells(0,1).PutValue("Income")
            cells(1,0).PutValue("Company A")
            cells(2,0).PutValue("Company B")
            cells(3,0).PutValue("Company C")
            cells(1,1).PutValue(10000)
            cells(2,1).PutValue(20000)
            cells(3,1).PutValue(30000)
            		
            Dim chartIndex as Integer = sheet.Charts.Add(ChartType.Column, 9, 9, 21, 15)
            
            Dim chart as Chart = sheet.Charts(chartIndex)
            chart.NSeries.Add("B2:B4", true)
            chart.NSeries.CategoryData = "A2:A4"
            
            Dim aSeries as ASeries = chart.NSeries(0)
            aSeries.Name = "=B1"
            chart.IsLegendShown = true
            chart.Title.Text = "Income Analysis"
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Chart.Move(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves the chart to a specified location.
            </summary>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="lowerRightColumn">Lower right column index</param>
      <param name="lowerRightRow">Lower right row index</param>
    </member>
    <member name="M:Aspose.Cells.Chart.ToImage">
      <summary>
            Gets the picture of the chart.
            If the width and height is zero, return null.
            </summary>
      <returns>the picture of the chart.</returns>
    </member>
    <member name="P:Aspose.Cells.Chart.ChartObject">
      <summary>
            Represents an embedded chart on a worksheet. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.SizeWithWindow">
      <summary>
            True if Microsoft Excel resizes the chart to match the size of the chart sheet window.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.Shapes">
      <summary>
            Returns all drawing shapes in this chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.PrintSize">
      <summary>
            Gets and sets the printed chart size.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.Type">
      <summary>
            Gets or sets a chart's type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.NSeries">
      <summary>
            Gets a <see cref="T:Aspose.Cells.NSeries" /> collection representing the data series in the chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.Title">
      <summary>
            Gets the chart's title.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.PlotArea">
      <summary>
            Gets the chart's plot area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.ChartArea">
      <summary>
            Gets the chart area in the worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.CategoryAxis">
      <summary>
            Gets the chart's X axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.ValueAxis">
      <summary>
            Gets the chart's Y axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.SecondValueAxis">
      <summary>
            Gets the chart's second Y axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.SecondCategoryAxis">
      <summary>
            Gets the chart's second X axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.SeriesAxis">
      <summary>
            Gets the chart's series axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.Legend">
      <summary>
            Gets the chart legend.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.ChartDataTable">
      <summary>
            Represents the chart data table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.IsLegendShown">
      <summary>
            Gets or sets a value indicating whether the chart legend will be displayed. Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.IsRectangularCornered">
      <summary>
            Gets or sets a value indicating whether the chart area is rectangular cornered.
            Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.IsDataTableShown">
      <summary>
            Gets or sets a value indicating whether the chart displays a data table. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.FirstSliceAngle">
      <summary>
            Gets or sets the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical). Applies only to pie, 3-D pie, and doughnut charts, 0 to 360. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.GapWidth">
      <summary>
            Returns or sets the space between bar or column clusters, as a percentage of the bar or column width.
            The value of this property must be between 0 and 500.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.Floor">
      <summary>
             Returns a <see cref="T:Aspose.Cells.Floor" /> object that represents the walls of a 3-D chart.
            </summary>
      <remarks>This property doesn't apply to 3-D pie charts.</remarks>
    </member>
    <member name="P:Aspose.Cells.Chart.Walls">
      <summary>
            Returns a <see cref="T:Aspose.Cells.Walls" /> object that represents the walls of a 3-D chart.
            </summary>
      <remarks>This property doesn't apply to 3-D pie charts.</remarks>
    </member>
    <member name="P:Aspose.Cells.Chart.WallsAndGridlines2D">
      <summary>
            True if gridlines are drawn two-dimensionally on a 3-D chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.Rotation">
      <summary>
            Represents the rotation of the 3-D chart view (the rotation of the plot area around the z-axis, in degrees).
            </summary>
      <remarks>
            The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44. 
            The default value is 20. Applies only to 3-D charts. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Chart.Elevation">
      <summary>
            Represents the elevation of the 3-D chart view, in degrees.
            </summary>
      <remarks>
            The chart elevation is the height at which you view the chart, in degrees. 
            The default is 15 for most chart types. 
            The value of this property must be between -90 and 90, except for 3-D bar charts, where it must be between 0 and 44.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Chart.RightAngleAxes">
      <summary>
            True if the chart axes are at right angles.Applies only for 3-D charts(except Column3D and 3-D Pie Charts).
            </summary>
      <remarks>
            If this property is True, the Perspective property is ignored.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Chart.AutoSacling">
      <summary>
            True if Microsoft Excel scales a 3-D chart so that it's closer in size to the equivalent 2-D chart. 
            The RightAngleAxes property must be True.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.HeightPercent">
      <summary>
            Returns or sets the height of a 3-D chart as a percentage of the chart width (between 5 and 500 percent).
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.Perspective">
      <summary>
            Returns or sets the perspective for the 3-D chart view. Must be between 0 and 100.
            This property is ignored if the RightAngleAxes property is True. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.DepthPercent">
      <summary>
            Represents the depth of a 3-D chart as a percentage of the chart width (between 20 and 2000 percent). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.MajorGridLines">
      <summary>
            Represents major gridlines on a chart axis.
            </summary>
      <remarks>/// <remarks>NOTE: This member is now obsolete. Instead, you should use <see cref="P:Aspose.Cells.Axis.MajorGridLines" /> for the same purpose. It will be removed 12 months later since release 2.7.1 in December 2004. Aspose apologizes for any inconvenience you may have experienced.</remarks></remarks>
    </member>
    <member name="P:Aspose.Cells.Chart.Placement">
      <summary>
            Represents the way the chart is attached to the cells below it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Chart.PageSetup">
      <summary>
            Represents the page setup description in this chart.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ChartArea">
      <summary>
            Encapsulates the object that represents the chart area in the worksheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ChartFrame">
      <summary>
            Encapsulates the object that represents the frame object in a chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartFrame.Border">
      <summary>
            Gets or sets the border <see cref="T:Aspose.Cells.Line" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartFrame.Area">
      <summary>
            Gets or sets the <see cref="T:Aspose.Cells.Area" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartFrame.TextFont">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Font" /> object of the specified ChartFrame object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartFrame.AutoScaleFont">
      <summary>
            True if the text in the object changes font size when the object size changes. The default value is True. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartFrame.Background">
      <summary>
            Gets and sets the display mode of the background
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartFrame.X">
      <summary>
            Gets or sets the x coordinate of the upper left corne in units of 1/4000 of the chart area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartFrame.Y">
      <summary>
            Gets or sets the y coordinate of the upper left corner in units of 1/4000 of the chart area.		
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartFrame.Shadow">
      <summary>
            True if the frame has a shadow. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartFrame.Height">
      <summary>
            Gets or sets the height of frame.
            </summary>
      <remarks>
        <br>Height is in units of 1/4000 of the chart area. </br>
            For legend, the unit is point.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.ChartFrame.Width">
      <summary>
            Gets or sets the width of frame.
            </summary>
      <remarks>
        <br>Width is in units of 1/4000 of the chart area. </br>
            For legend, the unit is point.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.ChartArea.X">
      <summary>
            Gets or gets the horizontal offset from its upper left corner column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartArea.Y">
      <summary>
            Gets or gets the vertical offset from its upper left corner row.		
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartArea.Height">
      <summary>
            Gets or sets the vertical offset from its lower right corner row.		
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartArea.Width">
      <summary>
            Gets or sets the horizontal offset from its lower right corner column.		
            </summary>
    </member>
    <member name="T:Aspose.Cells.ChartDataTable">
      <summary>
            Represents a chart data table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartDataTable.Font">
      <summary>
            Gets a <see cref="P:Aspose.Cells.ChartDataTable.Font" /> object which represents the font setting of the specified chart data table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartDataTable.AutoScaleFont">
      <summary>
            True if the text in the object changes font size when the object size changes. 
            The default value is True. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartDataTable.Background">
      <summary>
            Gets and sets the display mode of the background
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartDataTable.HasBorderHorizontal">
      <summary>
            True if the chart data table has horizontal cell borders
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartDataTable.HasBorderVertical">
      <summary>
            True if the chart data table has vertical cell borders
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartDataTable.HasBorderOutline">
      <summary>
            True if the chart data table has outline borders
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartDataTable.ShowLegendKey">
      <summary>
            True if the data label legend key is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartDataTable.Border">
      <summary>
            Returns a Border object that represents the border of the object
            </summary>
    </member>
    <member name="T:Aspose.Cells.ChartMarkerType">
      <summary>
            Represents the marker style in a line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartMarkerType.Automatic">
      <summary>
            Automatic markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartMarkerType.Circle">
      <summary>
            Circular markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartMarkerType.Dash">
      <summary>
            Long bar markers
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartMarkerType.Diamond">
      <summary>
            Diamond-shaped markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartMarkerType.Dot">
      <summary>
            Short bar markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartMarkerType.None">
      <summary>
            No markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartMarkerType.SquarePlus">
      <summary>
            Square markers with a plus sign.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartMarkerType.Square">
      <summary>
            Square markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartMarkerType.SquareStar">
      <summary>
            Square markers with an asterisk.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartMarkerType.Triangle">
      <summary>
            Triangular markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartMarkerType.SquareX">
      <summary>
            Square markers with an X.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ChartPoint">
      <summary>
            Represents a single point in a series in a chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartPoint.Border">
      <summary>
            Gets the border <see cref="T:Aspose.Cells.Line" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartPoint.Area">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Area" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartPoint.MarkerStyle">
      <summary>
            Represents the marker style in a line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartPoint.MarkerForegroundColor">
      <summary>
            Represents the marker foregournd color in a line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartPoint.MarkerBackgroundColor">
      <summary>
            Represents the marker backgournd color in a line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartPoint.MarkerBackgroundColorSetType">
      <summary>
            Gets or sets the marker background color set type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartPoint.MarkerForegroundColorSetType">
      <summary>
            Gets or sets the marker foreground color set type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartPoint.MarkerSize">
      <summary>
            Represents the marker size in a line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartPoint.DataLabels">
      <summary>
            Returns a DataLabels object that represents the data label associated with the point.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ChartPoints">
      <summary>
            Represents a collection that contains all the points in one series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartPoints.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.ChartPoint" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.Charts">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Chart" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            
            Workbook workbook = new Workbook();
            
            Charts charts = workbook.Worksheets[0].Charts;
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook()
            
            Dim charts as Charts = workbook.Worksheets(0).Charts
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Charts.Add(Aspose.Cells.ChartType,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a chart to the collection.
            </summary>
      <param name="type">Chart type</param>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
      <returns>
        <see cref="T:Aspose.Cells.Chart" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Charts.Add(Aspose.Cells.Chart)">
      <summary>
      </summary>
      <param name="chart">
      </param>
      <remarks>Only for reading</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Chart" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.ChartShape">
      <summary>
            Represents the shape of the chart.
            Properties and methods for the ChartObject object control the appearance and size of the embedded chart on the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ChartShape.Chart">
      <summary>
            Returns a Chart object that represents the chart contained in the object. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.ChartSplitType">
      <summary>
            Represents the way the two sections of either a pie of pie chart or a bar of pie chart are split.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartSplitType.Position">
      <summary>
             Represents position split way.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartSplitType.Value">
      <summary>
            Represents value split way.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartSplitType.PercentValue">
      <summary>
            Represents percent value split way.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartSplitType.Custom">
      <summary>
             Represents custom split way..
            </summary>
    </member>
    <member name="T:Aspose.Cells.Title">
      <summary>
            Encapsulates the object that represents the title of chart or axis.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Title.RemoveCharacters">
      <summary>
            Remove all Character sets.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Title.Characters(System.Int32,System.Int32)">
      <summary>
            Returns a Characters object that represents a range of characters within the title.
            </summary>
      <param name="startIndex">The index of the start of the character.</param>
      <param name="length">The number of characters.</param>
      <returns>Characters object.</returns>
    </member>
    <member name="P:Aspose.Cells.Title.TextHorizontalAlignment">
      <summary>
            Ges or sets the text horizontal alignment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Title.TextVerticalAlignment">
      <summary>
            Gets or sets the text vertical alignment of text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Title.Rotation">
      <summary>
            Represents text rotation angel.
            </summary>
      <remarks>
        <br>0: Not rotated.</br>
        <br>255: Top to Bottom.</br>
        <br>-90: Downward.</br>
        <br>90: Upward.</br>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Title.Text">
      <summary>
            Gets or sets the text of a frame's title.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Title.X">
      <summary>
            Gets or sets the x coordinate of the upper left corne in units of 1/4000 of the chart area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Title.Y">
      <summary>
            Gets or sets the y coordinate of the upper left corner in units of 1/4000 of the chart area.		
            </summary>
    </member>
    <member name="P:Aspose.Cells.Title.TextDirection">
      <summary>
             Represents text reading order.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ChartType">
      <summary>
            Enumerates all chart types used in Excel.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Area">
      <summary>
            Represents Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.AreaStacked">
      <summary>
            Represents Stacked Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Area100PercentStacked">
      <summary>
            Represents 100% Stacked Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Area3D">
      <summary>
            Represents 3D Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Area3DStacked">
      <summary>
            Represents 3D Stacked Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Area3D100PercentStacked">
      <summary>
            Represents 3D 100% Stacked Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Bar">
      <summary>
            Represents Bar Chart: Clustered Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.BarStacked">
      <summary>
            Represents Stacked Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Bar100PercentStacked">
      <summary>
            Represents 100% Stacked Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Bar3DClustered">
      <summary>
            Represents 3D Colustered Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Bar3DStacked">
      <summary>
            Represents 3D Stacked Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Bar3D100PercentStacked">
      <summary>
            Represents 3D 100% Stacked Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Bubble">
      <summary>
            Represents Bubble Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Bubble3D">
      <summary>
            Represents 3D Bubble Chart. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Column">
      <summary>
            Represents Column Chart: Clustered Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.ColumnStacked">
      <summary>
            Represents Stacked Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Column100PercentStacked">
      <summary>
            Represents 100% Stacked Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Column3D">
      <summary>
            Represents 3D Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Column3DClustered">
      <summary>
            Represents 3D Colustered Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Column3DStacked">
      <summary>
            Represents 3D Stacked Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Column3D100PercentStacked">
      <summary>
            Represents 3D 100% Stacked Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Cone">
      <summary>
            Represents Cone Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.ConeStacked">
      <summary>
            Represents Stacked Cone Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Cone100PercentStacked">
      <summary>
            Represents 100% Stacked Cone Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.ConicalBar">
      <summary>
            Represents Conical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.ConicalBarStacked">
      <summary>
            Represents Stacked Conical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.ConicalBar100PercentStacked">
      <summary>
            Represents 100% Stacked Conical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.ConicalColumn3D">
      <summary>
            Represents 3D Conical Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Cylinder">
      <summary>
            Represents Cylinder Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.CylinderStacked">
      <summary>
            Represents Stacked Cylinder Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Cylinder100PercentStacked">
      <summary>
            Represents 100% Stacked Cylinder Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.CylindricalBar">
      <summary>
            Represents Cylindrical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.CylindricalBarStacked">
      <summary>
            Represents Stacked Cylindrical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.CylindricalBar100PercentStacked">
      <summary>
            Represents 100% Stacked Cylindrical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.CylindricalColumn3D">
      <summary>
            Represents 3D Cylindrical Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Doughnut">
      <summary>
            Represents Doughnut Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.DoughnutExploded">
      <summary>
            Represents Exploded Doughnut Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Line">
      <summary>
            Represents Line Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.LineStacked">
      <summary>
            Represents Stacked Line Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Line100PercentStacked">
      <summary>
            Represents 100% Stacked Line Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.LineWithDataMarkers">
      <summary>
            Represents Line Chart with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.LineStackedWithDataMarkers">
      <summary>
            Represents Stacked Line Chart with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Line100PercentStackedWithDataMarkers">
      <summary>
            Represents 100% Stacked Line Chart with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Line3D">
      <summary>
            Represents 3D Line Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Pie">
      <summary>
            Represents Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Pie3D">
      <summary>
            Represents 3D Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.PiePie">
      <summary>
            Represents Pie of Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.PieExploded">
      <summary>
            Represents Exploded Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Pie3DExploded">
      <summary>
            Represents 3D Exploded Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.PieBar">
      <summary>
            Represents Bar of Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Pyramid">
      <summary>
            Represents Pyramid Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.PyramidStacked">
      <summary>
            Represents Stacked Pyramid Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Pyramid100PercentStacked">
      <summary>
            Represents 100% Stacked Pyramid Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.PyramidBar">
      <summary>
            Represents Pyramid Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.PyramidBarStacked">
      <summary>
            Represents Stacked Pyramid Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.PyramidBar100PercentStacked">
      <summary>
            Represents 100% Stacked Pyramid Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.PyramidColumn3D">
      <summary>
            Represents 3D Pyramid Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Radar">
      <summary>
            Represents Radar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.RadarWithDataMarkers">
      <summary>
            Represents Radar Chart with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.RadarFilled">
      <summary>
            Represents Filled Radar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Scatter">
      <summary>
            Represents Scatter Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.ScatterConnectedByCurvesWithDataMarker">
      <summary>
            Represents Scatter Chart connected by curves, with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.ScatterConnectedByCurvesWithoutDataMarker">
      <summary>
            Represents Scatter Chart connected by curves, without data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.ScatterConnectedByLinesWithDataMarker">
      <summary>
            Represents Scatter Chart connected by lines, with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.ScatterConnectedByLinesWithoutDataMarker">
      <summary>
            Represents Scatter Chart connected by lines, without data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.StockHighLowClose">
      <summary>
            Represents High-Low-Close Stock Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.StockOpenHighLowClose">
      <summary>
            Represents Open-High-Low-Close Stock Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.StockVolumeHighLowClose">
      <summary>
            Represents Volume-High-Low-Close Stock Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.StockVolumeOpenHighLowClose">
      <summary>
            Represents Volume-Open-High-Low-Close Stock Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.Surface3D">
      <summary>
            Represents Surface Chart: 3D Surface Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.SurfaceWireframe3D">
      <summary>
            Represents Wireframe 3D Surface Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.SurfaceContour">
      <summary>
            Represents Contour Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ChartType.SurfaceContourWireframe">
      <summary>
            Represents Wireframe Contour Chart.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CheckBox">
      <summary>
            Represents a check box object in a worksheet.
            </summary>
      <example>
        <code>
            [C#]
            
            int index = excel.Worksheets[0].CheckBoxes.Add(15, 15, 20, 100);
            CheckBox checkBox = excel.Worksheets[0].CheckBoxes[index];
            checkBox.Text = "Check Box 1";
            
            
            [Visual Basic]
            
            Dim index as integer = excel.Worksheets(0).CheckBoxes.Add(15, 15, 20, 100)
            Dim checkBox as CheckBox = excel.Worksheets(0).CheckBoxes[index];
            checkBox.Text = "Check Box 1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.CheckBox.Text">
      <summary>
            Represents the string in this CheckBox object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CheckBox.LinkedCell">
      <summary>
            Represents the cell linked to value of the CheckBox.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CheckBox.Value">
      <summary>
            Indicates if the checkbox is checked or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CheckBox.CheckValue">
      <summary>
            Gets or set checkbox' value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CheckBox.Shadow">
      <summary>
            Indicates whether the combobox has 3-D shading.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CheckBoxes">
      <summary>
            Represents a collection of <see cref="T:Aspose.Cells.CheckBox" /> objects in a worksheet.
            </summary>
      <example>
        <code>
            [C#]
            
            int index = excel.Worksheets[0].CheckBoxes.Add(15, 15, 20, 100);
            CheckBox checkBox = excel.Worksheets[0].CheckBoxes[index];
            checkBox.Text = "Check Box 1";
            
            
            [Visual Basic]
            
            Dim index as integer = excel.Worksheets(0).CheckBoxes.Add(15, 15, 20, 100)
            Dim checkBox as CheckBox = excel.Worksheets(0).CheckBoxes[index];
            checkBox.Text = "Check Box 1"
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.CheckBoxes.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a checkBox to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="height">Height of checkBox, in unit of pixel.</param>
      <param name="width">Width of checkBox, in unit of pixel.</param>
      <returns>
        <see cref="T:Aspose.Cells.CheckBox" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.CheckBoxes.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.CheckBox" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.CheckValueType">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CheckValueType.UnChecked">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CheckValueType.Checked">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CheckValueType.Mixed">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Column">
      <summary>
            Represents a single column in a worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Column.ApplyStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formattings for a whole column.
            </summary>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
    </member>
    <member name="P:Aspose.Cells.Column.Index">
      <summary>
            Gets the index of this column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Column.Style">
      <summary>
            Gets the style of this column.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Columns">
      <summary>
            Collects the <seealso cref="T:Aspose.Cells.Columns" /> objects that represent the individual columns in a worksheet.
            </summary>
      <remarks>If a column has a default setting, it will not occur in this collection. 
            However, you can directly access a column by the indexer of this collection. And this column will be created
            and reserved in the collection.</remarks>
    </member>
    <member name="P:Aspose.Cells.Columns.Item(System.Byte)">
      <summary>
            Gets a <seealso cref="T:Aspose.Cells.Column" /> object by its index.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ComboBox">
      <summary>
            Represents the control form ComboBox.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ComboBox.LinkedCell">
      <summary>
            Gets or sets the worksheet range linked to the control's value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ComboBox.InputRange">
      <summary>
            Gets or sets the worksheet range used to fill the specified combo box. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ComboBox.SelectedIndex">
      <summary>
            Gets or sets the index number of the currently selected item in a list box or combo box.
            Zero-based.
            </summary>
      <remarks>-1 presents no item is selected.</remarks>
    </member>
    <member name="P:Aspose.Cells.ComboBox.Shadow">
      <summary>
            Indicates whether the combobox has 3-D shading.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ComboBox.DropDownLines">
      <summary>
            Gets or sets the number of list lines displayed in the drop-down portion of a combo box. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Comment">
      <summary>
            Encapsulates the object that represents a cell comment.
            </summary>
            /// <example><code>
            [C#]
            
            Workbook workbook = new Workbook();
            Comments comments = workbook.Worksheets[0].Comments;
            
            //Add comment to cell A1
            int commentIndex = comments.Add(0, 0);
            Comment comment = comments[commentIndex];
            comment.Note = "First note.";
            comment.Font.Name = "Times New Roman";
            
            //Add comment to cell B2
            comments.Add("B2");
            comment = comments["B2"];
            comment.Note = "Second note.";
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook()
            Dim comments as Comments = workbook.Worksheets(0).Comments
             
            'Add comment to cell A1
            Dim commentIndex as Integer = comments.Add(0, 0)
            Dim comment as Comment = comments(commentIndex)
            comment.Note = "First note."
            comment.Font.Name = "Times New Roman"
            
            'Add comment to cell B2
            comments.Add("B2")
            comment = comments("B2")
            comment.Note = "Second note."
             
            </code></example></member>
    <member name="P:Aspose.Cells.Comment.CommentShape">
      <summary>
            Get a Shape object that represents the shape attached to the specified comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.Row">
      <summary>
            Gets the row index of the comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.Column">
      <summary>
            Gets the column index of the comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.Note">
      <summary>
            Represents the content of comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.Font">
      <summary>
            Gets the font of comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.IsVisible">
      <summary>
            Represents if the comment is visible or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.AutoSize">
      <summary>
            Indicates if size of comment is adjusted automatically according to its content.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.HeightCM">
      <summary>
            Represents the height of the comment, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.WidthCM">
      <summary>
            Represents the width of the comment, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.WidthInch">
      <summary>
            Represents the width of the comment, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.HeightInch">
      <summary>
            Represents the height of the comment, in unit of inches.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Comments">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Comment" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            
            Workbook workbook = new Workbook();
            
            Comments comments = workbook.Worksheets[0].Comments;
            
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook()
            
            Dim comments as Comments = workbook.Worksheets(0).Comments
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Comments.Add(System.Int32,System.Byte)">
      <summary>
            Adds a comment to the collection.
            </summary>
      <param name="row">Cell row index.</param>
      <param name="column">Cell column index.</param>
      <returns>
        <see cref="T:Aspose.Cells.Comment" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Comments.Add(System.String)">
      <summary>
            Adds a comment to the collection.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>
        <see cref="T:Aspose.Cells.Comment" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.Comments.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Comment" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.Comments.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Comment" /> element at the specified cell.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>The element at the specified cell.</returns>
    </member>
    <member name="P:Aspose.Cells.Comments.Item(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Comment" /> element at the specified row index and column index.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>The element at the specified cell.</returns>
    </member>
    <member name="T:Aspose.Cells.CommentShape">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattings">
      <summary>
            Encapsulates a collection of FormatConditions objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattings.Add">
      <summary>
            Adds a FormatConditions to the collection.
            </summary>
      <returns>FormatConditions object index.</returns>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattings.Item(System.Int32)">
      <summary>
            Gets the FormatConditions element at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
    </member>
    <member name="T:Aspose.Cells.ConsolidationFunction">
      <summary>
            Represents consolidation function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Sum">
      <summary>
            Represents Sum function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Count">
      <summary>
            Represents Count function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Average">
      <summary>
            Represents Average function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Max">
      <summary>
            Represents Max function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Min">
      <summary>
            Represents Min function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Product">
      <summary>
            Represents Product function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.CountNums">
      <summary>
            Represents Count Nums function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.StdDev">
      <summary>
            Represents StdDev function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.StdDevp">
      <summary>
            Represents StdDevp function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Var">
      <summary>
            Represents Var function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Varp">
      <summary>
            Represents Varp function.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CountryCode">
      <summary>
            Represents Excel country identifiers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Default">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.USA">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Canada">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Russia">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.France">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Spain">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.UnitedKingdom">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Germany">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.China">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.DataLabels">
      <summary>
            Encapsulates a collection of all the DataLabel objects for the specified ASeries.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.TextHorizontalAlignment">
      <summary>
            Ges or sets the text horizontal alignment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.TextVerticalAlignment">
      <summary>
            Gets or sets the text vertical alignment of text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.Rotation">
      <summary>
            Represents text rotation angel.
            </summary>
      <remarks>
        <br>0: Not rotated.</br>
        <br>255: Top to Bottom.</br>
        <br>-90: Downward.</br>
        <br>90: Upward.</br>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.DataLabels.Text">
      <summary>
            Gets or sets the text of a frame's title.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.TextDirection">
      <summary>
             Represents text reading order.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.IsValueShown">
      <summary>
            Represents a specified chart's data label values display behavior. True displays the values. False to hide. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.IsPercentageShown">
      <summary>
            Represents a specified chart's data label percentage value display behavior. True displays the percentage value. False to hide. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.IsBubbleSizeShown">
      <summary>
            Represents a specified chart's data label percentage value display behavior. True displays the percentage value. False to hide. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.IsCategoryNameShown">
      <summary>
            Represents a specified chart's data label category name display behavior.True to display the category name for the data labels on a chart. False to hide.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.IsSeriesNameShown">
      <summary>
            Returns or sets a Boolean to indicate the series name display behavior for the data labels on a chart.
            True to show the series name. False to hide.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.IsLegendKeyShown">
      <summary>
            Represents a specified chart's data label legend key display behavior.True if the data label legend key is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.NumberFormat">
      <summary>
            Represents the format string for the DataLabels object. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.Number">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.NumberFormatLinked">
      <summary>
            True if the number format is linked to the cells 
            (so that the number format changes in the labels when it changes in the cells). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.Separator">
      <summary>
            Sets or returns a Variant representing the separator used for the data labels on a chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataLabels.Postion">
      <summary>
            Represents the position of the data lable.
            </summary>
    </member>
    <member name="T:Aspose.Cells.LabelPositionType">
      <summary>
            Represents data label position type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LabelPositionType.Center">
      <summary>
            Applies only to bar, 2d/3d pie charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.LabelPositionType.InsideBase">
      <summary>
            Applies only to bar, 2d/3d pie charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.LabelPositionType.InsideEnd">
      <summary>
            Applies only to bar charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.LabelPositionType.OutsideEnd">
      <summary>
            Applies only to bar, 2d/3d pie charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.LabelPositionType.Above">
      <summary>
            Applies only to line charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.LabelPositionType.Below">
      <summary>
            Applies only to line charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.LabelPositionType.Left">
      <summary>
            Applies only to line charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.LabelPositionType.Right">
      <summary>
            Applies only to line charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.LabelPositionType.BestFit">
      <summary>
            Applies only to 2d/3d pie charts
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataLablesSeparatorType">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.DataLablesSeparatorType.Auto">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.DataLablesSeparatorType.Space">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.DataLablesSeparatorType.Comma">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.DataLablesSeparatorType.Semicolon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.DataLablesSeparatorType.Period">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.DataLablesSeparatorType.NewLine">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.DataSorter">
      <summary>
            Summary description for DataSorter.
            </summary>
    </member>
    <member name="M:Aspose.Cells.DataSorter.Sort(Aspose.Cells.Range)">
      <summary>
      </summary>
      <param name="range">
      </param>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Key1">
      <summary>
            Represents first sorted key index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Order1">
      <summary>
            Represents sort order of the first key.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Key2">
      <summary>
            Represents second sorted key index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Order2">
      <summary>
            Represents sort order of the second key.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Key3">
      <summary>
            Represents third sorted key index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Order3">
      <summary>
            Represents sort order of the third key.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DisplayUnitLabel">
      <summary>
            Represents the display unit label.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DisplayUnitLabel.TextHorizontalAlignment">
      <summary>
            Ges or sets the text horizontal alignment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DisplayUnitLabel.TextVerticalAlignment">
      <summary>
            Gets or sets the text vertical alignment of text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DisplayUnitLabel.Rotation">
      <summary>
            Represents text rotation angel.
            </summary>
      <remarks>
        <br>0: Not rotated.</br>
        <br>255: Top to Bottom.</br>
        <br>-90: Downward.</br>
        <br>90: Upward.</br>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.DisplayUnitLabel.Text">
      <summary>
            Gets or sets the text of a frame's title.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DisplayUnitLabel.TextFont">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Font" /> object of the specified ChartFrame object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DisplayUnitLabel.AutoScaleFont">
      <summary>
            True if the text in the object changes font size when the object size changes. The default value is True. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.DisplayUnitLabel.TextDirection">
      <summary>
             Represents text reading order.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DisplayUnitType">
      <summary>
            Represents the type of display unit.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DisplayUnitType.Hundreds">
      <summary>
            Display unit is Hundreds.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DisplayUnitType.None">
      <summary>
            Display unit is None.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DisplayUnitType.Thousands">
      <summary>
            Display unit is Thousands.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DisplayUnitType.Millions">
      <summary>
            Display unit is Millions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DisplayUnitType.Billions">
      <summary>
            Display unit is Billions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DisplayUnitType.Trillions">
      <summary>
            Display unit is Trillions.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DropBars">
      <summary>
            Represents the up/down bars in a chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.DropBars.Border">
      <summary>
            Gets the border <see cref="T:Aspose.Cells.Line" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DropBars.Area">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Area" />.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ErrorBar">
      <summary>
            Represents error bar of data series.
            </summary>
      <example>
        <code>
            [C#]
            Workbook workbook = new Workbook();
            Cells cells = workbook.Worksheets[0].Cells;
            cells["a1"].PutValue(2);
            cells["a2"].PutValue(5);
            cells["a3"].PutValue(3);
            cells["a4"].PutValue(6);
            cells["b1"].PutValue(4);
            cells["b2"].PutValue(3);
            cells["b3"].PutValue(6);
            cells["b4"].PutValue(7);
            
            cells["C1"].PutValue("Q1");
            cells["C2"].PutValue("Q2");
            cells["C3"].PutValue("Y1");
            cells["C4"].PutValue("Y2");
            
            int chartIndex = excel.Worksheets[0].Charts.Add(ChartType.Column, 11, 0, 27, 10);
            
            Chart chart = excel.Worksheets[0].Charts[chartIndex];
            chart.NSeries.Add("A1:B4", true);
            
            chart.NSeries.CategoryData = "C1:C4";
            
            for(int i = 0; i &lt; chart.NSeries.Count; i ++)
            {
            	ASeries aseries = chart.NSeries[i];
            	aseries.ErrorBar.DisplayType = ErrorBarDisplayType.Minus;
            	aseries.ErrorBar.Type = ErrorBarType.FixedValue;
            	aseries.ErrorBar.Amount = 5;
            }
            
            [Visual Basic]
            Dim workbook As Workbook =  New Workbook() 
            Dim cells As Cells =  workbook.Worksheets(0).Cells 
            cells("a1").PutValue(2)
            cells("a2").PutValue(5)
            cells("a3").PutValue(3)
            cells("a4").PutValue(6)
            cells("b1").PutValue(4)
            cells("b2").PutValue(3)
            cells("b3").PutValue(6)
            cells("b4").PutValue(7)
            
            cells("C1").PutValue("Q1")
            cells("C2").PutValue("Q2")
            cells("C3").PutValue("Y1")
            cells("C4").PutValue("Y2")
            
            Dim chartIndex As Integer =  excel.Worksheets(0).Charts.Add(ChartType.Column,11,0,27,10) 
            
            Dim chart As Chart =  excel.Worksheets(0).Charts(chartIndex) 
            chart.NSeries.Add("A1:B4", True)
            
            chart.NSeries.CategoryData = "C1:C4"
            
            Dim i As Integer
            For  i = 0 To chart.NSeries.Count - 1
            Dim aseries As ASeries =  chart.NSeries(i) 
            aseries.ErrorBar.DisplayType = ErrorBarDisplayType.Minus
            aseries.ErrorBar.Type = ErrorBarType.FixedValue
            aseries.ErrorBar.Amount = 5
            Next
            </code>
      </example>
    </member>
    <member name="T:Aspose.Cells.Line">
      <summary>
            Encapsulates the object that represents the chart line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Line.Color">
      <summary>
            Represents the <see cref="T:System.Drawing.Color" /> of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Line.Style">
      <summary>
            Represents the style of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Line.Weight">
      <summary>
            Gets or sets the <see cref="T:Aspose.Cells.WeightType" /> of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Line.IsVisible">
      <summary>
            Represents if the axis is visible in the chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ErrorBar.Type">
      <summary>
            Represents error bar amount type.
            </summary>
      <example>
        <code>
            [C#]
            //Sets custom error bar type
            aseries.ErrorBar.Type = ErrorBarType.Custom;
            aseries.ErrorBar.PlusValue = "=Sheet1!A1";
            aseries.ErrorBar.MinusValue = "=Sheet1!A2";
            
            [Visual Basic]
            'Sets custom error bar type
            aseries.ErrorBar.Type = ErrorBarType.Custom
            aseries.ErrorBar.PlusValue = "=Sheet1!A1"
            aseries.ErrorBar.MinusValue = "=Sheet1!A2"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.ErrorBar.DisplayType">
      <summary>
            Represents error bar display type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ErrorBar.Amount">
      <summary>
            Represents amount of error bar.
            <remarks> The amount must be greater than and equal to zero.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.ErrorBar.ShowMarkerTTop">
      <summary>
            Indicates if formatting error bars with a T-top.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ErrorBar.PlusValue">
      <summary>
            Represents positive error amount when error bar type is Custom.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ErrorBar.MinusValue">
      <summary>
            Represents negative error amount when error bar type is Custom.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ErrorBarDisplayType">
      <summary>
            Represents error bar display type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorBarDisplayType.Both">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorBarDisplayType.Minus">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorBarDisplayType.None">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorBarDisplayType.Plus">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.ErrorBarType">
      <summary>
            Represents error bar amount type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorBarType.Custom">
      <summary>
            Custom value type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorBarType.FixedValue">
      <summary>
            Fixed value type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorBarType.Percent">
      <summary>
            Percentage type
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorBarType.StDev">
      <summary>
            Standard deviation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorBarType.StError">
      <summary>
            Standar error type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExceptionType">
      <summary>
            Represents custom exception type code.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Chart">
      <summary>
            Invalid chart setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.DataType">
      <summary>
            Invalid data type setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.DataValidation">
      <summary>
            Invalid data validation setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.FileFormat">
      <summary>
            Invalid file format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Formula">
      <summary>
            Invalid formula.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.InvalidData">
      <summary>
            Invalid data.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.License">
      <summary>
            License related errors.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Limitation">
      <summary>
            Out of MS Excel limitation error.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.PageSetup">
      <summary>
            Invalid page setup setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.PivotTable">
      <summary>
            Invalid pivotTable setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Shape">
      <summary>
            Invalid drawing object setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.SheetName">
      <summary>
            Invalid worksheet name.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.SheetType">
      <summary>
            Invalid worksheet type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.UnsupportedFeature">
      <summary>
            Unsupported feature.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.UnsupportedStream">
      <summary>
            Unsupported stream to be opened.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.UndisclosedInformation">
      <summary>
            Files contains some undisclosed information.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalLink">
      <summary>
            Represents an external link in a workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalLink.DataSource">
      <summary>
            Represents data source of the external link.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalLinks">
      <summary>
            Represents external links collection in a workbook.
            </summary>
      <example>
        <code>
            [C#]
            //Open a file with external links
            Workbook workbook = new Workbook();
            workbook.Open("d:\\book1.xls");
            
            //Change external link data source
            excel.Worksheets.ExternalLinks[0].DataSource = "d:\\link.xls";
            
            
            [Visual Basic]
            'Open a file with external links
            Dim workbook As Workbook =  New Workbook() 
            excel.Open("d:\\book1.xls")
            
            'Change external link data source
            excel.Worksheets.ExternalLinks(0).DataSource = "d:\\link.xls"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.ExternalLinks.Count">
      <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalLinks.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.ExternalLink" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.FileFormatType">
      <summary>
            Enumerates spreadsheet file format types
            </summary>
      <remarks>
        <b>Saving in Aspose.Pdf.Xml Format</b>
        <p>
        </p>
            Please note that some formatting specified in spreadsheets might be lost when converting into Aspose.Pdf.Xml.
            For example, images, charts and other drawing objects will be lost.
            Both Aspose.Cells and Aspose.Pdf development teams are working hard to enhance MS Excel to PDF conversion and support as many features of spreadsheets as possible. 
            </remarks>
      <example>
        <code>
            [C#]
            
            Workbook workbook = new Workbook();
            
            //...You can populate data here.         
               
            //Save the document in Aspose.Pdf.Xml format.
            workbook.Save("MySpreadsheet.xml", FileFormatType.AsposePdf);
            
            //Read the file in Aspose.Pdf.Xml format into Aspose.Pdf.
            Aspose.Pdf.Pdf pdf1 = new Aspose.Pdf.Pdf();
            pdf1.BindXML("MySpreadsheet.xml", null);
            
            //Produce the PDF file.
            pdf1.Save("MySpreadsheet.pdf");
            
            
            [Visual Basic]	
            
            Dim workbook as Workbook = new Workbook()
            
            '...You can populate data here.         
               
            'Save the document in Aspose.Pdf.Xml format.
            workbook.Save("MySpreadsheet.xml", FileFormatType.AsposePdf)
            
            'Read the file in Aspose.Pdf.Xml format into Aspose.Pdf.
            Dim pdf1 as Aspose.Pdf.Pdf = new Aspose.Pdf.Pdf()
            pdf1.BindXML("MySpreadsheet.xml", Nothing)
            
            'Produce the PDF file.
            pdf1.Save("MySpreadsheet.pdf") 
            </code>
      </example>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.AsposePdf">
      <summary>
            Saves the spreadsheet in Aspose.Pdf.Xml format that can be read by Aspose.Pdf to produce a PDF file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.CSV">
      <summary>
            Saves as a CSV file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Default">
      <summary>
            Saves as an Excel2003 file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel97">
      <summary>
            Saves as an Excel97 file
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2000">
      <summary>
            Saves as an Excel2000 file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.ExcelXP">
      <summary>
            Saves as an ExcelXP file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2003">
      <summary>
            Saves as an Excel2003 file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2007Xlsx">
      <summary>
            Save as an Excel2007 xlsx file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.SpreadsheetML">
      <summary>
            Save as a SpreadSheetML file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.TabDelimited">
      <summary>
            Save as a tab delimited text file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FillFormat">
      <summary>
            Encapsulates the object that represents fill formatting for a shape.
            </summary>
    </member>
    <member name="M:Aspose.Cells.FillFormat.SetOneColorGradient(System.Drawing.Color,System.Double,Aspose.Cells.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a one-color gradient.
            </summary>
      <param name="color">One gradient color.</param>
      <param name="degree">The gradient degree. Can be a value from 0.0 (dark) through 1.0 (light).</param>
      <param name="style">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="M:Aspose.Cells.FillFormat.SetTwoColorGradient(System.Drawing.Color,System.Drawing.Color,Aspose.Cells.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a two-color gradient.
            </summary>
      <param name="color1">One gradient color.</param>
      <param name="color2">Two gradient color.</param>
      <param name="style">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="M:Aspose.Cells.FillFormat.SetPresetColorGradient(Aspose.Cells.GradientPresetType,Aspose.Cells.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a preset-color gradient.
            </summary>
      <param name="presetColor">Preset color type</param>
      <param name="style">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="P:Aspose.Cells.FillFormat.GradientColorType">
      <summary>
            Returns the gradient color type for the specified fill.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FillFormat.GradientStyle">
      <summary>
            Returns the gradient style for the specified fill. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.FillFormat.GradientColor1">
      <summary>
            Returns the gradient color 1 for the the specified fill.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FillFormat.GradientColor2">
      <summary>
            Returns the gradient color 2 for the the specified fill.
            </summary>
      <remarks>Only when the graident color type is GradientColorType.TwoColors, this property is meaningful.</remarks>
    </member>
    <member name="P:Aspose.Cells.FillFormat.GradientDegree">
      <summary>
            Returns the gradient degree for the the specified fill.
            </summary>
      <remarks>Can only be a value from 0.0 (dark) through 1.0 (light).</remarks>
    </member>
    <member name="P:Aspose.Cells.FillFormat.GradientVariant">
      <summary>
            Returns the gradient variant for the the specified fill.
            </summary>
      <remarks>Can only be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</remarks>
    </member>
    <member name="P:Aspose.Cells.FillFormat.PresetColor">
      <summary>
            Returns the gradient preset color for the the specified fill.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FillFormat.Texture">
      <summary>
            Represents the texture type for the specified fill.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FillFormat.Pattern">
      <summary>
            Represents an area's display pattern.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FillPattern">
      <summary>
            Enumerates shape fill pattern types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.None">
      <summary>
            Represents no background.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Solid">
      <summary>
            Represents solid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Gray5">
      <summary>
            Represents 5% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Gray10">
      <summary>
            Represents 10% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Gray20">
      <summary>
            Represents 20% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Gray30">
      <summary>
            Represents 30% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Gray40">
      <summary>
            Represents 40% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Gray50">
      <summary>
            Represents 50% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Gray60">
      <summary>
            Represents 60% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Gray70">
      <summary>
            Represents 70% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Gray75">
      <summary>
            Represents 75% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Gray80">
      <summary>
            Represents 80% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Gray90">
      <summary>
            Represents 90% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Gray25">
      <summary>
            Represents 25% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.LightDownwardDiagonal">
      <summary>
            Represents light downward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.LightUpwardDiagonal">
      <summary>
            Represents light upward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.DarkDownwardDiagonal">
      <summary>
            Represents dark downward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.DarkUpwardDiagonal">
      <summary>
            Represents dark upward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.WideDownwardDiagonal">
      <summary>
            Represents wide downward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.WideUpwardDiagonal">
      <summary>
            Represents wide upward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.LightVertical">
      <summary>
            Represents light vertical pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.LightHorizontal">
      <summary>
            Represents light horizontal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.NarrowVertical">
      <summary>
            Represents narrow vertical pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.NarrowHorizontal">
      <summary>
            Represents narrow horizontal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.DarkVertical">
      <summary>
            Represents dark vertical pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.DarkHorizontal">
      <summary>
            Represents dark horizontal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.DashedDownwardDiagonal">
      <summary>
            Represents dashed downward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.DashedUpwardDiagonal">
      <summary>
            Represents dashed upward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.DashedVertical">
      <summary>
            Represents dashed vertical pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.DashedHorizontal">
      <summary>
            Represents dashed horizontal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.SmallConfetti">
      <summary>
            Represents small confetti pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.LargeConfetti">
      <summary>
            Represents large confetti pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.ZigZag">
      <summary>
            Represents zig zag pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Wave">
      <summary>
            Represents wave pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.DiagonalBrick">
      <summary>
            Represents diagonal brick pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.HorizontalBrick">
      <summary>
            Represents horizontal brick pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Weave">
      <summary>
            Represents weave pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Plaid">
      <summary>
            Represents plaid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Divot">
      <summary>
            Represents divot pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.DottedGrid">
      <summary>
            Represents dotted grid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.DottedDiamond">
      <summary>
            Represents dotted diamond pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Shingle">
      <summary>
            Represents shingle pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Trellis">
      <summary>
            Represents trellis pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Sphere">
      <summary>
            Represents sphere pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.SmallGrid">
      <summary>
            Represents small grid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.LargeGrid">
      <summary>
            Represents large grid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.SmallCheckerBoard">
      <summary>
            Represents small checker board pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.LargeCheckerBoard">
      <summary>
            Represents large checker board pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.OutlinedDiamond">
      <summary>
            Represents outlined diamond pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.SolidDiamond">
      <summary>
            Represents solid diamond pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FillPattern.Unknown">
      <summary>
            Represents unkown pattern.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Floor">
      <summary>
            Encapsulates the object that represents the floor of a 3-D chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Floor.Border">
      <summary>
            Gets or sets the border <see cref="T:Aspose.Cells.Line" />.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Font">
      <summary>
            Encapsulates the font object used in a spreadsheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Font.Equals(Aspose.Cells.Font)">
      <summary>
            Checks if two fonts are equals.
            </summary>
      <param name="font">Compared font object.</param>
      <returns>True if equal to the compared font object.</returns>
    </member>
    <member name="P:Aspose.Cells.Font.IsItalic">
      <summary>
            Gets or sets a value indicating whether the font is italic.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsBold">
      <summary>
            Gets or sets a value indicating whether the font is bold.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsStrikeout">
      <summary>
            Gets or sets a value indicating whether the font is strikeout.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsSuperscript">
      <summary>
            Gets or sets a value indicating whether the font is super script.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsSubscript">
      <summary>
            Gets or sets a value indicating whether the font is subscript.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.Underline">
      <summary>
            Gets or sets the font underline type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.Name">
      <summary>
            Gets  or sets the name of the <see cref="T:Aspose.Cells.Font" />.
            </summary>
      <example>
        <code>
            [C#]
            
            Style style;
            ..........
            Font font = style.Font;
            font.Name = "Times New Roman";
            
            [Visual Basic]
            
            Dim style As Style
            ..........
            Dim font As Font =  style.Font 
            font.Name = "Times New Roman"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Font.Size">
      <summary>
            Gets or sets the size of the font.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.Color">
      <summary>
            Gets or sets the <see cref="T:System.Drawing.Color" /> of the font.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FontUnderlineType">
      <summary>
            Enumerates the font underline types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Accounting">
      <summary>
            Represents single accounting underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Double">
      <summary>
            Represents double underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DoubleAccounting">
      <summary>
            Represents double accounting underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.None">
      <summary>
            Represents no underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Single">
      <summary>
            Represents single underline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FormatCondition">
      <summary>
            Represents conditional formatting condition.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Formula1">
      <summary>
            Gets and sets the value or expression associated with conditional formatting.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Formula2">
      <summary>
            Gets and sets the value or expression associated with conditional formatting.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Operator">
      <summary>
            Gets and sets the conditional format operator type.
            </summary>
      <see cref="T:Aspose.Cells.OperatorType" />
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Style">
      <summary>
            Gets or setts style of conditional formatted cell ranges.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Type">
      <summary>
            Gets and sets whether the conditional format is based on a cell value or an expression.
            </summary>
      <see cref="T:Aspose.Cells.FormatConditionType" />
    </member>
    <member name="T:Aspose.Cells.FormatConditions">
      <summary>
            Represents conditional formatting.
            The FormatConditions can contain up to three conditional formats. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.FormatConditions.Add(Aspose.Cells.CellArea,Aspose.Cells.FormatConditionType,Aspose.Cells.OperatorType,System.String,System.String)">
      <summary>
            Adds a formatting condition and effected cell rang to the FormatConditions
             The FormatConditions can contain up to three conditional formats.
             References to the other sheets are not allowed in the formulas of conditional formattin
            </summary>
      <param name="cellArea">Conditional formatted cell range.</param>
      <param name="type">Type of conditional formatting.It could be one of the members of FormatConditionType.</param>
      <param name="operatorType">Comparison operator.It could be one of the members of OperatorType.</param>
      <param name="formula1">The value or expression associated with conditional formatting.</param>
      <param name="formula2">The value or expression associated with conditional formatting</param>
      <returns>[0]:Formatting condition object index;[1] Effected cell rang index.</returns>
      <see cref="T:Aspose.Cells.OperatorType" />
      <set cref="T:Aspose.Cells.FormatConditionType" />
    </member>
    <member name="M:Aspose.Cells.FormatConditions.AddArea(Aspose.Cells.CellArea)">
      <summary>
            Adds a conditional formatted cell range.
            </summary>
      <param name="cellArea">Conditional formatted cell range.</param>
      <returns>Conditional formatted cell rang index.</returns>
    </member>
    <member name="M:Aspose.Cells.FormatConditions.AddCondition(Aspose.Cells.FormatConditionType,Aspose.Cells.OperatorType,System.String,System.String)">
      <summary>
            Adds a formatting condition.
            </summary>
      <param name="type">Type of conditinal formatting.It could be one of the members of FormatConditionType.</param>
      <param name="operatorType">The comparison operator type.It could be one of the members of OperatorType.</param>
      <param name="formula1">The value or expression associated with conditinal formatting.</param>
      <param name="formula2">The value or expression associated with conditinal formatting.</param>
      <returns>Formatting condition object index;</returns>
      <see cref="T:Aspose.Cells.OperatorType" />
      <set cref="T:Aspose.Cells.FormatConditionType" />
    </member>
    <member name="M:Aspose.Cells.FormatConditions.GetCellArea(System.Int32)">
      <summary>
            Gets the conditional formatted cell range by index.
            </summary>
      <param name="index">the index of the coditional formatted cell range.</param>
      <returns>the conditional formatted cell range</returns>
    </member>
    <member name="M:Aspose.Cells.FormatConditions.RemoveArea(System.Int32)">
      <summary>
            Removes conditional formatted cell range by index.
            </summary>
      <param name="index">The index of the conditional formatted cell range to be removed.</param>
    </member>
    <member name="M:Aspose.Cells.FormatConditions.RemoveCondition(System.Int32)">
      <summary>
            Removes the formatting condition by index.
            </summary>
      <param name="index">The index of the formatting condition to be removed.</param>
    </member>
    <member name="P:Aspose.Cells.FormatConditions.Count">
      <summary>
            Gets the count of the conditions.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatConditions.RangeCount">
      <summary>
            Gets count of conditionally formatted ranges.
             </summary>
    </member>
    <member name="P:Aspose.Cells.FormatConditions.Item(System.Int32)">
      <summary>
            Gets the formatting conidition by index.
            </summary>
      <param name="index">the index of the formatting conidition to return.</param>
      <returns>the formatting conidition </returns>
    </member>
    <member name="T:Aspose.Cells.FormatConditionType">
      <summary>
            Specifies whether the conditional format is based on a cell value or an expression.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.CellValue">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.Expression">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.FormattingType">
      <summary>
            Represents the type of formatting applied to an <see cref="T:Aspose.Cells.Area" /> object or a <see cref="T:Aspose.Cells.Line" /> object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormattingType.Automatic">
      <summary>
            Represents automatic formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormattingType.Custom">
      <summary>
            Represents custom formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormattingType.None">
      <summary>
            Represents none formatting type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GradientColorType">
      <summary>
            Represents the gradient color type for the specified fill.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientColorType.None">
      <summary>
            No gradient color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientColorType.OneColor">
      <summary>
            One gradient color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientColorType.PresetColors">
      <summary>
            Preset gradient colors
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientColorType.TwoColors">
      <summary>
            Two gradient colors
            </summary>
    </member>
    <member name="T:Aspose.Cells.GradientPresetType">
      <summary>
            Represents gradient preset color type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Brass">
      <summary>
            Brass preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.CalmWater">
      <summary>
            Calm Water preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Chrome">
      <summary>
            Chrome preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.ChromeII">
      <summary>
            Chrome II preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Daybreak">
      <summary>
            Daybreak preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Desert">
      <summary>
            Desert preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.EarlySunset">
      <summary>
            Early Sunset preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Fire">
      <summary>
            Fire preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Fog">
      <summary>
            Fog preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Gold">
      <summary>
            Gold preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.GoldII">
      <summary>
            Gold II preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Horizon">
      <summary>
            Horizon preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.LateSunset">
      <summary>
            Late Sunset preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Mahogany">
      <summary>
            Mahogany preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Moss">
      <summary>
            Moss preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Nightfall">
      <summary>
            Nightfall preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Ocean">
      <summary>
            Ocean preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Parchment">
      <summary>
            Parchment preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Peacock">
      <summary>
            Peacock preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Rainbow">
      <summary>
            Rainbow preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.RainbowII">
      <summary>
            Rainbow II preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Sapphire">
      <summary>
            Sapphire preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Silver">
      <summary>
            Silver preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Wheat">
      <summary>
            Wheat preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientPresetType.Unknown">
      <summary>
            Unknown preset color.
            Only for the preset color (which is not same as any known preset color) in the template workbook.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GradientStyleType">
      <summary>
            Represents gradient shading style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientStyleType.DiagonalDown">
      <summary>
            Diagonal down shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientStyleType.DiagonalUp">
      <summary>
            Diagonal up shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientStyleType.FromCenter">
      <summary>
            From center shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientStyleType.FromCorner">
      <summary>
            From corner shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientStyleType.Horizontal">
      <summary>
            Horizontal shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientStyleType.Vertical">
      <summary>
            Vertical shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.GradientStyleType.Unknown">
      <summary>
            Uknown shading style.Only for the shading style(which is not for any memeber of the GradientStyleType) in the template file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GroupBox">
      <summary>
            Encapsulates the object that represents a groupbox in a spreadsheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GroupBox.Text">
      <summary>
            Represents the string in this GroupBox object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GroupBox.Shadow">
      <summary>
            Indicates whether the groupbox has shadow.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GroupShape">
      <summary>
            Represents the individual shapes within a grouped shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GroupShape.Item(System.Int32)">
      <summary>
            Gets the child shape by index.
            </summary>
      <param name="index">the child shape index.</param>
      <returns>return the child shape.</returns>
    </member>
    <member name="P:Aspose.Cells.GroupShape.GroupItems">
      <summary>
            The shapes are contained in this group shape.
            </summary>
    </member>
    <member name="T:Aspose.Cells.HPageBreak">
      <summary>
            Encapsulates the object that represents a horizontal page break. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.HPageBreak.StartColumn">
      <summary>
            Gets the start column index of this horizontal page break.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HPageBreak.EndColumn">
      <summary>
            Gets the end column index of this horizontal page break.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HPageBreak.Row">
      <summary>
            Gets the zero based row index.
            </summary>
    </member>
    <member name="T:Aspose.Cells.HPageBreaks">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.HPageBreak" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            //Add a pagebreak at G5
            excel.Worksheets[0].HPageBreaks.Add("G5");
            excel.Worksheets[0].VPageBreaks.Add("G5");
            
            [VB]
            'Add a pagebreak at G5
            excel.Worksheets(0).HPageBreaks.Add("G5")
            excel.Worksheets(0).VPageBreaks.Add("G5")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.HPageBreaks.Add(System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a horizontal page break to the collection.
            </summary>
      <param name="row">Row index, zero based.</param>
      <param name="startColumn">Start column index, zero based.</param>\
            <param name="endColumn">End column index, zero based.</param><returns><see cref="T:Aspose.Cells.HPageBreak" /> object index.</returns><remarks>This method is used to add a horizontal pagebreak within a print area.</remarks></member>
    <member name="M:Aspose.Cells.HPageBreaks.Add(System.Int32,System.Int32)">
      <summary>
            Adds a horizontal page break to the collection.
            </summary>
      <param name="row">Cell row index, zero based.</param>
      <param name="column">Cell column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.HPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.HPageBreaks.Add(System.String)">
      <summary>
            Adds a horizontal page break to the collection.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>
        <see cref="T:Aspose.Cells.HPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.HPageBreaks.RemoveAt(System.Int32)">
      <summary>
            Removes the HPageBreak element at a specified name.
            </summary>
      <param name="index">Element index, zero based.</param>
    </member>
    <member name="P:Aspose.Cells.HPageBreaks.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.HPageBreak" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.HPageBreaks.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.HPageBreak" /> element with the specified cell name.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>The element with the specified cell name.</returns>
    </member>
    <member name="T:Aspose.Cells.Hyperlink">
      <summary>
            Encapsulates the object that represents a hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Hyperlink.Address">
      <summary>
            Represents the address of a hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Hyperlink.TextToDisplay">
      <summary>
            Represents the text to be displayed for the specified hyperlink. The default value is the address of the hyperlink. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Hyperlink.Area">
      <summary>
            Gets the range of hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Hyperlink.ScreenTip">
      <summary>
            Returns or sets the ScreenTip text for the specified hyperlink.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Hyperlinks">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Hyperlink" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Hyperlinks.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a hyperlink to a specified cell or a range of cells.
            </summary>
      <param name="firstRow">First row of the hyperlink range.</param>
      <param name="firstColumn">First column of the hyperlink range.</param>
      <param name="rowNumber">Number of rows in this hyperlink range.</param>
      <param name="columnNumber">Number of columns of this hyperlink range.</param>
      <param name="address">Address of the hyperlink.</param>
      <returns>
        <see cref="T:Aspose.Cells.Hyperlink" /> object index.</returns>
      <example>
        <code>
            [C#]
            
            Worksheet worksheet = excel.Worksheets[0];
            worksheet.Hyperlinks.Add("A4", 1, 1, "http://www.aspose.com");
            worksheet.Hyperlinks.Add("A5", 1, 1, "c:\\book1.xls");
            
            [Visual Basic]
            
            Dim worksheet as Worksheet = excel.Worksheets(0)
            worksheet.Hyperlinks.Add("A4", 1, 1, "http://www.aspose.com")
            worksheet.Hyperlinks.Add("A5", 1, 1, "c:\\book1.xls")
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Hyperlinks.Add(System.String,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a hyperlink to a specified cell or a range of cells.
            </summary>
      <param name="cellName">Cell name.</param>
      <param name="rowNumber">Number of rows in this hyperlink range.</param>
      <param name="columnNumber">Number of columns of this hyperlink range.</param>
      <param name="address">Address of the hyperlink.</param>
      <returns>
        <see cref="T:Aspose.Cells.Hyperlink" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.Hyperlinks.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Hyperlink" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.ICustomFunction">
      <summary>
            Allows users to add their custom formula calculation functions to extend the calculation engine.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ICustomFunction.CalculateCustomFunction(System.String,System.Collections.ArrayList,System.Collections.ArrayList)">
      <summary>
            Calculates the result of custom function.
            </summary>
      <param name="functionName">Custom function name, such as "MyFunc1".</param>
      <param name="paramsList">A list of parameters value for custom functions.</param>
      <param name="contextObjects">A list of context objects.</param>
      <returns>Result of custom function.</returns>
      <remarks>Currently there are 3 fixed context objects and some varialbe context objects:
            <p>1. Current Workbook object.</p><p>2. Current Worksheet object.</p><p>3. Current Cell object.</p><p>Others are custom function parameters text.</p>
            If a custom function name is not supported, please return a null reference.</remarks>
    </member>
    <member name="T:Aspose.Cells.Label">
      <summary>
            Encapsulates the object that represents a label in a spreadsheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Label.Text">
      <summary>
            Represents the string in this Label object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Legend">
      <summary>
            Encapsulates the object that represents the chart legend.
            </summary>
      <example>
        <code>
            [C#]
            
            //Set Legend's width and height
            Legend legend = chart.Legend;
            
            //Legend is at right side of chart by default.
            //If the legend is at left or right side of the chart, setting Lengend.X property will not take effect.
            //If the legend is at top or bottom side of the chart, setting Lengend.Y property will not take effect.
            legend.Y = 1500;
            legend.Width = 50;
            legend.Height = 50; 
            
            [Visual Basic]
            
            'Set Legend's width and height
            Dim legend as Legend = chart.Legend
            
            'Legend is at right side of chart by default.
            'If the legend is at left or right side of the chart, setting Lengend.X property will not take effect.
            'If the legend is at top or bottom side of the chart, setting Lengend.Y property will not take effect.
            legend.Y = 1500
            legend.Width = 50
            legend.Height = 50 
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Legend.Position">
      <summary>
            Gets or sets the legend position type.
            </summary>
      <remarks>
        <br>Default position is right.</br>
        <br>If the legend is at left or right side of the chart, setting Lengend.X property will not take effect.</br>
        <br>If the legend is at top or bottom side of the chart, setting Lengend.Y property will not take effect.</br>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Legend.LegendEntries">
      <summary>
            Gets a collection of all the LegendEntry objects in the specified chart legend.
            Setting the legend entries of the surface chart is not supported.
            So it will return null if the chart type is surface chart type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.LegendEntries">
      <summary>
            A collection of all the LegendEntry objects in the specified chart legend.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LegendEntries.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.LegendEntry" /> element at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.LegendEntry">
      <summary>
            Represents a legend entry in a chart legend. 
            The LegendEntry object is a member of the LegendEntries collection. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.LegendEntry.TextFont">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Font" /> object of the specified ChartFrame object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LegendEntry.AutoScaleFont">
      <summary>
            True if the text in the object changes font size when the object size changes. 
            The default value is True. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.LegendEntry.Background">
      <summary>
            Gets and sets the display mode of the background
            </summary>
    </member>
    <member name="T:Aspose.Cells.LegendPositionType">
      <summary>
            Enumerates the legend position types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LegendPositionType.Bottom">
      <summary>
             Displays the legend to the bottom of the chart's plot area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LegendPositionType.Corner">
      <summary>
             Displays the legend to the corner of the chart's plot area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LegendPositionType.Left">
      <summary>
             Displays the legend to the left of the chart's plot area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LegendPositionType.NotDocked">
      <summary>
             Represents that the legend is not docked.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LegendPositionType.Right">
      <summary>
             Displays the legend to the right of the chart's plot area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LegendPositionType.Top">
      <summary>
             Displays the legend to the top of the chart's plot area.
            </summary>
    </member>
    <member name="T:Aspose.Cells.License">
      <summary>
            Provides methods to license the component.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code></example>
    </member>
    <member name="M:Aspose.Cells.License.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code></example>
    </member>
    <member name="M:Aspose.Cells.License.SetLicense(System.String)">
      <summary>
            Licenses the component.
            </summary>
      <param name="licenseName">Can be a full or short file name or name of an embedded resource.
            Use an empty string to switch to evaluation mode.</param>
      <remarks>
        <p>Tries to find the license in the following locations:</p>
        <p>1. Explicit path.</p>
        <p>2. The folder of the component assembly.</p>
        <p>3. The folder of the client's calling assembly.</p>
        <p>4. The folder of the entry assembly.</p>
        <p>5. An embedded resource in the client's calling assembly.</p>
        <p>
          <b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
        <p>1. Explicit path.</p>
        <p>2. An embedded resource in the client's calling assembly.</p>
      </remarks>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As License = New License
            license.SetLicense("MyLicense.lic")
            </code></example>
    </member>
    <member name="M:Aspose.Cells.License.SetLicense(System.IO.Stream)">
      <summary>
            Licenses the component.
            </summary>
      <param name="stream">A stream that contains the license.</param>
      <remarks>
        <p>Use this method to load a license from a stream.</p>
      </remarks>
      <example>
        <code>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            
            
            [Visual Basic]
            
            Dim license as License = new License
            license.SetLicense(myStream)
            </code>
      </example>
    </member>
    <member name="T:Aspose.Cells.LineShape">
      <summary>
            Represents the line shape.
            </summary>
    </member>
    <member name="T:Aspose.Cells.LineType">
      <summary>
            Enumerates the type of <see cref="T:Aspose.Cells.Picture" /> border or <see cref="T:Aspose.Cells.Chart" /> line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LineType.DarkGray">
      <summary>
            Represents a dark gray line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LineType.Dash">
      <summary>
            Represent a dash line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LineType.DashDot">
      <summary>
            Represents a dash-dot line
            </summary>
    </member>
    <member name="F:Aspose.Cells.LineType.DashDotDot">
      <summary>
            Represents a dash-dot-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LineType.Dot">
      <summary>
            Represents a dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LineType.LightGray">
      <summary>
            Represents a light gray line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LineType.MediumGray">
      <summary>
            Represents a medium gray line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LineType.Solid">
      <summary>
            Represent a solid line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ListBox">
      <summary>
      </summary>
    </member>
    <member name="M:Aspose.Cells.ListBox.IsSelected(System.Int32)">
      <summary>
            Indicates whether the item is selected.
            </summary>
      <param name="itemIndex">The item index.</param>
      <returns>whether the item is selected.</returns>
    </member>
    <member name="P:Aspose.Cells.ListBox.LinkedCell">
      <summary>
            Gets or sets the worksheet range linked to the control's value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ListBox.InputRange">
      <summary>
            Gets or sets the worksheet range used to fill the specified list box. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ListBox.SelectedIndex">
      <summary>
            Gets or sets the index number of the currently selected item in a list box or combo box.
            Zero-based.
            </summary>
      <remarks>-1 presents no item is selected.</remarks>
    </member>
    <member name="P:Aspose.Cells.ListBox.Shadow">
      <summary>
            Indicates whether the combobox has 3-D shading.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ListBox.SelectionType">
      <summary>
            Gets or sets the selection mode of the specified list box. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.MsoDrawingType">
      <summary>
            Represents office drawing objects type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.Group">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.Line">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.Rectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.Oval">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.Arc">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.Chart">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.TextBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.Button">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.Picture">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.Polygon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.CheckBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.RadioButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.Label">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.DialogBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.Spinner">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.ScrollBar">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.ListBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.GroupBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.ComboBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.Comment">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.OleObject">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.MsoDrawingType.MsoOfficeDrawing">
      <summary>
            Only for preserving the drawing object in the template file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.MsoFillFormat">
      <summary>
            Represents fill formatting for a shape. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.MsoFillFormat.ForeColor">
      <summary>
            Gets and sets the fill fore color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.MsoFillFormat.BackColor">
      <summary>
            Gets and sets the file back color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.MsoFillFormat.IsVisible">
      <summary>
            Indicats whether there is fill. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.MsoLineDashStyle">
      <summary>
            Represents style of dash drawing lines.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineDashStyle.Dash">
      <summary>
            Represent a dash line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineDashStyle.DashDot">
      <summary>
            Represents a dash-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineDashStyle.DashDotDot">
      <summary>
             Represents a dash-dot-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineDashStyle.DashLongDash">
      <summary>
             Represents a long dash-short dash line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineDashStyle.DashLongDashDot">
      <summary>
            Represents a long dash-short dash-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineDashStyle.RoundDot">
      <summary>
            Represents a round-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineDashStyle.Solid">
      <summary>
            Represent a solid line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineDashStyle.SquareDot">
      <summary>
            Represents a square-dot line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.MsoLineFormat">
      <summary>
            Represents line and arrowhead formatting.
            </summary>
    </member>
    <member name="P:Aspose.Cells.MsoLineFormat.IsVisible">
      <summary>
            Indicates whether the object is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.MsoLineFormat.Style">
      <summary>
            Returns a Style object that represents the style of the specified range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.MsoLineFormat.ForeColor">
      <summary>
            Gets and sets the border line fore color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.MsoLineFormat.BackColor">
      <summary>
            Gets and sets the border line back color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.MsoLineFormat.DashStyle">
      <summary>
            Gets or sets the dash style for the specified line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.MsoLineFormat.Transparency">
      <summary>
            Returns or sets the degree of transparency of the specified fill as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="P:Aspose.Cells.MsoLineFormat.Weight">
      <summary>
            Returns or sets the weight of the line ,in units of pt.
            </summary>
    </member>
    <member name="T:Aspose.Cells.MsoLineStyle">
      <summary>
            Represents style of drawing lines.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineStyle.Single">
      <summary>
            Single line (of width lineWidth)
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineStyle.ThickBetweenThin">
      <summary>
            Three lines, thin, thick, thin
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineStyle.ThinThick">
      <summary>
            Double lines, one thin, one thick
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineStyle.ThickThin">
      <summary>
            Double lines, one thick, one thin
            </summary>
    </member>
    <member name="F:Aspose.Cells.MsoLineStyle.ThinThin">
      <summary>
            Double lines of equal width
            </summary>
    </member>
    <member name="T:Aspose.Cells.MsoTextFrame">
      <summary>
            Represents the text frame in a Shape object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.MsoTextFrame.AutoSize">
      <summary>
            Indicates if size of shape is adjusted automatically according to its content.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Name">
      <summary>
            Represents a defined name for a range of cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.Text">
      <summary>
            Gets the name text of the object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.RefersTo">
      <summary>
            Returns or sets the formula that the name is defined to refer to, beginning with an equal sign.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Names">
      <summary>
            Represents a collection of all the Name objects in the spreadsheet. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Names.Add(System.String)">
      <summary>
            Defines a new name.
            </summary>
      <param name="text">The text to use as the name.</param>
      <returns>
        <see cref="T:Aspose.Cells.Name" /> object index.</returns>
      <remarks>Name cannot include spaces and cannot look like cell references.</remarks>
    </member>
    <member name="P:Aspose.Cells.Names.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Name" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.Names.Item(System.String)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Name" /> element with the specified name.
             </summary>
      <param name="text">Name text.</param>
      <returns>The element with the specified name.</returns>
    </member>
    <member name="T:Aspose.Cells.NSeries">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.ASeries" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.NSeries.Add(System.String,System.Boolean)">
      <summary>
            Adds the <see cref="T:Aspose.Cells.NSeries" /> collection to a chart.
            </summary>
      <param name="area">Specifies values from which to plot the data series</param>
      <param name="isVertical">Specifies whether to plot the series from a range of cell values by row or by column.</param>
      <remarks>
        <br>If set data on contiguous cells, use colon to seperate them.For example, C2:C5.</br>
        <br>If set data on contiguous cells, use comma to seperate them.For example, C2,D5.</br>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.NSeries.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.ASeries" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.NSeries.CategoryData">
      <summary>
            Gets or sets the range of category Axis values. 
             It can be a range of cells (such as, "d1:e10"), 
             or a sequence of values (such as,"{2,6,8,10}"). 
             </summary>
    </member>
    <member name="P:Aspose.Cells.NSeries.SecondCatergoryData">
      <summary>
            Gets or sets the range of second category Axis values. 
             It can be a range of cells (such as, "d1:e10"), 
             or a sequence of values (such as,"{2,6,8,10}"). 
             Only effects when some ASerieses plot on the second axis.
             </summary>
    </member>
    <member name="P:Aspose.Cells.NSeries.IsColorVaried">
      <summary>
            Represents if the color of points is varied. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.OleFileType">
      <summary>
            Ole object file type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OleFileType.Xls">
      <summary>
            Represets the Ms Excel file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OleFileType.Doc">
      <summary>
            Represents the Ms word document.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OleFileType.Ppt">
      <summary>
            Represents the Power Point.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OleFileType.Pdf">
      <summary>
            Represents the Acrobat Document.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OleFileType.Unknown">
      <summary>
            Unknown file type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.OleObject">
      <summary>
            Represents an OleObject in a worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.OleObject.ImageData">
      <summary>
            Represents image of ole object as byte array.
            </summary>
    </member>
    <member name="P:Aspose.Cells.OleObject.ObjectData">
      <summary>
            Represents embedded ole object data as byte array.
            </summary>
    </member>
    <member name="P:Aspose.Cells.OleObject.FileType">
      <summary>
            Gets and sets the file type of the embedded ole object data
            </summary>
    </member>
    <member name="T:Aspose.Cells.OleObjects">
      <summary>
            Represents embedded OLE objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.OleObjects.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])">
      <summary>
            Adds an OleObject to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="height">Height of oleObject, in unit of pixel.</param>
      <param name="width">Width of oleObject, in unit of pixel.</param>
      <param name="imageData"> Image of ole object as byte array.</param>
      <returns>
        <see cref="T:Aspose.Cells.OleObject" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.OleObjects.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.OleObject" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.OperatorType">
      <summary>
            Represents the operator type of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.Between">
      <summary>
            Represents Between operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.Equal">
      <summary>
            Represents Equal operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.GreaterThan">
      <summary>
            Represents GreaterThan operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.GreaterOrEqual">
      <summary>
            Represents GreaterOrEqual operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.LessThan">
      <summary>
            Represents LessThan operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.LessOrEqual">
      <summary>
            Represents LessOrEqual operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.None">
      <summary>
            Represents no comparision.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.NotBetween">
      <summary>
            Represents NotBetween operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.NotEqual">
      <summary>
            Represents NotEqual operator of conditional format and data validation.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Outline">
      <summary>
            Represents an outline on a worksheet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Outline.SummaryRowBelow">
      <summary>
            Indicates if the summary row will be positioned below the detail rows in the outline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Outline.SummaryColumnRight">
      <summary>
            Indicates if the summary column will be positioned to the right of the detail columns in the outline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Oval">
      <summary>
            Represents the oval shape.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PageOrientationType">
      <summary>
            Represents print orientation constants.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PageOrientationType.Landscape">
      <summary>
            Landscape orientation
            </summary>
    </member>
    <member name="F:Aspose.Cells.PageOrientationType.Portrait">
      <summary>
            Portrait orientation
            </summary>
    </member>
    <member name="T:Aspose.Cells.PageSetup">
      <summary>
            Encapsulates the object that represents the page setup description. 
            The PageSetup object contains all page setup options.
            </summary>
      <example>
        <code>
            [C#]
            sheet.PageSetup.PrintArea = "D1:K13";
            sheet.PageSetup.PrintTitleRows = "$5:$7";
            sheet.PageSetup.PrintTitleColumns = "$A:$B";
            
            [Visual Basic]
            sheet.PageSetup.PrintArea = "D1:K13"
            sheet.PageSetup.PrintTitleRows = "$5:$7"
            sheet.PageSetup.PrintTitleColumns = "$A:$B"
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetHeader(System.Int32)">
      <summary>
             Gets a script formatting the header of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetFooter(System.Int32)">
      <summary>
             Gets a script formatting the footer of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetHeader(System.Int32,System.String)">
      <summary>
             Sets a script formatting the header of an Excel file.
             </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="headerScript">Header format script.</param>
      <remarks>
        <p>Script commands:</p>
        <table class="dtTABLE" cellspacing="0">
          <tr>
            <td width="25%">
              <font color="gray">
                <b>Command</b>
              </font>　</td>
            <td width="75%">
              <font color="gray">
                <b>Description</b>
              </font>　</td>
          </tr>
          <tr>
            <td width="25%">&amp;P</td>
            <td width="75%">Current page number　</td>
          </tr>
          <tr>
            <td width="25%">&amp;N</td>
            <td width="75%">Page count　</td>
          </tr>
          <tr>
            <td width="25%">&amp;D</td>
            <td width="75%">Current date　</td>
          </tr>
          <tr>
            <td width="25%">&amp;T</td>
            <td width="75%">Current time</td>
          </tr>
          <tr>
            <td width="25%">&amp;A</td>
            <td width="75%">Sheet name</td>
          </tr>
          <tr>
            <td width="25%">&amp;F</td>
            <td width="75%">File name without path</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;FontName&gt;"</td>
            <td width="75%">Font name, for exampe: &amp;"Arial"</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;FontName&gt;, &lt;FontStyle&gt;"</td>
            <td width="75%">Font name and font style, for exampe: &amp;"Arial,Bold"</td>
          </tr>
          <tr>
            <td width="25%">&amp;&lt;FontSize&gt;</td>
            <td width="75%">Font size.If this command is followed by a plain number to be printed in the header, it will be separated from the font height with a space character.</td>
          </tr>
          <tr>
            <td width="25%">&amp;G</td>
            <td width="75%">Image script</td>
          </tr>
        </table>
            For example: "&amp;Arial,Bold&amp;8Header Note"
             </remarks>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetFooter(System.Int32,System.String)">
      <summary>
             Sets a script formatting the footer of an Excel file.
             </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="footerScript">Footer format script.</param>
      <remarks>
        <p>Script commands:</p>
        <table class="dtTABLE" cellspacing="0">
          <tr>
            <td width="25%">
              <font color="gray">
                <b>Command</b>
              </font>　</td>
            <td width="75%">
              <font color="gray">
                <b>Description</b>
              </font>　</td>
          </tr>
          <tr>
            <td width="25%">&amp;P</td>
            <td width="75%">Current page number　</td>
          </tr>
          <tr>
            <td width="25%">&amp;N</td>
            <td width="75%">Page count　</td>
          </tr>
          <tr>
            <td width="25%">&amp;D</td>
            <td width="75%">Current date　</td>
          </tr>
          <tr>
            <td width="25%">&amp;T</td>
            <td width="75%">Current time</td>
          </tr>
          <tr>
            <td width="25%">&amp;A</td>
            <td width="75%">Sheet name</td>
          </tr>
          <tr>
            <td width="25%">&amp;F</td>
            <td width="75%">File name without path</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;FontName&gt;"</td>
            <td width="75%">Font name, for exampe: &amp;"Arial"</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;FontName&gt;, &lt;FontStyle&gt;"</td>
            <td width="75%">Font name and font style, for exampe: &amp;"Arial,Bold"</td>
          </tr>
          <tr>
            <td width="25%">&amp;&lt;FontSize&gt;</td>
            <td width="75%">Font size.If this command is followed by a plain number to be printed in the header, it will be separated from the font height with a space character.</td>
          </tr>
          <tr>
            <td width="25%">&amp;G</td>
            <td width="75%">Image script</td>
          </tr>
        </table>
            For example: "&amp;Arial,Bold&amp;8Footer Note"
             </remarks>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetHeaderPicture(System.Int32,System.Byte[])">
      <summary>
            Sets an image in the header of a worksheet.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="headerPicture">Image data.</param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetFooterPicture(System.Int32,System.Byte[])">
      <summary>
            Sets an image in the footer of a worksheet.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="footerPicture">Image data.</param>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintTitleColumns">
      <summary>
            Represents the columns that contain the cells to be repeated on the left side of each page.
            </summary>
      <example>
        <code>
            [C#]
            
            cells.PageSetup.PrintTitleColumns = "$A:$A";
            
            [Visula Basic]
            
            cells.PageSetup.PrintTitleColumns = "$A:$A"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintTitleRows">
      <summary>
            Represents the rows that contain the cells to be repeated at the top of each page.
            </summary>
      <example>
        <code>
            [C#]
            
            cells.PageSetup.PrintTitleRows = "$1:$1";
            
            [Visula Basic]
            
            cells.PageSetup.PrintTitleRows = "$1:$1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.PageSetup.BlackAndWhite">
      <summary>
            Represents if elements of the document will be printed in black and white.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.CenterHorizontally">
      <summary>
            Represent if the sheet is printed centered horizontally.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.CenterVertically">
      <summary>
            Represent if the sheet is printed centered vertically.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.Draft">
      <summary>
            Represents if the sheet will be printed without graphics.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FooterMargin">
      <summary>
            Represents the distance from the bottom of the page to the footer, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FooterMarginInch">
      <summary>
            Represents the distance from the bottom of the page to the footer, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.HeaderMargin">
      <summary>
            Represents the distance from the top of the page to the header, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.HeaderMarginInch">
      <summary>
            Represents the distance from the top of the page to the header, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.LeftMargin">
      <summary>
            Represents the size of the left margin, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.LeftMarginInch">
      <summary>
            Represents the size of the left margin, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.RightMargin">
      <summary>
            Represents the size of the right margin, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.RightMarginInch">
      <summary>
            Represents the size of the right margin, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.TopMargin">
      <summary>
            Represents the size of the top margin, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.TopMarginInch">
      <summary>
            Represents the size of the top margin, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.BottomMargin">
      <summary>
            Represents the size of the bottom margin, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.BottomMarginInch">
      <summary>
            Represents the size of the bottom margin, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FirstPageNumber">
      <summary>
            Represents the first page number that will be used when this sheet is printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FitToPagesTall">
      <summary>
            Represents  the number of pages tall the worksheet will be scaled to when it's printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FitToPagesWide">
      <summary>
            Represents the number of pages wide the worksheet will be scaled to when it's printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.Order">
      <summary>
            Represents the order that Microsoft Excel uses to number pages when printing a large worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PaperSize">
      <summary>
            Represents the size of the paper.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.Orientation">
      <summary>
            Represents page print orientation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintComments">
      <summary>
            Represents the way comments are printed with the sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintErrors">
      <summary>
            Specifies the type of print error displayed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintHeadings">
      <summary>
            Represents if row and column headings are printed with this page.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintGridlines">
      <summary>
            Represents if cell gridlines are printed on the page.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.Zoom">
      <summary>
            Represents the scaling factor in percent. It should be between 10 and 400.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintQuality">
      <summary>
            Represents the print quality.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintArea">
      <summary>
            Represents the range to be printed.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PaperSizeType">
      <summary>
            Represents paper size constants.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper10x14">
      <summary>
            10 in. x 14 in.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper11x17">
      <summary>
            11 in. x 17 in.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA3">
      <summary>
            A3 (297 mm x 420 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4">
      <summary>
            A4 (210 mm x 297 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4Small">
      <summary>
            A4 Small (210 mm x 297 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA5">
      <summary>
            A5 (148 mm x 210 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperB4">
      <summary>
            B4 (250 mm x 354 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperB5">
      <summary>
            B5 (182 mm x 257 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperCSheet">
      <summary>
            C size sheet
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperDSheet">
      <summary>
            D size sheet
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope10">
      <summary>
            Envelope #10 (4-1/8 in. x 9-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope11">
      <summary>
            Envelope #11 (4-1/2 in. x 10-3/8 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope12">
      <summary>
            Envelope #12 (4-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope14">
      <summary>
            Envelope #14 (5 in. x 11-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope9">
      <summary>
            Envelope #9 (3-7/8 in. x 8-7/8 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeB4">
      <summary>
            Envelope B4 (250 mm x 353 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeB5">
      <summary>
            Envelope B5 (176 mm x 250 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeB6">
      <summary>
            Envelope B6 (176 mm x 125 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC3">
      <summary>
            Envelope C3 (324 mm x 458 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC4">
      <summary>
            Envelope C4 (229 mm x 324 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC5">
      <summary>
            Envelope C5 (162 mm x 229 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC6">
      <summary>
            Envelope C6 (114 mm x 162 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC65">
      <summary>
            Envelope C65 (114 mm x 229 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeDL">
      <summary>
            Envelope DL (110 mm x 220 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeItaly">
      <summary>
            Envelope Italy (110 mm x 230 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeMonarch">
      <summary>
            Envelope Monarch (3-7/8 in. x 7-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopePersonal">
      <summary>
            Envelope (3-5/8 in. x 6-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperESheet">
      <summary>
            E size sheet
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperExecutive">
      <summary>
            Executive (7-1/2 in. x 10-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperFanfoldLegalGerman">
      <summary>
            German Legal Fanfold (8-1/2 in. x 13 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperFanfoldStdGerman">
      <summary>
            German Standard Fanfold (8-1/2 in. x 12 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperFanfoldUS">
      <summary>
            U.S. Standard Fanfold (14-7/8 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperFolio">
      <summary>
            Folio (8-1/2 in. x 13 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLedger">
      <summary>
            Ledger (17 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLegal">
      <summary>
            Legal (8-1/2 in. x 14 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetter">
      <summary>
            Letter (8-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterSmall">
      <summary>
            Letter Small (8-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperNote">
      <summary>
            Note (8-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperQuarto">
      <summary>
            Quarto (215 mm x 275 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperStatement">
      <summary>
            Statement (5-1/2 in. x 8-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperTabloid">
      <summary>
            Tabloid (11 in. x 17 in.) 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Picture">
      <summary>
            Encapsulates the object that represents a single picture in a spreadsheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Picture.Move(System.Int32,System.Int32)">
      <summary>
            Moves the picture to a specified location.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
    </member>
    <member name="P:Aspose.Cells.Picture.OriginalHeight">
      <summary>
            Gets the original height of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Picture.OriginalWidth">
      <summary>
            Gets the original width of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Picture.BorderLineColor">
      <summary>
            Represents the <see cref="T:System.Drawing.Color" /> of the border line of a picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Picture.BorderWeight">
      <summary>
            Gets or sets the weight of the border line of a picture in units of pt.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pictures">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Picture" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pictures.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
      <param name="stream">Stream object which contains the image data.</param>
      <returns>
        <see cref="T:Aspose.Cells.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pictures.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
      <param name="fileName">Image filename.</param>
      <returns>
        <see cref="T:Aspose.Cells.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pictures.Add(System.Int32,System.Int32,System.IO.Stream)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="stream">Stream object which contains the image data.</param>
      <returns>
        <see cref="T:Aspose.Cells.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pictures.Add(System.Int32,System.Int32,System.String)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="fileName">Image filename.</param>
      <returns>
        <see cref="T:Aspose.Cells.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pictures.Add(System.Int32,System.Int32,System.IO.Stream,System.Int32,System.Int32)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="stream">Stream object which contains the image data.</param>
      <param name="widthScale">Scale of image width, a percentage.</param>
      <param name="heightScale">Scale of image width, a percentage.</param>
      <returns>
        <see cref="T:Aspose.Cells.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pictures.Add(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="fileName">Image filename.</param>
      <param name="widthScale">Scale of image width, a percentage.</param>
      <param name="heightScale">Scale of image width, a percentage.</param>
      <returns>
        <see cref="T:Aspose.Cells.Picture" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.Pictures.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Picture" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.PivotField">
      <summary>
            Represents a field in a PivotTable report.
            </summary>
    </member>
    <member name="M:Aspose.Cells.PivotField.SetSubtotals(Aspose.Cells.PivotFieldSubtotalType,System.Boolean)">
      <summary>
            Sets whether the specified field shows that subtotals.
            </summary>
      <param name="subtotalType">subtotals type.</param>
      <param name="shown">whether the specified field shows that subtotals.</param>
      <see cref="T:Aspose.Cells.PivotFieldSubtotalType" />
    </member>
    <member name="M:Aspose.Cells.PivotField.GetSubtotals(Aspose.Cells.PivotFieldSubtotalType)">
      <summary>
            Gets whether the specified field shows that subtotals.
            </summary>
      <param name="subtotalType">subtotals type.</param>
      <returns>whether the specified field shows that subtotals.</returns>
    </member>
    <member name="M:Aspose.Cells.PivotField.IsHiddenItem(System.Int32)">
      <summary>
            Indicates whether the specific PivotItem is hidden.
            </summary>
      <param name="index">the index of the pivotItem in the pivotField.</param>
      <returns>whether the specific PivotItem is hidden</returns>
    </member>
    <member name="M:Aspose.Cells.PivotField.HideItem(System.Int32,System.Boolean)">
      <summary>
             Sets whether the specific PivotItem in a data field is hidden.
            </summary>
      <param name="index">the index of the pivotItem in the pivotField.</param>
      <param name="isHidden">whether the specific PivotItem is hidden</param>
    </member>
    <member name="P:Aspose.Cells.PivotField.Position">
      <summary>
            Represents the PivotField index in the PivotFields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.Name">
      <summary>
            Represents the PivotField name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.DisplayName">
      <summary>
            Represents the PivotField display name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.IsAutoSubtotals">
      <summary>
            Indicates whether the specified field shows automatic subtotals. Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.DragToColumn">
      <summary>
            Indicates whether the specified field can be dragged to the column position.
            The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.DragToHide">
      <summary>
             Indicates whether the specified field can be dragged to the hide position.
             The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.DragToRow">
      <summary>
            Indicates whether the specified field can be dragged to the row position.
            The default value is true. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.DragToPage">
      <summary>
            Indicates whether the specified field can be dragged to the page position.
             The default value is true.  
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.ShowAllItems">
      <summary>
            Indicates whether all items in the PivotTable report are displayed, 
            even if they don't contain summary data.
            The default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.IsAutoSort">
      <summary>
            Indicates whether the specified PivotTable field is automatically sorted.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.IsAscendSort">
      <summary>
            Indicates whether the specified PivotTable field is autosorted ascending.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.AutoSortField">
      <summary>
            Represents auto sort field index. -1 means PivotField itself.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.IsAutoShow">
      <summary>
            Indicates whether the specified PivotTable field is automatically shown.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.IsAscendShow">
      <summary>
            Indicates whether the specified PivotTable field is autoshown ascending.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.AutoShowCount">
      <summary>
            Represent the number of top or bottom items
            that are automatically shown in the specified PivotTable field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.AutoShowField">
      <summary>
            Represents auto show field index. -1 means PivotField itself.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.Function">
      <summary>
            Represents the function used to summarize the PivotTable data field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.DataDisplayFormat">
      <summary>
            Represents how to display the values contained in a data field.
            </summary>
      <see cref="T:Aspose.Cells.PivotFieldDataDisplayFormat" />
    </member>
    <member name="P:Aspose.Cells.PivotField.BaseField">
      <summary>
            Represents the base field for a custom calculation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.BaseItemPostion">
      <summary>
             Represents the item in the base field for a custom calculation.
             Valid only for data fields. 
            </summary>
      <see cref="T:Aspose.Cells.PivotItemPosition" />
    </member>
    <member name="P:Aspose.Cells.PivotField.BaseItem">
      <summary>
             Represents the item in the base field for a custom calculation.
             Valid only for data fields. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.CurrentPageItem">
      <summary>
            Represents the current page item showing for the page field (valid only for page fields). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotField.Number">
      <summary>
            Represents the built-in display format of numbers and dates.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PivotFieldDataDisplayFormat">
      <summary>
            Represents data display format in the PivotTable data field.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldDataDisplayFormat.Normal">
      <summary>
            Represents normal dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldDataDisplayFormat.DifferenceFrom">
      <summary>
             Represents difference from dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldDataDisplayFormat.PercentageOf">
      <summary>
            Represents percentage of dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldDataDisplayFormat.PercentageDifferenceFrom">
      <summary>
            Represents percentage difference from  display format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldDataDisplayFormat.RunningTotalIn">
      <summary>
            Represents running total in dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldDataDisplayFormat.PercentageOfRow">
      <summary>
            Represents percentage of row dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldDataDisplayFormat.PercentageOfColumn">
      <summary>
            Represents percentage of column dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldDataDisplayFormat.PercentageOfTotal">
      <summary>
            Represents percentage of total dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldDataDisplayFormat.Index">
      <summary>
            Represents index dispaly format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PivotFields">
      <summary>
            Represents a collection of all the PivotField objects 
            in the PivotTable's specific PivotFields type.
            </summary>
    </member>
    <member name="M:Aspose.Cells.PivotFields.AddByBaseIndex(System.Int32)">
      <summary>
            Adds a PivotField Object to the specific type PivotFields.
            </summary>
      <param name="baseFieldIndex">field index in the base PivotFields.</param>
      <returns>the index of  the PivotField Object in this PivotFields.</returns>
    </member>
    <member name="M:Aspose.Cells.PivotFields.Add(Aspose.Cells.PivotField)">
      <summary>
            Adds a PivotField Object to the specific type PivotFields.
            </summary>
      <param name="pivotField">a PivotField Object.</param>
      <returns>the index of  the PivotField Object in this PivotFields.</returns>
    </member>
    <member name="P:Aspose.Cells.PivotFields.Type">
      <summary>
             Gets the PivotFields type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotFields.Count">
      <summary>
            Gets the count of the pivotFields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotFields.Item(System.Int32)">
      <summary>
            Gets the PivotField Object at the specific index.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PivotFieldSubtotalType">
      <summary>
            Summary description for PivotFieldSubtotalType.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.None">
      <summary>
            Represents None subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.Automatic">
      <summary>
            Represents Automatic subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.Sum">
      <summary>
            Represents Sum subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.Count">
      <summary>
            Represents Count subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.Average">
      <summary>
            Represents Average subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.Max">
      <summary>
            Represents Max subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.Min">
      <summary>
            Represents Min subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.Product">
      <summary>
            Represents Product subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.CountNums">
      <summary>
            Represents Count Nums subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.Stdev">
      <summary>
            Represents Stdev subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.Stdevp">
      <summary>
            Represents Stdevp subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.Var">
      <summary>
            Represents Var subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldSubtotalType.Varp">
      <summary>
            Represents Varp subtotal type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PivotFieldType">
      <summary>
            Represents PivotTable field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldType.Undefined">
      <summary>
            Presents base pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldType.Row">
      <summary>
            Presents row pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldType.Column">
      <summary>
            Presents column pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldType.Page">
      <summary>
            Presents page pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotFieldType.Data">
      <summary>
            Presents data pivot field type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PivotItemPosition">
      <summary>
            Represents PivotTable base item Next/Previous/All position in the base field .
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotItemPosition.Previous">
      <summary>
            Represents Previous pivot field base item.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotItemPosition.Next">
      <summary>
            Represents Next pivot field base item.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotItemPosition.All">
      <summary>
            Represents All pivot field base item.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PivotPageFields">
      <summary>
            Represents the pivot page field items 
            if the pivot table data source is consolidation ranges.
            It only can contain up to 4 fields.
            </summary>
    </member>
    <member name="M:Aspose.Cells.PivotPageFields.AddPageField(System.String[])">
      <summary>
            Adds a page field.
            </summary>
      <param name="pageItems">Page field item label</param>
    </member>
    <member name="M:Aspose.Cells.PivotPageFields.AddIdentify(System.Int32,System.Int32[])">
      <summary>
            Sets which item label in each page field to use to identify the data range.
            The pageItemIndex.Length must be equal to PageFieldCount, so please add the page field first.
            </summary>
      <param name="rangeIndex">The consilidation data range index.</param>
      <param name="pageItemIndex">The page item index in the each page field.
            pageItemIndex[2] = 1 means the seconde item in the third field to use to identify this range.
            pageItemIndex[1] = -1 means no item in the second field to use to identify this range 
            and MS will auto create "blank" item in the second field  to identify this range.
            </param>
    </member>
    <member name="P:Aspose.Cells.PivotPageFields.PageFieldCount">
      <summary>
            Gets the number of page fields.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PivotTable">
      <summary>
            Summary description for PivotTable.
            </summary>
    </member>
    <member name="M:Aspose.Cells.PivotTable.AddFieldToArea(Aspose.Cells.PivotFieldType,System.Int32)">
      <summary>
            Adds the field to the specific area.
            </summary>
      <param name="fieldType">The fields area type.</param>
      <param name="baseFieldIndex">The field index in the base fields.</param>
      <returns>The field position in the specific fields.</returns>
      <see cref="M:Aspose.Cells.PivotTable.AddFieldToArea(Aspose.Cells.PivotFieldType,Aspose.Cells.PivotField)" />
    </member>
    <member name="M:Aspose.Cells.PivotTable.AddFieldToArea(Aspose.Cells.PivotFieldType,Aspose.Cells.PivotField)">
      <summary>
            Adds the field to the specific area.
            </summary>
      <param name="fieldType">the fields area type.It could be one of the following
                      values: <table border="1"><tr><td>PivotFieldType.Row</td></tr><tr><td>PivotFieldType.Column</td></tr><tr><td>PivotFieldType.Data</td></tr><tr><td>PivotFieldType.Page</td></tr></table></param>
      <param name="pivotField">the field in the base fields.</param>
      <returns>the field position in the specific fields.</returns>
    </member>
    <member name="M:Aspose.Cells.PivotTable.Fields(Aspose.Cells.PivotFieldType)">
      <summary>
            Gets the specific fields by the field type.
            </summary>
      <param name="fieldType">the field type.</param>
      <returns>the specific fields</returns>
    </member>
    <member name="M:Aspose.Cells.PivotTable.Move(System.Int32,System.Byte)">
      <summary>
             Moves the PivotTable to a different location in the worksheet.
            </summary>
      <param name="row">row index.</param>
      <param name="column">column index.</param>
    </member>
    <member name="M:Aspose.Cells.PivotTable.Move(System.String)">
      <summary>
            Moves the PivotTable to a different location in the worksheet.
            </summary>
      <param name="destCellName">the dest cell name.</param>
    </member>
    <member name="P:Aspose.Cells.PivotTable.ColumnFields">
      <summary>
            Returns a PivotFields object that are currently shown as column fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.RowFields">
      <summary>
            Returns a PivotFields object that are currently shown as row fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.PageFields">
      <summary>
            Returns a PivotFields object that are currently shown as page fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.DataFields">
      <summary>
            Gets a PivotField object that represents all the data fields in a PivotTable.
            Read-only.It would be init only when there are two or more data fields in the DataPiovtFiels.
            It only use to add DataPivotField to the PivotTable row/column area . Default is in row area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.DataField">
      <summary>
            Gets a PivotField object that represents all the data fields in a PivotTable.
            Read-only.It would be init only when there are two or more data fields in the DataPiovtFiels.
            It only use to add DataPivotField to the PivotTable row/column area . Default is in row area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.BaseFields">
      <summary>
            Returns a PivotFields object that includes all fields in the PivotTable report
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.ColumnRange">
      <summary>
            Returns a CellArea object that represents the range 
            that contains the column area in the PivotTable report. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.RowRange">
      <summary>
            Returns a CellArea object that represents the range 
            that contains the row area in the PivotTable report. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.DataBordyRange">
      <summary>
            Returns a CellArea object that represents the range that contains the data area 
            in the list between the header row and the insert row. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.TableRange1">
      <summary>
            Returns a CellArea object that represents the range containing the entire PivotTable report,
            but doesn't include page fields. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.TableRange2">
      <summary>
            Returns a CellArea object that represents the range containing the entire PivotTable report,
            includes page fields. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.ColumnGrand">
      <summary>
            Indicates whether the PivotTable report shows grand totals for columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.RowGrand">
      <summary>
             Indicates whether the PivotTable report shows grand totals for rows.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.DisplayNullString">
      <summary>
            Indicates whether the PivotTable report displays a custom string
            in cells that contain null values.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.NullString">
      <summary>
            Gets the string displayed in cells that contain null values 
            when the DisplayNullString property is true.The default value is an empty string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.DisplayErrorString">
      <summary>
            Indicates whether the PivotTable report displays a custom string in cells that contain errors.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.ErrorString">
      <summary>
            Gets the string displayed in cells that contain errors 
            when the DisplayErrorString property is true.The default value is an empty string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.IsAutoFormat">
      <summary>
            Indicates whether the PivotTable report is automatically formatted.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.AutoFormatType">
      <summary>
            Gets the PivotTable atuo format type.
            </summary>
      <see cref="T:Aspose.Cells.PivotTableAutoFormatType" />
    </member>
    <member name="P:Aspose.Cells.PivotTable.MergeLabels">
      <summary>
            Indicates whether the specified PivotTable report's outer-row item, column item, subtotal,
            and grand total labels use merged cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.PreserveFormatting">
      <summary>
            Indicates whether formatting is preserved when the PivotTable is refreshed or recalculated.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.EnableDrilldown">
      <summary>
            Gets whether drilldown is enabled.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.EnableFieldDialog">
      <summary>
            Indicates whether the PivotTable Field dialog box is available
            when the user double-clicks the PivotTable field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.EnableFieldList">
      <summary>
            Gets whether enable to display the field list for the PivotTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.EnableWizard">
      <summary>
            Indicates whether the PivotTable Wizard is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.SubtotalHiddenPageItems">
      <summary>
             Indicates whether hidden page field items in the PivotTable report
             are included in row and column subtotals, block totals, and grand totals. 
             The default value is False.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.ManualUpdate">
      <summary>
            Indicates whether the PivotTable report is recalculated only at the user's request.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.Name">
      <summary>
             Gets the name of the PivotTable
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.PageFieldOrder">
      <summary>
            Gets the order in which page fields are added to the PivotTable report's layout.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.PageFieldWrapCount">
      <summary>
            Gets the number of page fields in each column or row in the PivotTable report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.Tag">
      <summary>
            Gets a string saved with the PivotTable report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.SaveData">
      <summary>
            Indicates whether data for the PivotTable report is saved with the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.PrintTitles">
      <summary>
            Indicates whether the print titles for the worksheet are set based
            on the PivotTable report. The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.DisplayImmediateItems">
      <summary>
            Indicates whether items in the row and column areas are visible
            when the data area of the PivotTable is empty. The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PivotTable.IsSelected">
      <summary>
             Indicates whether the PivotTable is selected.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PivotTableAutoFormatType">
      <summary>
            Represents PivotTable auto format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.None">
      <summary>
            Represents None format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Classic">
      <summary>
            Represents Classic auto format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Report1">
      <summary>
            Represents Report1 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Report2">
      <summary>
            Represents Report2 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Report3">
      <summary>
            Represents Report3 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Report4">
      <summary>
            Represents Report4 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Report5">
      <summary>
            Represents Report5 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Report6">
      <summary>
            Represents Report6 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Report7">
      <summary>
            Represents Report7 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Report8">
      <summary>
            Represents Report8 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Report9">
      <summary>
            Represents Report9 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Report10">
      <summary>
            Represents Report10 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Table1">
      <summary>
            Represents Table1 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Table2">
      <summary>
            Represents Table2 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Table3">
      <summary>
            Represents Table3 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Table4">
      <summary>
            Represents Table4 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Table5">
      <summary>
            Represents Table5 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Table6">
      <summary>
            Represents Table6 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Table7">
      <summary>
            Represents Table7 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Table8">
      <summary>
            Represents Table8 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Table9">
      <summary>
            Represents Table9 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableAutoFormatType.Table10">
      <summary>
            Represents Table10 format type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PivotTables">
      <summary>
            Represents the collection of all the PivotTable objects on the specified worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.PivotTables.Add(System.String,System.String,System.String)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="sourceData">The data for the new PivotTable cache.</param>
      <param name="destCellName">The cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.PivotTables.Add(System.String,System.Int32,System.Byte,System.String)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="sourceData">The data cell range for the new PivotTable.Example : Sheet1!A1:C8</param>
      <param name="row">Row index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="column">Column index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.PivotTables.Add(Aspose.Cells.PivotTable,System.String,System.String)">
      <summary>
            Adds a new PivotTable Object to the collection from another PivotTable.
            </summary>
      <param name="pivotTable">The source pivotTable.</param>
      <param name="destCellName">The cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="M:Aspose.Cells.PivotTables.Add(Aspose.Cells.PivotTable,System.Int32,System.Byte,System.String)">
      <summary>
            Adds a new PivotTable Object to the collection from another PivotTable.
            </summary>
      <param name="pivotTable">The source pivotTable.</param>
      <param name="row">Row index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="column">Column index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="M:Aspose.Cells.PivotTables.Add(System.String[],System.Boolean,Aspose.Cells.PivotPageFields,System.String,System.String)">
      <summary>
            Adds a new PivotTable Object to the collection with multiple consolidation ranges as data source.
            </summary>
      <param name="sourceData">The multiple consolidation ranges,such as {"Sheet1!A1:C8","Sheet2!A1:B8"}</param>
      <param name="isAutoPage">Whether auto create a single page field.
            If true,the following param pageFields will be ignored.
            </param>
      <param name="pageFields">The pivot page field items.
            </param>
      <param name="destCellName">destCellName The name of the new PivotTable report.</param>
      <param name="tableName">the name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="M:Aspose.Cells.PivotTables.Add(System.String[],System.Boolean,Aspose.Cells.PivotPageFields,System.Int32,System.Byte,System.String)">
      <summary>
            Adds a new PivotTable Object to the collection with multiple consolidation ranges as data source.
            </summary>
      <param name="sourceData">The multiple consolidation ranges,such as {"Sheet1!A1:C8","Sheet2!A1:B8"}</param>
      <param name="isAutoPage">Whether auto create a single page field.
            If true,the following param pageFields will be ignored</param>
      <param name="pageFields">The pivot page field items.
            </param>
      <param name="row">Row index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="column">Column index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="M:Aspose.Cells.PivotTables.Add(Aspose.Cells.PivotCache,System.Int32,System.Byte,System.String)">
      <summary>
            Adds a new PivotTable object to the collection.
            </summary>
      <param name="pivotCache">The data source memory cache for a PivotTable report.</param>
      <param name="row">Row index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="column">Column index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="P:Aspose.Cells.PivotTables.Item(System.Int32)">
      <summary>
            Gets the PivotTable report by index.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PivotTableSourceType">
      <summary>
            Represents the pivot table data source type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableSourceType.ListDatabase">
      <summary>
            Represents Microsoft Excel list or database.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableSourceType.External">
            
            Represents External data source (Microsoft Query).
            
        </member>
    <member name="F:Aspose.Cells.PivotTableSourceType.Consilidation">
      <summary>
            Represents Multiple consolidation ranges.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PivotTableSourceType.PivotTable">
            
            Represents Another PivotTable.
            
        </member>
    <member name="T:Aspose.Cells.PlacementType">
      <summary>
            Represents the way the drawing object is attached to the cells below it.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PlacementType.FreeFloating">
      <summary>
            Don't move or size with cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PlacementType.Move">
      <summary>
            Move but don't size with cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PlacementType.MoveAndSize">
      <summary>
            Move and size with cells.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintCommentsType">
      <summary>
            Represents the way comments are printed with the sheet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintCommentsType.PrintInPlace">
      <summary>
            Represents to print comments as displayed on sheet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintCommentsType.PrintNoComments">
      <summary>
            Represents not to print comments.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintCommentsType.PrintSheetEnd">
      <summary>
            Represents to print comments at end of sheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintErrorsType">
      <summary>
            Represents print errors constants.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintErrorsType.PrintErrorsBlank">
      <summary>
            Represents not to print errors.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintErrorsType.PrintErrorsDash">
      <summary>
            Represents to print errors as "--".
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintErrorsType.PrintErrorsDisplayed">
      <summary>
            Represents to print errors as displayed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintErrorsType.PrintErrorsNA">
      <summary>
            Represents to print errors as "#N/A".
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintOrderType">
      <summary>
            Represent print order constants.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintOrderType.DownThenOver">
      <summary>
            Down, then over
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintOrderType.OverThenDown">
      <summary>
            Over, then down
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintSizeType">
      <summary>
            Represnts the printed chart size.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintSizeType.Full">
      <summary>
            Use full page.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintSizeType.Fit">
      <summary>
            Scale to fit page.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintSizeType.Custom">
      <summary>
            Custom.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Protection">
      <summary>
            Represents the various types of protection options available for a worksheet. Only used in ExcelXP and above version.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsDeletingColumnsAllowed">
      <summary>
            Represents if the deletion of columns is allowed on a protected worksheet.
            </summary>
      <remarks>The columns containing the cells to be deleted must be unlocked when the sheet is protected,
            and "Select unlocked cells" option must be enabled. </remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.IsDeletingRowsAllowed">
      <summary>
            Represents if the deletion of rows is allowed on a protected worksheet.
            </summary>
      <remarks>The rows containing the cells to be deleted must be unlocked when the sheet is protected,
            and "Select unlocked cells" option must be enabled. </remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.IsFilteringAllowed">
      <summary>
            Represents if the user is allowed to make use of an AutoFilter that was created before the sheet was protected. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsFormattingCellsAllowed">
      <summary>
            Represents if the formatting of cells is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsFormattingColumnsAllowed">
      <summary>
            Represents if the formatting of columns is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsFormattingRowsAllowed">
      <summary>
            Represents if the formatting of rows is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsInsertingColumnsAllowed">
      <summary>
            Represents if the insertion of columns is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsInsertingHyperlinksAllowed">
      <summary>
            Represents if the insertion of hyperlinks is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsInsertingRowsAllowed">
      <summary>
            Represents if the insertion of rows is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsSortingAllowed">
      <summary>
            Represents if the sorting option is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsUsingPivotTablesAllowed">
      <summary>
            Represents if the user is allowed to manipulate pivot tables on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsEditingContentsAllowed">
      <summary>
            Represents if the user is allowed to edit contents of locked cells on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsEditingObjectsAllowed">
      <summary>
            Represents if the user is allowed to manipulate drawing objects on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsEditingScenariosAllowed">
      <summary>
            Represents if the user is allowed to edit scenarios on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.Password">
      <summary>
            Represents the password to protect the worksheet.
            </summary>
      <remarks>
            If password is set to null or blank string, you can unprotect the worksheet or workbook without using a password. Otherwise, you must specify the password to unprotect the worksheet or workbook.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.IsSelectingLockedCellsAllowed">
      <summary>
            Represents if the user is allowed to select locked cells on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsSelectingUnlockedCellsAllowed">
      <summary>
            Represents if the user is allowed to select unlocked cells on a protected worksheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ProtectionType">
      <summary>
            Represents workbook/worksheet protection type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.All">
      <summary>
            Represents to protect all.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Contents">
      <summary>
            Represents to protect contents, used in Worksheet protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Objects">
      <summary>
            Represents to protect objects, used in Worksheet protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Scenarios">
      <summary>
            Represents to protect scenarios, used in Worksheet protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Structure">
      <summary>
            Represents to protect structure, used in Workbook protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Windows">
      <summary>
            Represents to protect window, used in Workbook protection.
            </summary>
    </member>
    <member name="T:Aspose.Cells.RadioButton">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.RadioButton.Text">
      <summary>
            Represents the string in this RadioButton object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.RadioButton.LinkedCell">
      <summary>
            Represents the cell linked to value of the radiobutton.
            </summary>
    </member>
    <member name="P:Aspose.Cells.RadioButton.IsChecked">
      <summary>
            Indicates if the radiobutton is checked or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.RadioButton.Shadow">
      <summary>
            Indicates whether the combobox has 3-D shading.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Range">
      <summary>
            Encapsulates the object that represents a range of cells within a spreadsheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Range.Merge">
      <summary>
             Combines a range of cells into a single cell. 		
             </summary>
      <remarks>
             Reference the merged cell via the address of the upper-left cell in the range.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Range.UnMerge">
      <summary>
            Unmerges merged cells of this range.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Range.ApplyStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formattings for a whole range.
            </summary>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
      <remarks>Each cell in this range will contains a <see cref="P:Aspose.Cells.Range.Style" /> object. 
            So this is a memory-consuming method. Please use it carefully.</remarks>
    </member>
    <member name="M:Aspose.Cells.Range.SetOutlineBorder(Aspose.Cells.BorderType,Aspose.Cells.CellBorderType,System.Drawing.Color)">
      <summary>
            Sets outline border around a range of cells.
            </summary>
      <param name="borderEdge">Border edge.</param>
      <param name="borderStyle">Border style.</param>
      <param name="borderColor">Border color.</param>
    </member>
    <member name="M:Aspose.Cells.Range.CopyStyle(Aspose.Cells.Range)">
      <summary>
            Copys style settings from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.Range.Copy(Aspose.Cells.Range)">
      <summary>
            Copys data from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.Range.ExportDataTable">
      <summary>
            Exports data in this range to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Range.ExportDataTableAsString">
      <summary>
            Exports data in this range to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
      <remarks>All data in the <see cref="T:Aspose.Cells.Cells" /> collection are converted to strings.</remarks>
    </member>
    <member name="P:Aspose.Cells.Range.RowCount">
      <summary>
            Gets the count of rows in the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.ColumnCount">
      <summary>
            Gets the count of columns in the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.Name">
      <summary>
            Gets or sets the name of the range.
            </summary>
      <remarks>Named range is supported. For example,
            <p>range.Name = "Sheet1!MyRange";</p></remarks>
    </member>
    <member name="P:Aspose.Cells.Range.FirstRow">
      <summary>
            Gets the index of the first row of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.FirstColumn">
      <summary>
            Gets the index of the first column of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.Style">
      <summary>
            Gets or sets the style of the range.
            </summary>
      <remarks>
            Style can only be get or set a whole to a range of cells. If not set, get property will retun null.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Range.ColumnWidth">
      <summary>
             Sets or gets the column width of this range
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.RowHeight">
      <summary>
            Sets or gets the height of rows in this range
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.Item(System.Int32,System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Cell" /> object in this range.
            </summary>
      <param name="rowIndex">Row index in this range, zero based.</param>
      <param name="columnIndex">Column index in this range, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.Cell" /> object.</returns>
    </member>
    <member name="P:Aspose.Cells.Range.Worksheet">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Range.Worksheet" />object which contains this range.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Ranges">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Range" /> objects.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Ranges.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Range" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.RectangleShape">
      <summary>
            Represents the rectangle shape.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Row">
      <summary>
            Represents a single row in a worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Row.ApplyStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formattings for a whole column.
            </summary>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
    </member>
    <member name="P:Aspose.Cells.Row.Index">
      <summary>
            Gets the index of this row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.Style">
      <summary>
            Represents the style of this column.
            </summary>
      <remarks>If you directly use Get property to get a Style object and change its settings, 
            it only changes settings on those cells without formattings. If you want to override style setting on
            those cells with formattings, please create a new Style object and use Set property to assign it to that row.</remarks>
    </member>
    <member name="T:Aspose.Cells.Rows">
      <summary>
            Collects the <seealso cref="T:Aspose.Cells.Rows" /> objects that represent the individual rows in a worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rows.Item(System.Int32)">
      <summary>
            Gets a <seealso cref="T:Aspose.Cells.Row" /> object by its index.
            </summary>
    </member>
    <member name="T:Aspose.Cells.SaveType">
      <summary>
            Enumerates spreadsheet creation and saving types.
            </summary>
      <remarks>Used in <see cref="M:Aspose.Cells.Workbook.Save(System.IO.Stream,Aspose.Cells.FileFormatType)" /> method only.</remarks>
    </member>
    <member name="F:Aspose.Cells.SaveType.Default">
      <summary>
            Writes the spreadsheet directly to the hard disk. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveType.OpenInExcel">
      <summary>
            Returns the spreadsheet as a stream of binary data and 
            asks the user to either save or open it.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveType.OpenInBrowser">
      <summary>
            Sends the spreadsheet to browser and opens it in browser. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.ScrollBar">
      <summary>
            Represents the control form : scroll bar.
            </summary>
      <remarks>Scroll value must be between 0 and 30000.</remarks>
    </member>
    <member name="P:Aspose.Cells.ScrollBar.CurrentValue">
      <summary>
            Gets or sets the current value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScrollBar.LinkedCell">
      <summary>
            Gets or sets the worksheet range linked to the control's value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScrollBar.Min">
      <summary>
            Gets or sets the minimum value of a scroll bar or spinner range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScrollBar.Max">
      <summary>
            Gets or sets the maximum value of a scroll bar or spinner range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScrollBar.IncrementalChange">
      <summary>
            Gets or sets the amount that the scroll bar or spinner is incremented a line scroll.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScrollBar.PageChange">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.ScrollBar.Shadow">
      <summary>
            Indicates whether the shape has 3-D shading.
            </summary>
    </member>
    <member name="T:Aspose.Cells.SelectionType">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.SelectionType.Single">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.SelectionType.Multi">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.SelectionType.Extend">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Shapes">
      <summary>
            Represents all the shape in a worksheet/chart.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddCopy(Aspose.Cells.Shape,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds and copy a shape to the worksheet..
            </summary>
      <param name="sourceShape"> Source shape.</param>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="top">Represents the vertical  offset of checkbox from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of textbox from its left column, in unit of pixel. </param>
      <returns>The new shape object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddCheckBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a textbox to the worksheet..
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="top">Represents the vertical  offset of checkbox from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of textbox from its left column, in unit of pixel. </param>
      <param name="height">Height of textbox, in unit of pixel.</param>
      <param name="width">Width of textbox, in unit of pixel.</param>
      <returns>The new CheckBox object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddTextBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a textbox to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of textbox from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of textbox from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of textbox, in unit of pixel. </param>
      <param name="width">Represents the width of textbox, in unit of pixel. </param>
      <returns>A TextBox object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddSpinner(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a Spinner to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of Spinner from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of Spinner from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of Spinner, in unit of pixel. </param>
      <param name="width">Represents the width of Spinner, in unit of pixel. </param>
      <returns>A Spinner object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddScrollBar(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a ScrollBar to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of ScrollBar from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of ScrollBar from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of ScrollBar, in unit of pixel. </param>
      <param name="width">Represents the width of ScrollBar, in unit of pixel. </param>
      <returns>A ScrollBar object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddRadioButton(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a RadioButton to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of RadioButton from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of RadioButton from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of RadioButton, in unit of pixel. </param>
      <param name="width">Represents the width of RadioButton, in unit of pixel. </param>
      <returns>A RadioButton object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddListBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a ListBox to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of ListBox from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of ListBox from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of ListBox, in unit of pixel. </param>
      <param name="width">Represents the width of ListBox, in unit of pixel. </param>
      <returns>A ListBox object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddComboBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a ComboBox to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of ComboBox from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of ComboBox from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of ComboBox, in unit of pixel. </param>
      <param name="width">Represents the width of ComboBox, in unit of pixel. </param>
      <returns>A ComboBox object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddGroupBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a GroupBox to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of GroupBox from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of GroupBox from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of GroupBox, in unit of pixel. </param>
      <param name="width">Represents the width of GroupBox, in unit of pixel. </param>
      <returns>A GroupBox object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddButton(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a Button to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of Button from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of Button from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of Button, in unit of pixel. </param>
      <param name="width">Represents the width of Button, in unit of pixel. </param>
      <returns>A Button object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddLabel(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a Label to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of Label from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of Label from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of Label, in unit of pixel. </param>
      <param name="width">Represents the width of Label, in unit of pixel. </param>
      <returns>A Label object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddLabelInChart(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a label to the chart.
            </summary>
      <param name="top">Represents the vertical offset of label from the upper left corner in units of 1/4000 of the chart area. </param>
      <param name="left">Represents the vertical offset of label from the upper left corner in units of 1/4000 of the chart area.</param>
      <param name="height">Represents the height of label, in units of 1/4000 of the chart area.</param>
      <param name="width">Represents the width of label, in units of 1/4000 of the chart area.</param>
      <returns>A new Label object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddTextBoxInChart(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a textbox to the chart.
            </summary>
      <param name="top">Represents the vertical offset of textbox from the upper left corner in units of 1/4000 of the chart area. </param>
      <param name="left">Represents the vertical offset of textbox from the upper left corner in units of 1/4000 of the chart area.</param>
      <param name="height">Represents the height of textbox, in units of 1/4000 of the chart area.</param>
      <param name="width">Represents the width of textbox, in units of 1/4000 of the chart area.</param>
      <returns>A TextBox object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a RectangleShape to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of RectangleShape from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of RectangleShape from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of RectangleShape, in unit of pixel. </param>
      <param name="width">Represents the width of RectangleShape, in unit of pixel. </param>
      <returns>A RectangleShape object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddOval(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a Oval to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of Oval from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of Oval from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of Oval, in unit of pixel. </param>
      <param name="width">Represents the width of Oval, in unit of pixel. </param>
      <returns>A Oval object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a LineShape to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of LineShape from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of LineShape from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of LineShape, in unit of pixel. </param>
      <param name="width">Represents the width of LineShape, in unit of pixel. </param>
      <returns>A LineShape object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddFreeFloatingShape(Aspose.Cells.MsoDrawingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Boolean)">
      <summary>
            Adds a free floating shape to the worksheet.Only applies for line/image shape.
            </summary>
      <param name="type">The shape type.</param>
      <param name="top">Represents the vertical  offset of shape from the worksheet's top row, in unit of pixel.</param>
      <param name="left">Represents the horizontal offset of shape from the worksheet's left column, in unit of pixel.</param>
      <param name="height">Represents the height of LineShape, in unit of pixel. </param>
      <param name="width">Represents the width of LineShape, in unit of pixel. </param>
      <param name="imageData">The image data,only applies for the picture.</param>
      <param name="isOriginalSize">Whether the shape use original size if the shape is image.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddShape(Aspose.Cells.MsoDrawingType,Aspose.Cells.PlacementType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])">
      <summary>
      </summary>
      <param name="type">shape type.</param>
      <param name="placement">
      </param>
      <param name="upperRow">
      </param>
      <param name="top">
      </param>
      <param name="leftColumn">
      </param>
      <param name="left">
      </param>
      <param name="lowerRow">
      </param>
      <param name="bottom">
      </param>
      <param name="rightColumn">
      </param>
      <param name="right">
      </param>
      <param name="imageData">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a ArcShape to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of ArcShape from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of ArcShape from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of ArcShape, in unit of pixel. </param>
      <param name="width">Represents the width of ArcShape, in unit of pixel. </param>
      <returns>A ArcShape object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddShape(Aspose.Cells.MsoDrawingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a Shape to the worksheet.
            </summary>
      <param name="type">Mso drawing type.</param>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of Shape from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of Shape from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of Shape, in unit of pixel. </param>
      <param name="width">Represents the width of Shape, in unit of pixel. </param>
      <returns>A Shape object.</returns>
      <remarks>The type could not be Chart/Comment/Picuter/OleObject/Polygon/DialogBox</remarks>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddPicture(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
      <param name="stream">Stream object which contains the image data.</param>
      <returns>
        <see cref="T:Aspose.Cells.Picture" /> Picture object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddPicture(System.Int32,System.Int32,System.IO.Stream,System.Int32,System.Int32)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="stream">Stream object which contains the image data.</param>
      <param name="widthScale">Scale of image width, a percentage.</param>
      <param name="heightScale">Scale of image width, a percentage.</param>
      <returns>
        <see cref="T:Aspose.Cells.Picture" /> Picture object.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddPictureInChart(System.Int32,System.Int32,System.IO.Stream,System.Int32,System.Int32)">
      <summary>
            Adds a picture to the chart.
            </summary>
      <param name="top">Represents the vertical offset of textbox from the upper left corner in units of 1/4000 of the chart area. </param>
      <param name="left">Represents the vertical offset of textbox from the upper left corner in units of 1/4000 of the chart area.</param>
      <param name="stream">Stream object which contains the image data.</param>
      <param name="widthScale">Scale of image width, a percentage.</param>
      <param name="heightScale">Scale of image width, a percentage.</param>
      <returns>Returns a Picture objct.</returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.AddOleObject(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])">
      <summary>
      </summary>
      <param name="upperLeftRow">
      </param>
      <param name="top">
      </param>
      <param name="upperLeftColumn">
      </param>
      <param name="left">
      </param>
      <param name="height">
      </param>
      <param name="width">
      </param>
      <param name="imageData">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Shapes.CopyCommentsInRange(Aspose.Cells.Shapes,Aspose.Cells.CellArea,System.Int32,System.Int32)">
      <summary>
            Copy all comments in the range.
            </summary>
      <param name="shapes">The source shapes.</param>
      <param name="ca">The source range.</param>
      <param name="destRow">The dest range start row.</param>
      <param name="destColumn">The dest range start column.</param>
    </member>
    <member name="M:Aspose.Cells.Shapes.CopyInRange(Aspose.Cells.Shapes,Aspose.Cells.CellArea,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Copy shapes in the rang to dest range.
            </summary>
      <param name="sourceShapes">Source shapes.</param>
      <param name="ca">The source range.</param>
      <param name="destRow">The dest row index of the dest range.</param>
      <param name="destColumn">The dest column of the dest range.</param>
      <param name="isContained">Whether only copy the shapes which are contained in the range.
            If true,only copies the shapes in the range. 
            Otherwise,it works as Office.</param>
    </member>
    <member name="M:Aspose.Cells.Shapes.DeleteInRange(Aspose.Cells.CellArea)">
      <summary>
            Delete shapes in the range.Comment shapes will not be deleted.
            </summary>
      <param name="ca">The range.If the shapes are contained in the range, they will be removed.</param>
    </member>
    <member name="M:Aspose.Cells.Shapes.DeleteShape(Aspose.Cells.Shape)">
      <summary>
            Delete a shape. If the shape is in the group or is a comment shape, it will not be deleted.
            </summary>
      <param name="shape">
      </param>
    </member>
    <member name="M:Aspose.Cells.Shapes.Group(Aspose.Cells.Shape[])">
      <summary>
            Group the shapes.
            </summary>
      <param name="groupItems">the group items.</param>
      <returns>Return the group shape.</returns>
      <remarks>
            
            The shape in the groupItems should not be grouped.
            The shape must be in this Shapes collection.</remarks>
    </member>
    <member name="M:Aspose.Cells.Shapes.Ungroup(Aspose.Cells.GroupShape)">
      <summary>
            Ungroups the shape items.
            </summary>
      <param name="group">The group shape.</param>
      <remarks>If the group shape is grouped by another group shape,nothing will be done.</remarks>
    </member>
    <member name="P:Aspose.Cells.Shapes.Item(System.Int32)">
      <summary>
            Gets the shape object at the specific index.
            </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.SheetType">
      <summary>
            Specifies the worksheet type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.VB">
      <summary>
            Visual Basic module
            </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.Worksheet">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.Chart">
      <summary>
            Chart
            </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.Other">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.ShiftType">
      <summary>
            Represent the shift options when deleting a range of cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.Down">
      <summary>
            Shift cells down.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.Left">
      <summary>
            Shift cells left.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.None">
      <summary>
            Do not shift cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.Right">
      <summary>
            Shift cells right.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.Up">
      <summary>
            Shift cells up.
            </summary>
    </member>
    <member name="T:Aspose.Cells.SortOrder">
      <summary>
            Represents sort order for the data range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SortOrder.Ascending">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.SortOrder.Descending">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Spinner">
      <summary>
            Represents the control form : Spinner.
            </summary>
      <remarks>Scroll value must be between 0 and 30000.</remarks>
    </member>
    <member name="P:Aspose.Cells.Spinner.CurrentValue">
      <summary>
            Gets or sets the current value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Spinner.LinkedCell">
      <summary>
            Gets or sets the worksheet range linked to the control's value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Spinner.Min">
      <summary>
            Gets or sets the minimum value of a scroll bar or spinner range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Spinner.Max">
      <summary>
            Gets or sets the maximum value of a scroll bar or spinner range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Spinner.IncrementalChange">
      <summary>
            Gets or sets the amount that the scroll bar or spinner is incremented a line scroll.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Spinner.Shadow">
      <summary>
            Indicates whether the shape has 3-D shading.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Style">
      <summary>
            Represents display style of excel document,such as font,
            color,alignment,border,etc.
            </summary>
      <remarks>
            The Style object contains all style attributes (font, number format, alignment, and so on) as properties.
            There are two methods to set a cell's style.
            <code>
            //First method
            int styleIndex = excel.Styles.Add();
            Style style = excel.Styles[styleIndex];
            style.Font.Name = "Times New Roman";
            style.Font.Color = Color.Blue;
            for(int i = 0; i &lt; 100; i ++)
            {
            	excel.Worksheets[0].Cells[0, i].Style = style;
            }
            
            //Second method
            excel.Worksheets[0].Cells["A1"].Style.Font.Name = "Times New Roman";
            excel.Worksheets[0].Cells["A1"].Style.Font.Color = Color.Blue;
            </code>
            First method is a fast and efficient way to change several cell-formatting properties on multiple cells at the same time.
            Keep in mind, however, that changing a style property will affect all cells already formatted with that style.
            If you want to change a single cell's style properties, second method can be used. It will not interfere with each other.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Style.Copy(Aspose.Cells.Style)">
      <summary>
            Copys data from another style object
            </summary>
      <param name="style">Source Style object</param>
    </member>
    <member name="M:Aspose.Cells.Style.Equals(System.Object)">
      <summary>
            Determines whether two Style instances are equal.
            </summary>
      <param name="obj">The Style object to compare with the current Style object. </param>
      <returns>true if the specified Object is equal to the current Object; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Cells.Style.GetHashCode">
      <summary>
            Serves as a hash function for a Style object.
            </summary>
      <returns>A hash code for the current Object.</returns>
      <remarks>This method is only for internal use.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.Name">
      <summary>
            Gets or sets the name of the style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.Pattern">
      <summary>
            Gets or sets the cell background pattern type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.Borders">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Borders" /> of the style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.BackgroundColor">
      <summary>
            Gets or sets a style's background color.
            </summary>
      <remarks>If you want to set a cell's color, please use Style.ForegroundColor property. 
            Only if the cell style pattern is other than none or solid, this property will take effect.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.ForegroundColor">
      <summary>
            Gets or sets a style's foreground color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IndentLevel">
      <summary>
            Represents the m_IndentLevel level for the cell or range. Can only be an integer from 0 to 15.
            </summary>
      <remarks>
            If text horizontal alignment type is set to value other than left or right, m_IndentLevel level will
            be reset to zero.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.Font">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Font" /> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.Rotation">
      <summary>
            Represents text rotation angel.
            </summary>
      <remarks>
        <p>0: Not rotated.</p>
        <p>255: Top to Bottom.</p>
        <p>-90: Downward.</p>
        <p>90: Upward.</p>
            You can set 255 or value ranged from -90 to 90.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.VerticalAlignment">
      <summary>
             Gets or sets the vertical alignment type of the text in a cell. 
             </summary>
    </member>
    <member name="P:Aspose.Cells.Style.HorizontalAlignment">
      <summary>
             Gets or sets the horizontal alignment type of the text in a cell. 
             </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsTextWrapped">
      <summary>
            Gets or sets a value indicating whether the text within a cell is wrapped.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.Number">
      <summary>
             Gets or sets the display format of numbers and dates.
             </summary>
      <remarks>
        <table class="dtTABLE" cellspacing="0">
          <tr>
            <td width="33%">
              <font color="gray">
                <b>Value</b>
              </font>　</td>
            <td width="33%">
              <font color="gray">
                <b>Type</b>
              </font>　</td>
            <td width="33%">
              <font color="gray">
                <b>Format String</b>
              </font>　</td>
          </tr>
          <tr>
            <td width="33%">0</td>
            <td width="33%">General</td>
            <td width="33%">General</td>
          </tr>
          <tr>
            <td width="33%">1</td>
            <td width="33%">Decimal</td>
            <td width="33%">0</td>
          </tr>
          <tr>
            <td width="33%">2</td>
            <td width="33%">Decimal</td>
            <td width="33%">0.00</td>
          </tr>
          <tr>
            <td width="33%">3</td>
            <td width="33%">Decimal</td>
            <td width="33%">#,##0</td>
          </tr>
          <tr>
            <td width="33%">4</td>
            <td width="33%">Decimal</td>
            <td width="33%">#,##0.00</td>
          </tr>
          <tr>
            <td width="33%">5</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0;$-#,##0</td>
          </tr>
          <tr>
            <td width="33%">6</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0;[Red]$-#,##0</td>
          </tr>
          <tr>
            <td width="33%">7</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0.00;$-#,##0.00</td>
          </tr>
          <tr>
            <td width="33%">8</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0.00;[Red]$-#,##0.00</td>
          </tr>
          <tr>
            <td width="33%">9</td>
            <td width="33%">Percentage</td>
            <td width="33%">0%</td>
          </tr>
          <tr>
            <td width="33%">10</td>
            <td width="33%">Percentage</td>
            <td width="33%">0.00%</td>
          </tr>
          <tr>
            <td width="33%">11</td>
            <td width="33%">Scientific</td>
            <td width="33%">0.00E+00</td>
          </tr>
          <tr>
            <td width="33%">12</td>
            <td width="33%">Fraction</td>
            <td width="33%"># ?/?</td>
          </tr>
          <tr>
            <td width="33%">13</td>
            <td width="33%">Fraction</td>
            <td width="33%"># ??/??</td>
          </tr>
          <tr>
            <td width="33%">14</td>
            <td width="33%">Date</td>
            <td width="33%">m/d/yy</td>
          </tr>
          <tr>
            <td width="33%">15</td>
            <td width="33%">Date</td>
            <td width="33%">d-mmm-yy</td>
          </tr>
          <tr>
            <td width="33%">16</td>
            <td width="33%">Date</td>
            <td width="33%">d-mmm</td>
          </tr>
          <tr>
            <td width="33%">17</td>
            <td width="33%">Date</td>
            <td width="33%">mmm-yy</td>
          </tr>
          <tr>
            <td width="33%">18</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm AM/PM</td>
          </tr>
          <tr>
            <td width="33%">19</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm:ss AM/PM</td>
          </tr>
          <tr>
            <td width="33%">20</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm</td>
          </tr>
          <tr>
            <td width="33%">21</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm:ss</td>
          </tr>
          <tr>
            <td width="33%">22</td>
            <td width="33%">Time</td>
            <td width="33%">m/d/yy h:mm</td>
          </tr>
          <tr>
            <td width="33%">37</td>
            <td width="33%">Currency</td>
            <td width="33%">#,##0;-#,##0</td>
          </tr>
          <tr>
            <td width="33%">38</td>
            <td width="33%">Currency</td>
            <td width="33%">#,##0;[Red]-#,##0</td>
          </tr>
          <tr>
            <td width="33%">39</td>
            <td width="33%">Currency</td>
            <td width="33%">#,##0.00;-#,##0.00</td>
          </tr>
          <tr>
            <td width="33%">40</td>
            <td width="33%">Currency</td>
            <td width="33%">#,##0.00;[Red]-#,##0.00</td>
          </tr>
          <tr>
            <td width="33%">41</td>
            <td width="33%">Accounting</td>
            <td width="33%">_ * #,##0_ ;_ * -#,##0_ ;_ * "-"_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">42</td>
            <td width="33%">Accounting</td>
            <td width="33%">_ $* #,##0_ ;_ $* -#,##0_ ;_ $* "-"_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">43</td>
            <td width="33%">Accounting</td>
            <td width="33%">_ * #,##0.00_ ;_ * -#,##0.00_ ;_ * "-"??_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">44</td>
            <td width="33%">Accounting</td>
            <td width="33%">_ $* #,##0.00_ ;_ $* -#,##0.00_ ;_ $* "-"??_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">45</td>
            <td width="33%">Time</td>
            <td width="33%">mm:ss</td>
          </tr>
          <tr>
            <td width="33%">46</td>
            <td width="33%">Time</td>
            <td width="33%">[h]:mm:ss</td>
          </tr>
          <tr>
            <td width="33%">47</td>
            <td width="33%">Time</td>
            <td width="33%">mm:ss.0</td>
          </tr>
          <tr>
            <td width="33%">48</td>
            <td width="33%">Scientific</td>
            <td width="33%">##0.0E+00</td>
          </tr>
          <tr>
            <td width="33%">49</td>
            <td width="33%">Text</td>
            <td width="33%">@</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.IsLocked">
      <summary>
             Gets or sets a value indicating whether a cell can be modified or not.
             </summary>
      <remarks>Locking cells has no effect unless the worksheet is protected. </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.Custom">
      <summary>
            Represents the custom number format string of a cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsFormulaHidden">
      <summary>
            Represents if the formula will be hidden when the worksheet is protected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.ShrinkToFit">
      <summary>
            Represents if text automatically shrinks to fit in the available column width.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.TextDirection">
      <summary>
             Represents text reading order.
            </summary>
    </member>
    <member name="T:Aspose.Cells.StyleFlag">
      <summary>
            Represents flags which indicates applied formatting properties.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.All">
      <summary>
            All properties will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.Borders">
      <summary>
            All borders settings will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.LeftBorder">
      <summary>
            Left border settings will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.RightBorder">
      <summary>
            Right border settings will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.TopBorder">
      <summary>
            Top border settings will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.BottomBorder">
      <summary>
            Bottom border settings will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.DiagonalDownBorder">
      <summary>
            Diagonal down border settings will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.DiagonalUpBorder">
      <summary>
            Diagonal up border settings will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.Font">
      <summary>
            Font settings will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.FontSize">
      <summary>
            Font size setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.FontName">
      <summary>
            Font name setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.FontColor">
      <summary>
            Font color setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.FontBold">
      <summary>
            Font bold setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.FontItalic">
      <summary>
            Font italic setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.FontUnderline">
      <summary>
            Font underline setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.FontStrike">
      <summary>
            Font stikeout setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.FontScript">
      <summary>
            Font script setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.NumberFormat">
      <summary>
            Number format setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.HorizontalAlignment">
      <summary>
            Horizontal alignment setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.VerticalAlignment">
      <summary>
            Vertical alignment setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.Indent">
      <summary>
            Indent level setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.Rotation">
      <summary>
            Rotation setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.WrapText">
      <summary>
            Wrap text setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.ShrinkToFit">
      <summary>
            Shrink to fit setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.TextDirection">
      <summary>
            Text direction setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.CellShading">
      <summary>
            Cell shading setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.Locked">
      <summary>
            Locked setting will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleFlag.HideFormula">
      <summary>
            Hide formula setting will be applied.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Styles">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Style" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            
            Workbook workbook = new Workbook();
            Styles styles = workbook.Styles;
            int styleIndex = styles.Add();
            Style style = excel.Styles[styleIndex];
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook()
            Dim styles as Styles = excel.Styles
            Dim styleIndex as Integer = styles.Add()
            Dim style as Style = excel.Styles(styleIndex)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Styles.Add">
      <summary>
            Adds a <see cref="T:Aspose.Cells.Style" /> to the collection.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.Style" /> object index.</returns>
      <remarks>
            If using this method to create a new style and the style name is set, 
            a new style will be added to the style dialog of MS Excel.
            To avoid this, you can leave the style name blank. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Styles.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Style" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
      <example>
        <code>
            
            [C#]
            
            Styles styles = excel.Styles;
            int styleIndex = styles.Add();
            Style style = styles[styleIndex];
            
            [Visual Basic]
            
            Dim styles As Styles =  excel.Styles 
            Dim styleIndex As Integer =  styles.Add() 
            Dim style As Style =  styles(styleIndex)
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Styles.Item(System.String)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Style" /> element at the specified name.
             </summary>
      <param name="name">Style name</param>
      <returns>The element at the specified name.</returns>
             ///<example><code>
            [C#]
            
            Styles styles = excel.Styles;
            int styleIndex = styles.Add();
            Style style = styles[styleIndex];
            style.Name = "MyStyle";
            .....................
            Style newStyle = styles["MyStyle"];
            
            [Visual Basic]
            
            Dim styles As Styles =  excel.Styles 
            Dim styleIndex As Integer =  styles.Add() 
            Dim style As Style =  styles(styleIndex) 
            style.Name = "MyStyle"
            Dim NewStyle As Style =  styles("MyStyle")
            </code></example></member>
    <member name="P:Aspose.Cells.Styles.Count">
      <summary>
            Gets the count of elements in the collection.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TextAlignmentType">
      <summary>
            Enumerates text alignment types. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Bottom">
      <summary>
            Represents bottom text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Center">
      <summary>
            Represents center text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.CenterAcross">
      <summary>
            Represents center across text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Distributed">
      <summary>
            Represents distributed text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Fill">
      <summary>
            Represents fill text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.General">
      <summary>
            Represents general text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Justify">
      <summary>
            Represents justify text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Left">
      <summary>
            Represents left text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Right">
      <summary>
            Represents right text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Top">
      <summary>
            Represents top text alignment.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TextBox">
      <summary>
            Encapsulates the object that represents a textbox in a spreadsheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TextBox.Text">
      <summary>
            Represents the string in this TextBox object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TextBox.Font">
      <summary>
            Represents the font of textbox.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TextBoxes">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.TextBox" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.TextBoxes.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a textbox to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="height">Height of textbox, in unit of pixel.</param>
      <param name="width">Width of textbox, in unit of pixel.</param>
      <returns>
        <see cref="T:Aspose.Cells.TextBox" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.TextBoxes.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.TextBox" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.TextDirectionType">
      <summary>
            Represents text reading order.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextDirectionType.Context">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TextDirectionType.LeftToRight">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TextDirectionType.RightToLeft">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.TextOrientationType">
      <summary>
            Enumerates text orientation types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextOrientationType.ClockWise">
      <summary>
            Rotates text 90 degrees to the left
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextOrientationType.CounterClockWise">
      <summary>
            Rotates text 90 degrees to the right.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextOrientationType.NoRotation">
      <summary>
            Represents the default value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextOrientationType.TopToBottom">
      <summary>
            Displays text from top to bottom of the cell.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TextureType">
      <summary>
            Represents the preset texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.BlueTissuePaper">
      <summary>
            Represents Blue Tissue Paper texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Bouquet">
      <summary>
            Represents Bouquet texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.BrownMarble">
      <summary>
            Represents Brown Marble texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Canvas">
      <summary>
            Represents Canvas texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Cork">
      <summary>
            Represents Cork texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Denim">
      <summary>
            Represents Denim texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.FishFossil">
      <summary>
            Represents Fish Fossil texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Granite">
      <summary>
            Represents Granite texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.GreenMarble">
      <summary>
            Represents Green Marble texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.MediumWood">
      <summary>
            Represents Medium Wood texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Newsprint">
      <summary>
            Represents Newsprint texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Oak">
      <summary>
            Represents Oak texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.PaperBag">
      <summary>
            Represents Paper Bag texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Papyrus">
      <summary>
            Represents Papyrus texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Parchment">
      <summary>
            Represents Parchment texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.PinkTissuePaper">
      <summary>
            Represents Pink Tissue Paper texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.PurpleMesh">
      <summary>
            Represents Purple Mesh texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.RecycledPaper">
      <summary>
            Represents Recycled Paper texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Sand">
      <summary>
            Represents Sand texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Stationery">
      <summary>
            Represents Stationery texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Walnut">
      <summary>
            Represents Walnut Droplets texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.WaterDroplets">
      <summary>
            Represents Water Droplets texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.WhiteMarble">
      <summary>
            Represents White Marble texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.WovenMat">
      <summary>
            Represents Woven Mat texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextureType.Unknown">
      <summary>
            Represents Unknown texture type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TickLabelPositionType">
      <summary>
            Represents the position type of tick-mark labels on the specified axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TickLabelPositionType.High">
      <summary>
            Position type is high.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TickLabelPositionType.Low">
      <summary>
            Position type is low. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.TickLabelPositionType.NextToAxis">
      <summary>
            Position type is next to axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TickLabelPositionType.None">
      <summary>
            Position type is none.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TickLabels">
      <summary>
            Represents the tick-mark labels associated with tick marks on a chart axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TickLabels.Font">
      <summary>
            Returns a <see cref="T:Aspose.Cells.Font" /> object that represents the font of the specified TickLabels object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TickLabels.AutoScaleFont">
      <summary>
            True if the text in the object changes font size when the object size changes. The default value is True. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.TickLabels.Background">
      <summary>
            Gets and sets the display mode of the background
            </summary>
    </member>
    <member name="P:Aspose.Cells.TickLabels.Rotation">
      <summary>
            Represents text rotation angel.
            </summary>
      <remarks>
        <br>0: Not rotated.</br>
        <br>255: Top to Bottom.</br>
        <br>-90: Downward.</br>
        <br>90: Upward.</br>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.TickLabels.NumberFormat">
      <summary>
            Represents the format string for the TickLabels object.
            </summary>
      <remarks>The formating string is same as a custom format string setting to a cell. For example, "$0".</remarks>
    </member>
    <member name="P:Aspose.Cells.TickLabels.Number">
      <summary>
            Represents the format number for the TickLabels object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TickLabels.NumberFormatLinked">
      <summary>
            True if the number format is linked to the cells 
            (so that the number format changes in the labels when it changes in the cells). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.TickLabels.Offset">
      <summary>
            Represents the distance between the levels of labels, and the distance between the first level and the axis line.  
            </summary>
      <remarks>
            The default distance is 100 percent, which represents the default spacing between the axis labels and the axis line.
            The value can be an integer percentage from 0 through 1000, relative to the axis label’s font size.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.TickLabels.TextDirection">
      <summary>
             Represents text reading order.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TickMarkType">
      <summary>
            Represents the tick mark type for the specified axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TickMarkType.Cross">
      <summary>
            Tick mark type is Cross.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TickMarkType.Inside">
      <summary>
            Tick mark type is Inside.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TickMarkType.None">
      <summary>
            Tick mark type is None.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TickMarkType.Outside">
      <summary>
            Tick mark type is Outside
            </summary>
    </member>
    <member name="T:Aspose.Cells.Trendline">
      <summary>
            Represents a trendline in a chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Trendline.IsNameAuto">
      <summary>
            Returns if Microsoft Excel automatically determines the name of the trendline. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Trendline.Type">
      <summary>
            Returns the trendline type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Trendline.Name">
      <summary>
            Returns the name of the trendline.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Trendline.Order">
      <summary>
            Returns or sets the trendline order (an integer greater than 1) when the trendline type is Polynomial. 
            The order must be between 2 and 6.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Trendline.Period">
      <summary>
            Returns or sets the period for the moving-average trendline.
            </summary>
      <remarks>This value should be between 2 and 255.
            And it must be less than the number of the chart points in the series</remarks>
    </member>
    <member name="P:Aspose.Cells.Trendline.Forward">
      <summary>
            Returns or sets the number of periods (or units on a scatter chart) that the trendline extends forward.
            The number of periods must be greater than and equal to zero.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Trendline.Backward">
      <summary>
            Returns or sets the number of periods (or units on a scatter chart) that the trendline extends backward. 
            The number of periods must be greater than and equal to zero.
            If the chart type is column ,the number of periods must be between 0 and 0.5
            </summary>
    </member>
    <member name="P:Aspose.Cells.Trendline.DisplayEquation">
      <summary>
            Represents if the equation for the trendline is displayed on the chart (in the same data label as the R-squared value). Setting this property to True automatically turns on data labels. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Trendline.DisplayRSquared">
      <summary>
            Represents if the R-squared value of the trendline is displayed on the chart (in the same data label as the equation). Setting this property to True automatically turns on data labels. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Trendline.Intercept">
      <summary>
            Returns or sets the point where the trendline crosses the value axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Trendline.DataLabels">
      <summary>
            Represents the DataLabels object for the specified ASeries. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Trendlines">
      <summary>
            Represents a collection of all the Trendline objects for the specified data series.
            </summary>
      <example>
        <code>
            [C#]
            int chartIndex = excel.Worksheets[0].Charts.Add(ChartType.Column, 3, 3, 15, 10);
            Chart chart = excel.Worksheets[0].Charts[chartIndex];
            chart.NSeries.Add("A1:a3", true);
            chart.NSeries[0].TrendLines.Add(TrendlineType.Linear, "MyTrendLine");
            Trendline line = chart.NSeries[0].TrendLines[0];
            line.DisplayEquation = true;
            line.DisplayRSquared = true;
            line.Color = Color.Red;
            
            [Visual Basic]
            Dim chartIndex As Integer =  excel.Worksheets(0).Charts.Add(ChartType.Column,3,3,15,10) 
            Dim chart As Chart =  excel.Worksheets(0).Charts(chartIndex) 
            chart.NSeries.Add("A1:a3", True)
            chart.NSeries(0).TrendLines.Add(TrendlineType.Linear, "MyTrendLine")
            Dim line As Trendline =  chart.NSeries(0).TrendLines(0) 
            line.DisplayEquation = True
            line.DisplayRSquared = True
            line.Color = Color.Red
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Trendlines.Add(Aspose.Cells.TrendlineType)">
      <summary>
            Adds a <seealso cref="T:Aspose.Cells.Trendline" /> object to this collection with specified type.
            </summary>
      <param name="type">Trendline type.</param>
      <returns>
        <see cref="T:Aspose.Cells.Trendline" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Trendlines.Add(Aspose.Cells.TrendlineType,System.String)">
      <summary>
            Adds a <seealso cref="T:Aspose.Cells.Trendline" /> object to this collection with specified type and name.
            </summary>
      <param name="type">Trendline type.</param>
      <param name="name">Trendline name.</param>
      <returns>
        <see cref="T:Aspose.Cells.Trendline" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.Trendlines.Item(System.Int32)">
      <summary>
            Gets a <seealso cref="T:Aspose.Cells.Trendline" /> object by its index.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TrendlineType">
      <summary>
            Represents the trendline type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TrendlineType.Exponential">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TrendlineType.Linear">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TrendlineType.Logarithmic">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TrendlineType.MovingAverage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TrendlineType.Polynomial">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TrendlineType.Power">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Validation">
      <summary>
            Represents data validation.settings.
            </summary>
      <example>
        <code>
            [C#]
            Workbook workbook = new Workbook();
            Validations validations = workbook.Worksheets[0].Validations;
            Validation validation = validations[validations.Add()];
            validation.Type = Aspose.Cells.ValidationType.WholeNumber;
            validation.Operator = OperatorType.Between;
            validation.Formula1 = "3";
            validation.Formula2 = "1234";
            		
            CellArea area;
            area.StartRow = 0;
            area.EndRow = 1;
            area.StartColumn = 0;
            area.EndColumn = 1;
            
            validation.AreaList.Add(area);
            
            [Visual Basic]
            Dim workbook as Workbook = new Workbook()
            Validations validations = workbook.Worksheets(0).Validations
            Dim validation as Validation = validations(validations.Add())
            validation.Type = ValidationType.WholeNumber
            validation.Operator = OperatorType.Between
            validation.Formula1 = "3"
            validation.Formula2 = "1234"
            		
            Dim area as CellArea
            area.StartRow = 0
            area.EndRow = 1
            area.StartColumn = 0
            area.EndColumn = 1
            
            validation.AreaList.Add(area)
            
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Validation.Operator">
      <summary>
            Represents the operator for the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.AlertStyle">
      <summary>
            Represents the validation alert style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Type">
      <summary>
            Represents the data validation type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.InputMessage">
      <summary>
            Represents the data validation input message.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.InputTitle">
      <summary>
            Represents the title of the data-validation input dialog box.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.ErrorMessage">
      <summary>
            Represents the data validation error message.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.ErrorTitle">
      <summary>
            Represents the title of the data-validation error dialog box. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.ShowInput">
      <summary>
            Indicates whether the data validation input message will be displayed whenever the user selects a cell in the data validation range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.ShowError">
      <summary>
            Indicates whether the data validation error message will be displayed whenever the user enters invalid data. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.IgnoreBlank">
      <summary>
            Indicates whether blank values are permitted by the range data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Formula1">
      <summary>
            Represents the value or expression associated with the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Formula2">
      <summary>
            Represents the value or expression associated with the second part of the data validation. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.InCellDropDown">
      <summary>
            Indicates whether data validation displays a drop-down list that contains acceptable values.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.AreaList">
      <summary>
            Represents a collection of <see cref="T:Aspose.Cells.CellArea" /> which contains the data validation settings.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ValidationAlertType">
      <summary>
            Represnets the data validation alert style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationAlertType.Information">
      <summary>
            Information alert style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationAlertType.Stop">
      <summary>
            Stop alert style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationAlertType.Warning">
      <summary>
            Warning alert style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Validations">
      <summary>
            Represents data validation collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Validations.Add">
      <summary>
            Adds a data validation to the collection.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.Validation" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.Validations.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Validation" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.ValidationType">
      <summary>
            Represents data validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.AnyValue">
      <summary>
            Any value validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.WholeNumber">
      <summary>
            Whole number validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.Decimal">
      <summary>
            Decimal validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.List">
      <summary>
            List validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.Date">
      <summary>
            Date validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.Time">
      <summary>
            Time validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.TextLength">
      <summary>
            Text length validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.Custom">
      <summary>
            Custom validation type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.VPageBreak">
      <summary>
            Encapsulates the object that represents a vertical page break. 
            </summary>
      <example>
        <code>
            [C#]
            //Add a pagebreak at G5
            excel.Worksheets[0].HPageBreaks.Add("G5");
            excel.Worksheets[0].VPageBreaks.Add("G5");
            
            [VB]
            'Add a pagebreak at G5
            excel.Worksheets(0).HPageBreaks.Add("G5")
            excel.Worksheets(0).VPageBreaks.Add("G5")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.VPageBreak.StartRow">
      <summary>
            Gets the start row index of the vertical page break.
            </summary>
    </member>
    <member name="P:Aspose.Cells.VPageBreak.EndRow">
      <summary>
            Gets the end row index of the vertical page break.
            </summary>
    </member>
    <member name="P:Aspose.Cells.VPageBreak.Column">
      <summary>
            Gets the column index of the vertical page break.
            </summary>
    </member>
    <member name="T:Aspose.Cells.VPageBreaks">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.VPageBreak" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.VPageBreaks.Add(System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a vertical page break to the collection.
            </summary>
      <param name="startRow">Start row index, zero based.</param>
      <param name="endRow">End row index, zero based.</param>
      <param name="column">Column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.VPageBreak" /> object index.</returns>
      <remarks>This method is used to add a vertical pagebreak within a print area.</remarks>
    </member>
    <member name="M:Aspose.Cells.VPageBreaks.Add(System.Int32,System.Int32)">
      <summary>
            Adds a vertical page break to the collection.
            </summary>
      <param name="row">Cell row index, zero based.</param>
      <param name="column">Cell column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.VPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.VPageBreaks.Add(System.String)">
      <summary>
            Adds a vertical page break to the collection.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>
        <see cref="T:Aspose.Cells.VPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.VPageBreaks.RemoveAt(System.Int32)">
      <summary>
            Removes the VPageBreak element at a specified name.
            </summary>
      <param name="index">Element index, zero based.</param>
    </member>
    <member name="P:Aspose.Cells.VPageBreaks.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.VPageBreak" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.VPageBreaks.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.VPageBreak" /> element with the specified cell name.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>The element with the specified cell name.</returns>
    </member>
    <member name="T:Aspose.Cells.Walls">
      <summary>
            Encapsulates the object that represents the walls of a 3-D chart.
            </summary>
    </member>
    <member name="T:Aspose.Cells.WeightType">
      <summary>
            Enumerates the weight types for a picture border or a chart line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.WeightType.HairLine">
      <summary>
            Represents the weight of hair line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.WeightType.MediumLine">
      <summary>
            Represents the weight of medium line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.WeightType.SingleLine">
      <summary>
            Represents the weight of single line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.WeightType.WideLine">
      <summary>
            Represents the weight of wide line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Workbook">
      <summary>
            Represents a root object to create an Excel spreadsheet. 	
            </summary>
      <remarks>The Workbook class denotes an Excel spreadsheet. Each spreadsheet can contain multiple worksheets.
            The basic feature of the class is to open and save native excel files.
            The class has some advanced features like copying data from other Workbooks, combining two Workbooks and protecting the Excel spreadsheet.
            </remarks>
      <example>
            The following example creates a Workbook, opens a file named designer.xls in it and makes the horizontal and vertical scroll bars invisible for the Workbook. It then replaces two string values with an Integer value and string value respectively within the spreadsheet and finally sends the updated file to the client browser. 
            <code>
            [C#]
            
            Workbook workbook = new Workbook();
            
            //Open a designer file
            string designerFile = MapPath("Designer") + "\\designer.xls";
            workbook.Open(designerFile);
            
            //Set scroll bars
            workbook.IsHScrollBarVisible = false;
            workbook.IsVScrollBarVisible = false;
            
            //Replace the placeholder string with new values
            int newInt = 100;
            workbook.Replace("OldInt", newInt);
            
            string newString = "Hello!";
            workbook.Replace("OldString", newString);
            
            workbook.Save("result.xls", FileFormatType.Default, SaveType.OpenInBrowser, Response); 
            	
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook()
            
            'Open a designer file
            Dim designerFile as String = MapPath("Designer") + "\designer.xls"
            workbook.Open(designerFile)
            
            'Set scroll bars
            workbook.IsHScrollBarVisible = False
            workbook.IsVScrollBarVisible = False
            
            'Replace the placeholder string with new values
            Dim newInt as Integer = 100
            workbook.Replace("OldInt", newInt)
            
            Dim newString as String = "Hello!"
            workbook.Replace("OldString", newString)
            
            workbook.Save("result.xls", FileFormatType.Default, SaveType.OpenInBrowser, Response)
            </code></example>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class.
            </summary>
      <example>
            The following code shows how to use the Workbook constructor to create and initialize a new instance of the class.
            <code>
            [C#]
            
            Workbook workbook = new Workbook();
            		
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook()
            		
            </code></example>
    </member>
    <member name="M:Aspose.Cells.Workbook.Open(System.String,Aspose.Cells.FileFormatType,System.String)">
      <summary>
            Opens a file and imports its data.
            </summary>
      <param name="fileName">Name of file to be imported.</param>
      <param name="type">File type.</param>
      <param name="password">File encryption password.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Open(System.String,Aspose.Cells.FileFormatType)">
      <summary>
            Opens a file and imports its data.
            </summary>
      <param name="fileName">Name of file to be imported.</param>
      <param name="type">File type.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Open(System.IO.Stream,System.Char)">
      <summary>
            Opens text files stream with user defined separator.
            </summary>
      <param name="stream">Text file stream.</param>
      <param name="separator">Delimiter of text file.</param>
      <remarks>Some users want to open csv file which is separated with ';', not ','. 
            We provide this method to allow users to set their own separator. </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Open(System.String,System.Char)">
      <summary>
            Opens text files with user defined separator.
            </summary>
      <param name="fileName">Text file name.</param>
      <param name="separator">Delimiter of text file.</param>
      <remarks>Some users want to open csv file which is separated with ';', not ','. 
            We provide this method to allow users to set their own separator. </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Open(System.String)">
      <summary>
            Opens a preset designer spreadsheet.
            </summary>
      <param name="fileName">The preset designer spreadsheet.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Open(System.IO.Stream,Aspose.Cells.FileFormatType,System.String)">
      <summary>
            Opens a file and imports its data.
            </summary>
      <param name="stream">Stream which contains the file.</param>
      <param name="type">File type.</param>
      <param name="password">File encryption password.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Open(System.IO.Stream,Aspose.Cells.FileFormatType)">
      <summary>
            Opens a file and imports its data.
            </summary>
      <param name="stream">Stream which contains the file.</param>
      <param name="type">File type.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Open(System.IO.Stream)">
      <summary>
            Opens a preset designer spreadsheet from stream.
            </summary>
      <param name="stream">Stream which contains the preset designer spreadsheet.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.SaveToStream">
      <summary>
            Saves Excel file to a MemoryStream object and returns it.
            </summary>
      <returns>MemoryStream object which contains an Excel file.</returns>
      <remarks>This method provides same function as Save method. It's mainly for calling from COM clients.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.IO.Stream,Aspose.Cells.FileFormatType)">
      <summary>
            Creates the result spreadsheet to the stream.
            </summary>
      <param name="stream">Stream where to save the spreadsheet.</param>
      <param name="fileFormatType">Excel file format type.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.String)">
      <summary>
            Creates and saves the specified file to the disk.
            </summary>
      <param name="fileName">The name of created file.</param>
      <remarks>
        <p>File format is Excel2003.</p>
            After calling Save method, data in Workbook instance will be reset.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.String,System.Char)">
      <summary>
            Creates text files with user defined separator.
            </summary>
      <param name="fileName">Text file name.</param>
      <param name="separator">Delimiter of text file.</param>
      <remarks>Some users want to create csv file which is separated with ';', not ','. 
            We provide this method to allow users to set their own separator. </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.IO.Stream,System.Char)">
      <summary>
            Creates text files with user defined separator.
            </summary>
      <param name="stream">Stream where to save the text file.</param>
      <param name="separator">Delimiter of text file.</param>
      <remarks>Some users want to create csv file which is separated with ';', not ','. 
            We provide this method to allow users to set their own separator. </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.String,Aspose.Cells.FileFormatType)">
      <summary>
             Creates and saves the specified to the disk.
             </summary>
      <param name="fileName">The name of created file.</param>
      <param name="fileFormatType">Excel file format type</param>
      <remarks>After calling Save method, data in Workbook instance will be reset.</remarks>
      <example>
        <code>
            
            [C#]
            
            Workbook workbook = new Workbook();
            Worksheets sheets = workbook.Worksheets;
            Cells cells = sheets[0].Cells;
            cells["A1"].PutValue("Hello world!");
            workbook.Save(@"D:\test.xls", FileFormatType.Default);
            
            [Visual Basic]
            
            Dim workbook As Workbook =  New Workbook() 
            Dim sheets As Worksheets =  workbook.Worksheets 
            Dim cells As Cells =  sheets(0).Cells 
            cells("A1").PutValue("Hello world!")
            workbook.Save("D:\test.xls", FileFormatType.Default)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.String,Aspose.Cells.FileFormatType,Aspose.Cells.SaveType,System.Web.HttpResponse)">
      <summary>
             Creates the result spreadsheet and transfer it to the client then open it in the browser or MS Workbook.
             </summary>
      <remarks>
        <br>This method only send spreadsheets or CSV file to client. 
             If you want to convert the file to Aspose.Pdf xml format or SpreadsheetML format, please save it to disk or stream.</br>
             After calling Save method, data in Workbook instance will be reset.
             </remarks>
      <param name="fileName">The name of created file.</param>
      <param name="fileFormatType">Excel file format type</param>
      <param name="saveType">Save type</param>
      <param name="response">Response object to return the spreadsheet to client.</param>
      <example>
        <code>
            [C#]
            
            		Workbook workbook = new Workbook();
            		Worksheets sheets = workbook.Worksheets;
            		Cells cells = sheets[0].Cells;
            		cells["A1"].PutValue(1234);
            		workbook.Save("test.xls", FileFormatType.Default, SaveType.OpenInWorkbook, Response);
            		
            [Visual Basic]
            
             Dim workbook As Workbook =  New Workbook() 
             Dim sheets As Worksheets =  workbook.Worksheets 
             Dim cells As Cells =  sheets(0).Cells 
             cells("A1").PutValue(1234)
             workbook.Save("test.xls", FileFormatType.Default, SaveType.OpenInWorkbook, Response)		///</code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.String,Aspose.Cells.SaveType,Aspose.Cells.FileFormatType,System.Web.HttpResponse)">
      <summary>
             Creates the result spreadsheet and transfer it to the client then open it in the browser or MS Workbook.
             </summary>
      <remarks>
        <p>This method only send spreadsheets or CSV file to client. 
             If you want to convert the file to Aspose.Pdf xml format or SpreadsheetML format, please save it to disk or stream.</p>
             After calling Save method, data in Workbook instance will be reset.
             </remarks>
      <param name="fileName">The name of created file.</param>
      <param name="saveType">Save type</param>
      <param name="fileFormatType">Excel file format type</param>
      <param name="response">Response object to return the spreadsheet to client.</param>
      <example>
        <code>
            [C#]
            
            	Workbook workbook = new Workbook();
            	Worksheets sheets = workbook.Worksheets;
            	Cells cells = sheets[0].Cells;
            	cells["A1"].PutValue(1234);
            	workbook.Save("test.xls", SaveType.OpenInExcel, FileFormatType.Default, Response);
            		
            [Visual Basic]
            
             Dim workbook As Workbook =  New Workbook() 
             Dim sheets As Worksheets =  workbook.Worksheets 
             Dim cells As Cells =  sheets(0).Cells 
             cells("A1").PutValue(1234)
             workbook.Save("test.xls", SaveType.OpenInExcel, FileFormatType.Default, Response)		///</code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.String)">
      <summary>
             Replaces a cell's value with a new string.
            </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             workbook.Replace("AnOldValue", "NewValue");
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
              ........
            workbook.Replace("AnOldValue", "NewValue")
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValue">String value to replace</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Int32)">
      <summary>
             Replaces a cell's value with a new integer.
            </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             int newValue = 100;
             workbook.Replace("AnOldValue", newValue);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
            .........
            Dim NewValue As Integer =  100 
            workbook.Replace("AnOldValue", NewValue)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValue">Integer value to replace</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Double)">
      <summary>
             Replaces a cell's value with a new double.
            </summary>
      <example>
        <code>
             
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             double newValue = 100.0;
             workbook.Replace("AnOldValue", newValue);
             
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
            .........
            Dim NewValue As Double =  100.0
            workbook.Replace("AnOldValue", NewValue)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValue">Double value to replace</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.String[],System.Boolean)">
      <summary>
             Replaces a cell's value with a new string array.
            </summary>
      <example>
        <code>
             
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             string[] newValues = new string[]{"Tom", "Alice", "Jerry"};
             workbook.Replace("AnOldValue", newValues, true);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
             .............
            Dim NewValues() As String =  New String() {"Tom", "Alice", "Jerry"}		
            workbook.Replace("AnOldValue", NewValues, True)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValues">String array to replace</param>
      <param name="isVertical">True - Vertical, False - Horizontal</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Int32[],System.Boolean)">
      <summary>
             Replaces cells' values with an integer array.
            </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             int[] newValues = new int[]{1, 2, 3};
             workbook.Replace("AnOldValue", newValues, true);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
            ...........
            Dim NewValues() As Integer =  New Integer() {1, 2, 3}
            workbook.Replace("AnOldValue", NewValues, True)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValues">Integer array to replace</param>
      <param name="isVertical">True - Vertical, False - Horizontal</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Double[],System.Boolean)">
      <summary>
             Replaces cells' values with a double array.
            </summary>
      <example>
        <code>
             
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             double[] newValues = new double[]{1.23, 2.56, 3.14159};
             workbook.Replace("AnOldValue", newValues, true);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
             ...........
             Dim NewValues() As Double =  New Double() {1.23, 2.56, 3.14159}
             workbook.Replace("AnOldValue", NewValues, True)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValues">Double array to replace</param>
      <param name="isVertical">True - Vertical, False - Horizontal</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Data.DataTable)">
      <summary>
             Replaces cells' values with data from a <see cref="T:System.Data.DataTable" />.
            </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             DataTable myDataTable = new DataTable("Customers");
             // Adds data to myDataTable
             ........
             workbook.Replace("AnOldValue", myDataTable);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
             Dim myDataTable As DataTable =  New DataTable("Customers") 
             ' Adds data to myDataTable
            .............
             workbook.Replace("AnOldValue", myDataTable)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="insertTable">DataTable to replace</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.Boolean,System.Object)">
      <summary>
            Replaces cells' values with new data.
            </summary>
      <param name="boolValue">The boolean value to be replaced.</param>
      <param name="newValue">New value. Can be string, integer, double or DateTime value.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.Int32,System.Object)">
      <summary>
            Replaces cells' values with new data.
            </summary>
      <param name="intValue">The integer value to be replaced.</param>
      <param name="newValue">New value. Can be string, integer, double or DateTime value.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.GetCellName(System.Int32,System.Int32)">
      <summary>
            Gets the name of cell from row index and column index.
            </summary>
      <param name="row">Cell row index.</param>
      <param name="column">Cell column index.</param>
      <returns>Name of cell.</returns>
      <remarks>This method is obsolte. Please use CellsHelper.CellIndexToName method instead.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Copy(Aspose.Cells.Workbook)">
      <summary>
            Copys data from a source Workbook object.
            </summary>
      <param name="source">Source Workbook object.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Combine(Aspose.Cells.Workbook)">
      <summary>
            Combines another Workbook object.
            </summary>
      <param name="secondWorkbook">Another Workbook object.</param>
      <remarks>Currently, only cell data and cell style of the second Workbook object can be combined. Images, charts and other drawing objects are not supported.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.ChangePalette(System.Drawing.Color,System.Int32)">
      <summary>
             Changes the palette for the spreadsheet in the specified index.
             </summary>
      <param name="color">Color structure.</param>
      <param name="index">Palette index, 0 - 55.</param>
      <remarks>The palette has 56 entries, each represented by an RGB value. 
             If you set a color which is not in the palette, it will not take effect.
             So if you want to set a custom color, please change the palette at first.
             <p>The following is the standard color palette.</p><table class="dtTABLE" cellspacing="0"><tr><td width="25%"><font color="gray"><b>Color</b></font>　</td><td width="25%"><font color="gray"><b>Red</b></font>　</td><td width="25%"><font color="gray"><b>Green</b></font>　</td><td width="25%"><font color="gray"><b>Blue</b></font>　</td></tr><tr><td width="25%">Black　</td><td width="25%">0　</td><td width="25%">0　</td><td width="25%">0　</td></tr><tr><td width="25%">White　</td><td width="25%">255　</td><td width="25%">255　</td><td width="25%">255　</td></tr><tr><td width="25%">Red　</td><td width="25%">255　</td><td width="25%">0　</td><td width="25%">0　</td></tr><tr><td width="25%">Lime　</td><td width="25%">0　</td><td width="25%">255　</td><td width="25%">0　</td></tr><tr><td width="25%">Blue　</td><td width="25%">0　</td><td width="25%">0　</td><td width="25%">255　</td></tr><tr><td width="25%">Yellow　</td><td width="25%">255　</td><td width="25%">255　</td><td width="25%">0　</td></tr><tr><td width="25%">Magenta　</td><td width="25%">255　</td><td width="25%">0　</td><td width="25%">255　</td></tr><tr><td width="25%">Cyan　</td><td width="25%">0　</td><td width="25%">255　</td><td width="25%">255　</td></tr><tr><td width="25%">Maroon　</td><td width="25%">128　</td><td width="25%">0　</td><td width="25%">0　</td></tr><tr><td width="25%">Green　</td><td width="25%">0　</td><td width="25%">128　</td><td width="25%">0　</td></tr><tr><td width="25%">Navy　</td><td width="25%">0　</td><td width="25%">0　</td><td width="25%">128　</td></tr><tr><td width="25%">Olive　</td><td width="25%">128　</td><td width="25%">128　</td><td width="25%">0　</td></tr><tr><td width="25%">Purple　</td><td width="25%">128　</td><td width="25%">0　</td><td width="25%">128　</td></tr><tr><td width="25%">Teal　</td><td width="25%">0　</td><td width="25%">128　</td><td width="25%">128　</td></tr><tr><td width="25%">Silver　</td><td width="25%">192　</td><td width="25%">192　</td><td width="25%">192　</td></tr><tr><td width="25%">Gray　</td><td width="25%">128　</td><td width="25%">128　</td><td width="25%">128　</td></tr><tr><td width="25%">Color17　</td><td width="25%">153　</td><td width="25%">153　</td><td width="25%">255　</td></tr><tr><td width="25%">Color18　</td><td width="25%">153　</td><td width="25%">51　</td><td width="25%">102　</td></tr><tr><td width="25%">Color19　</td><td width="25%">255　</td><td width="25%">255　</td><td width="25%">204　</td></tr><tr><td width="25%">Color20　</td><td width="25%">204　</td><td width="25%">255　</td><td width="25%">255　</td></tr><tr><td width="25%">Color21　</td><td width="25%">102　</td><td width="25%">0　</td><td width="25%">102　</td></tr><tr><td width="25%">Color22　</td><td width="25%">255　</td><td width="25%">128　</td><td width="25%">128　</td></tr><tr><td width="25%">Color23　</td><td width="25%">0　</td><td width="25%">102　</td><td width="25%">204　</td></tr><tr><td width="25%">Color24　</td><td width="25%">204　</td><td width="25%">204　</td><td width="25%">255　</td></tr><tr><td width="25%">Color25　</td><td width="25%">0　</td><td width="25%">0　</td><td width="25%">128　</td></tr><tr><td width="25%">Color26　</td><td width="25%">255　</td><td width="25%">0　</td><td width="25%">255　</td></tr><tr><td width="25%">Color27　</td><td width="25%">255　</td><td width="25%">255　</td><td width="25%">0　</td></tr><tr><td width="25%">Color28　</td><td width="25%">0　</td><td width="25%">255　</td><td width="25%">255　</td></tr><tr><td width="25%">Color29　</td><td width="25%">128　</td><td width="25%">0　</td><td width="25%">128　</td></tr><tr><td width="25%">Color30　</td><td width="25%">128　</td><td width="25%">0　</td><td width="25%">0　</td></tr><tr><td width="25%">Color31　</td><td width="25%">0　</td><td width="25%">128　</td><td width="25%">128　</td></tr><tr><td width="25%">Color32　</td><td width="25%">0　</td><td width="25%">0　</td><td width="25%">255　</td></tr><tr><td width="25%">Color33　</td><td width="25%">0　</td><td width="25%">204　</td><td width="25%">255　</td></tr><tr><td width="25%">Color34　</td><td width="25%">204　</td><td width="25%">255　</td><td width="25%">255　</td></tr><tr><td width="25%">Color35　</td><td width="25%">204　</td><td width="25%">255　</td><td width="25%">204　</td></tr><tr><td width="25%">Color36　</td><td width="25%">255　</td><td width="25%">255　</td><td width="25%">153　</td></tr><tr><td width="25%">Color37　</td><td width="25%">153　</td><td width="25%">204　</td><td width="25%">255　</td></tr><tr><td width="25%">Color38　</td><td width="25%">255　</td><td width="25%">153　</td><td width="25%">204　</td></tr><tr><td width="25%">Color39　</td><td width="25%">204　</td><td width="25%">153　</td><td width="25%">255　</td></tr><tr><td width="25%">Color40　</td><td width="25%">255　</td><td width="25%">204　</td><td width="25%">153　</td></tr><tr><td width="25%">Color41　</td><td width="25%">51　</td><td width="25%">102　</td><td width="25%">255　</td></tr><tr><td width="25%">Color42　</td><td width="25%">51　</td><td width="25%">204　</td><td width="25%">204　</td></tr><tr><td width="25%">Color43　</td><td width="25%">153　</td><td width="25%">204　</td><td width="25%">0　</td></tr><tr><td width="25%">Color44　</td><td width="25%">255　</td><td width="25%">204　</td><td width="25%">0　</td></tr><tr><td width="25%">Color45　</td><td width="25%">255　</td><td width="25%">153　</td><td width="25%">0　</td></tr><tr><td width="25%">Color46　</td><td width="25%">255　</td><td width="25%">102　</td><td width="25%">0　</td></tr><tr><td width="25%">Color47　</td><td width="25%">102　</td><td width="25%">102　</td><td width="25%">153　</td></tr><tr><td width="25%">Color48　</td><td width="25%">150　</td><td width="25%">150　</td><td width="25%">150　</td></tr><tr><td width="25%">Color49　</td><td width="25%">0　</td><td width="25%">51　</td><td width="25%">102　</td></tr><tr><td width="25%">Color50　</td><td width="25%">51　</td><td width="25%">153　</td><td width="25%">102　</td></tr><tr><td width="25%">Color51　</td><td width="25%">0　</td><td width="25%">51　</td><td width="25%">0　</td></tr><tr><td width="25%">Color52　</td><td width="25%">51　</td><td width="25%">51　</td><td width="25%">0　</td></tr><tr><td width="25%">Color53　</td><td width="25%">153　</td><td width="25%">51　</td><td width="25%">0　</td></tr><tr><td width="25%">Color54　</td><td width="25%">153　</td><td width="25%">51　</td><td width="25%">102　</td></tr><tr><td width="25%">Color55　</td><td width="25%">51　</td><td width="25%">51　</td><td width="25%">153　</td></tr><tr><td width="25%">Color56　</td><td width="25%">51　</td><td width="25%">51　</td><td width="25%">51　</td></tr></table></remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.IsColorInPalette(System.Drawing.Color)">
      <summary>
            Checks if a color is in the palette for the spreadsheet.
            </summary>
      <param name="color">Color structure.</param>
      <returns>Returns true if this color is in the palette. Otherwise, returns false</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.CalculateFormula">
      <summary>
             Calculates the result of formulas.
             </summary>
      <remarks>This method does not support formulas with external links to other files.
             <p>Now Workbook built-in functions supported in this method:</p><p>[A]</p><p>ABS, ACOS, ACOSH, AND, ASIN, ASINH, ATAN, ATAN2, ATANH, AVERAGE</p><p>[C]</p><p>CEILING, CELL, COLUMN, COLUMNS, CORREL, CONCATENATE, COS, COSH, COUNT, COUNTA, COUNTIF</p><p>[D]</p><p>DATE, DAY, DOLLAR</p><p>[E]</p><p>EXACT, EXP</p><p>[F]</p><p>FIND, FIXED, FLOOR</p><p>[H]</p><p>HLOOKUP</p><p>[I]</p><p>IF, INDEX, INDIRECT, INT, IRR, ISBLANK, ISERR, ISERROR, ISNA, ISNUMBER, ISREF</p><p>[L]</p><p>LEFT, LEN, LINEST, LN, LOG10, LOOKUP</p><p>[M]</p><p>MATCH, MAX, MID, MIN, MOD, MONTH</p><p>[N]</p><p>NPV</p><p>[O]</p><p>OFFSET, OR</p><p>[P]</p><p>PEARSON, PI, POWER</p><p>[R]</p><p>REPT, RIGHT, ROUND, ROUNDDOWN, ROUNDUP, ROW, ROWS, RSQ</p><p>[S]</p><p>SIGN, SIN, SINH, SMALL, SQRT, SUBSTITUTE, SUM, SUMIF, SUMPRODUCT</p><p>[T]</p><p>TAN, TANH, TIME, TODAY</p><p>[U]</p><p>UPPER</p><p>[V]</p><p>VALUE, VLOOKUP</p><p>[Y]</p><p>YEAR</p><p>And Aspose.Cells supports the following add-in functions:</p><p>MCORRELS, REGRESSN</p></remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.CalculateFormula(System.Boolean)">
      <summary>
             Calculates the result of formulas.
             </summary>
      <param name="ignoreError">Indicates if hide the error in calculating formulas. The error may be unsupported function, external links, etc.</param>
      <remarks>This method does not support formulas with external links to other files.
             <p>Now Workbook built-in functions supported in this method:</p><p>[A]</p><p>ABS, ACOS, ACOSH, AND, ASIN, ASINH, ATAN, ATAN2, ATANH, AVERAGE</p><p>[C]</p><p>CEILING, CELL, COLUMN, COLUMNS, CORREL, CONCATENATE, COS, COSH, COUNT, COUNTA, COUNTIF</p><p>[D]</p><p>DATE, DAY, DOLLAR</p><p>[E]</p><p>EXACT, EXP</p><p>[F]</p><p>FIND, FIXED, FLOOR</p><p>[H]</p><p>HLOOKUP</p><p>[I]</p><p>IF, INDEX, INDIRECT, INT, IRR, ISBLANK, ISERR, ISERROR, ISNA, ISNUMBER, ISREF</p><p>[L]</p><p>LEFT, LEN, LINEST, LN, LOG10, LOOKUP</p><p>[M]</p><p>MATCH, MAX, MID, MIN, MOD, MONTH</p><p>[N]</p><p>NPV</p><p>[O]</p><p>OFFSET, OR</p><p>[P]</p><p>PEARSON, PI, POWER</p><p>[R]</p><p>REPT, RIGHT, ROUND, ROUNDDOWN, ROUNDUP, ROW, ROWS, RSQ</p><p>[S]</p><p>SIGN, SIN, SINH, SMALL, SQRT, SUBSTITUTE, SUM, SUMIF, SUMPRODUCT</p><p>[T]</p><p>TAN, TANH, TIME, TODAY</p><p>[U]</p><p>UPPER</p><p>[V]</p><p>VALUE, VLOOKUP</p><p>[Y]</p><p>YEAR</p><p>And Aspose.Cells supports the following add-in functions:</p><p>MCORRELS, REGRESSN</p></remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.CalculateFormula(System.Boolean,Aspose.Cells.ICustomFunction)">
      <summary>
             Calculates the result of formulas.
             </summary>
      <param name="ignoreError">Indicates if hide the error in calculating formulas. The error may be unsupported function, external links, etc.</param>
      <param name="customFunction">Custom function interface to extend formula calculation engine.</param>
      <remarks>This method does not support formulas with external links to other files.
             <p>Now Workbook built-in functions supported in this method:</p><p>[A]</p><p>ABS, ACOS, ACOSH, AND, ASIN, ASINH, ATAN, ATAN2, ATANH, AVERAGE</p><p>[C]</p><p>CEILING, CELL, COLUMN, COLUMNS, CORREL, CONCATENATE, COS, COSH, COUNT, COUNTA, COUNTIF</p><p>[D]</p><p>DATE, DAY, DOLLAR</p><p>[E]</p><p>EXACT, EXP</p><p>[F]</p><p>FIND, FIXED, FLOOR</p><p>[H]</p><p>HLOOKUP</p><p>[I]</p><p>IF, INDEX, INDIRECT, INT, IRR, ISBLANK, ISERR, ISERROR, ISNA, ISNUMBER, ISREF</p><p>[L]</p><p>LEFT, LEN, LINEST, LN, LOG10, LOOKUP</p><p>[M]</p><p>MATCH, MAX, MID, MIN, MOD, MONTH</p><p>[N]</p><p>NPV</p><p>[O]</p><p>OFFSET, OR</p><p>[P]</p><p>PEARSON, PI, POWER</p><p>[R]</p><p>REPT, RIGHT, ROUND, ROUNDDOWN, ROUNDUP, ROW, ROWS, RSQ</p><p>[S]</p><p>SIGN, SIN, SINH, SMALL, SQRT, SUBSTITUTE, SUM, SUMIF, SUMPRODUCT</p><p>[T]</p><p>TAN, TANH, TIME, TODAY</p><p>[U]</p><p>UPPER</p><p>[V]</p><p>VALUE, VLOOKUP</p><p>[Y]</p><p>YEAR</p><p>And Aspose.Cells supports the following add-in functions:</p><p>MCORRELS, REGRESSN</p></remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.ValidateFormula(System.String)">
      <summary>
            Checks if a formula is valid.
            </summary>
      <param name="formula">Formula string.</param>
      <returns>True: valid formula. False: invalid formula or unsupported function.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.GetMatchingColor(System.Drawing.Color)">
      <summary>
            Find best matching Color in current palette.
            </summary>
      <param name="rawColor">Raw color.</param>
      <returns>Best matching color.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.Protect(Aspose.Cells.ProtectionType,System.String)">
      <summary>
            Protects a workbook.
            </summary>
      <param name="protectionType">Protection type.</param>
      <param name="password">Password to protect the workbook.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Unprotect(System.String)">
      <summary>
            Unprotects a workbook.
            </summary>
      <param name="password">Password to unprotect the workbook.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Decrypt(System.String)">
      <summary>
            Decrypts an Excel file.
            </summary>
      <param name="password">Password to decrypt the Excel file.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.RemoveMacro">
      <summary>
            Removes VBA/macro from this spreadsheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.Worksheets">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Worksheets" /> collection in the spreadsheet.
            </summary>
      <returns>
        <see cref="P:Aspose.Cells.Workbook.Worksheets" /> collection</returns>
    </member>
    <member name="P:Aspose.Cells.Workbook.Styles">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Styles" /> collectioin.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.IsHScrollBarVisible">
      <summary>
            Gets or sets a value indicating whether the generated spreadsheet will contain a horizontal scroll bar.
            </summary>
      <remarks>The default value is true.</remarks>
      <example>
            The following code makes the horizontal scroll bar invisible for the spreadsheet.
            <code>
            [C#]
            // Hide the horizontal scroll bar of the Excel file.
            workbook.IsHScrollBarVisible = false;
            
            [Visual Basic]
            ' Hide the horizontal scroll bar of the Excel file.
            workbook.IsHScrollBarVisible = False
            </code></example>
    </member>
    <member name="P:Aspose.Cells.Workbook.IsVScrollBarVisible">
      <summary>
             Gets or sets a value indicating whether the generated spreadsheet will contain a vertical scroll bar.
             </summary>
      <remarks>The default value is true.</remarks>
      <example>The following code makes the vertical scroll bar invisible for the spreadsheet.
             <code>
             [C#]
            	// Hide the vertical scroll bar of the Excel file.
             workbook.IsVScrollBarVisible = false;
             
             [Visual Basic]
             ' Hide the vertical scroll bar of the Excel file.
             workbook.IsVScrollBarVisible = False
            </code></example>
    </member>
    <member name="P:Aspose.Cells.Workbook.Colors">
      <summary>
            Returns colors in the palette for the spreadsheet. 
            </summary>
      <remarks>The palette has 56 entries, each represented by an RGB value.</remarks>
    </member>
    <member name="P:Aspose.Cells.Workbook.DefaultStyle">
      <summary>
            Gets or sets the default <see cref="T:Aspose.Cells.Style" /> object of the workbook.
            </summary>
      <remarks>
            The DefaultStyle property is useful to implement a Style for the whole Workbook. 
            </remarks>
      <example>
            The following code creates and instantiates a new Workbook and sets a default <see cref="T:Aspose.Cells.Style" /> to it.
            <code>
            [C#]
            Workbook workbook = new Workbook();
            Style defaultStyle = workbook.DefaultStyle;
            defaultStyle.Font.Name = "Tahoma";
            workbook.DefaultStyle = defaultStyle;
            
            [Visual Basic]
            Dim workbook as Workbook = new Workbook()
            Dim defaultStyle as Style = workbook.DefaultStyle
            defaultStyle.Font.Name = "Tahoma"
            workbook.DefaultStyle = defaultStyle
            </code></example>
    </member>
    <member name="P:Aspose.Cells.Workbook.ShowTabs">
      <summary>
            Get or sets a value whether the Workbook tabs are displayed.
            </summary>
      <remarks>The default value is true.</remarks>
      <example>The following code hides the Sheet Tabs and Tab Scrolling Buttons for the spreadsheet.
            <code>
            [C#]
            // Hide the spreadsheet tabs.
            workbook.ShowTabs = false;
             
            [Visual Basic]
            ' Hide the spreadsheet tabs.
            workbook.ShowTabs = False
            </code></example>
    </member>
    <member name="P:Aspose.Cells.Workbook.ConvertNumericData">
      <summary>
            Gets or sets a value that indicates whether the string in text file is converted to numeric data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.Shared">
      <summary>
            Gets or sets a value that indicates whether the Workbook is shared. 
            </summary>
      <remarks>The default value is false.</remarks>
    </member>
    <member name="P:Aspose.Cells.Workbook.IsProtected">
      <summary>
            Gets a value that indicates whether the Workbook is protected. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.Language">
      <summary>
            Gets or sets the user interface language of the Workbook version based on CountryCode that has saved the file. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.Region">
      <summary>
            Gets or sets the system regional settings based on CountryCode at the time the file was saved. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.Date1904">
      <summary>
            Gets or sets a value which represents if the workbook uses the 1904 date system.
            </summary>
    </member>
    <member name="T:Aspose.Cells.WorkbookDesigner">
      <summary>
            Encapsulates the object that represents a designer spreadsheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Cells.WorkbookDesigner" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.Open(System.String)">
      <summary>
            Opens a preset designer spreadsheet.
            </summary>
      <param name="designerSpreadsheet">The preset designer spreadsheet.</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.Open(System.IO.MemoryStream)">
      <summary>
            Opens a preset designer spreadsheet from memory stream.
            </summary>
      <param name="stream">Memory stream which contains the preset designer spreadsheet.</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.Save(System.String)">
      <summary>
            Creates and saves the result spreadsheet to the disk.
            </summary>
      <param name="resultSpreadsheet">Result spreadsheet.</param>
      <remarks>File format is Excel2000.</remarks>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.Save(System.String,Aspose.Cells.FileFormatType)">
      <summary>
            Creates and saves the result spreadsheet to the disk.
            </summary>
      <param name="resultSpreadsheet">Result spreadsheet</param>
      <param name="fileFormatType">Excel file format type</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.Save(System.String,Aspose.Cells.SaveType,Aspose.Cells.FileFormatType,System.Web.HttpResponse)">
      <summary>
            Creates the result spreadsheet and transfer it to the client then open it in the browser.
            </summary>
      <param name="resultSpreadsheet">Result file</param>
      <param name="saveType">Save type</param>
      <param name="fileFormatType">Excel file format type</param>
      <param name="response">Response object to return the spreadsheet to client.</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.ClearDataSource">
      <summary>
            Clears all data sources.
            </summary>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.Data.DataSet)">
      <summary>
            Sets data source of a DataSet object.
            </summary>
      <param name="dataSet">DataSet object</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.Data.DataTable)">
      <summary>
            Sets data source of a DataTable object.
            </summary>
      <param name="dataTable">DataTable object</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.String,System.Data.DataView)">
      <summary>
            Sets data source of a DataView object and binds it to a data source name.
            </summary>
      <param name="dataSourceName">Data source name.</param>
      <param name="dataView">DataView object.</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.Data.DataView)">
      <summary>
            Sets data source of a DataView object.
            </summary>
      <param name="dataView">DataView object</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.String,System.Object)">
      <summary>
            Sets data binding to a variable.
            </summary>
      <param name="variable">Variable name created using smark marker.</param>
      <param name="data">Source data.</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.String,System.Object[])">
      <summary>
            Sets data array binding to a variable.
            </summary>
      <param name="variable">Variable name created using smark marker.</param>
      <param name="dataArray">Source data array.</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.Process(System.Boolean)">
      <summary>
            Processes the smart markers and populates the data source values.
            </summary>
      <param name="isPreserved">True if the unrecognized smart marker is preserved.</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.Process(System.Int32,System.Boolean)">
      <summary>
            Processes the smart markers and populates the data source values.
            </summary>
      <param name="sheetIndex">Worksheet index.</param>
      <param name="isPreserved">True if the unrecognized smart marker is preserved.</param>
      <remarks>This method works on worksheet level.</remarks>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.Process">
      <summary>
            Processes the smart markers and populates the data source values.
            </summary>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.GetSmartMarkers">
      <summary>
            Returns a collection of smart markers in a spreadsheet.
            </summary>
      <returns>A collection of smart markers</returns>
      <remarks>A string array is created on every call. The array is sorted and duplicated values are removed.</remarks>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.Data.OleDb.OleDbConnection)">
      <summary>
            Sets data source of a OleDbConnection object.
            </summary>
      <param name="connection">OleDbConnection object</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.Data.SqlClient.SqlConnection)">
      <summary>
            Sets data source of a SqlConnection object.
            </summary>
      <param name="connection">SqlConnection object</param>
    </member>
    <member name="P:Aspose.Cells.WorkbookDesigner.Workbook">
      <summary>
            Gets the internal Workbook object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Worksheet">
      <summary>
             Encapsulates the object that represents a single worksheet.
             </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             
             Worksheet sheet = workbook.Worksheets[0];
             
             //Freeze panes at "AS40" with 10 rows and 10 columns
             sheet.FreezePanes("AS40", 10, 10);
             
             //Add a hyperlink in Cell A1
             sheet.Hyperlinks.Add("A1", 1, 1, "http://www.aspose.com");
             
             [Visual Basic]
             
             Dim workbook as Workbook = new Workbook()
             
             Dim sheet as Worksheet = workbook.Worksheets(0)
             
             'Freeze panes at "AS40" with 10 rows and 10 columns
             sheet.FreezePanes("AS40", 10, 10)
             
             'Add a hyperlink in Cell A1
             sheet.Hyperlinks.Add("A1", 1, 1, "http://www.aspose.com")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Worksheet.UnFreezePanes">
      <summary>
            Unfreezes panes in the worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.FreezePanes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Freezes panes at the specified cell in the worksheet.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="freezedRows">Number of visible rows in top pane, no more than row index.</param>
      <param name="freezedColumns">Number of visible columns in left pane, no more than column index.</param>
      <remarks>Row index and column index cannot all be zero. Number of rows and number of columns
            also cannot all be zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Split">
      <summary>
            Splits window.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.RemoveSplit">
      <summary>
            Removes splitted window.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.FreezePanes(System.String,System.Int32,System.Int32)">
      <summary>
            Freezes panes at the specified cell in the worksheet.
            </summary>
      <param name="cellName">Cell name.</param>
      <param name="freezedRows">Number of visible rows in top pane, no more than row index.</param>
      <param name="freezedColumns">Number of visible columns in left pane, no more than column index.</param>
      <remarks>Row index and column index cannot all be zero. Number of rows and number of columns
            also cannot all be zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Copy(Aspose.Cells.Worksheet)">
      <summary>
            Copys contents and formats from another worksheet.
            </summary>
      <param name="sourceSheet">Source worksheet.</param>
      <remarks>You can copy data from another worksheet in the same file or another file. However, this method does not support to copy drawing objects, such as comments, images and charts.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Copy(Aspose.Cells.Worksheet,System.Boolean)">
      <summary>
            Copys contents and formats from another worksheet.
            </summary>
      <param name="sourceSheet">Source worksheet.</param>
      <param name="copyName">
      </param>
      <remarks>You can copy data from another worksheet in the same file or another file. However, this method does not support to copy drawing objects, such as comments, images and charts.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitColumn(System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits the column width.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="firstRow">First row index.</param>
      <param name="lastRow">Last row index.</param>
      <remarks>This method autofits a row based on content in a range of cells within the row.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitColumns">
      <summary>
            Autofits all columns in this worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitColumn(System.Int32)">
      <summary>
            Autofits the column width.
            </summary>
      <param name="columnIndex">Column index.</param>
      <remarks>AutoFitColumn is an imprecise function.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRow(System.Int32,System.Byte,System.Byte)">
      <summary>
            Autofits the row height.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="firstColumn">First column index.</param>
      <param name="lastColumn">Last column index.</param>
      <remarks>This method autofits a row based on content in a range of cells within the row.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRows">
      <summary>
            Autofits all rows in this worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits row height in a rectangle range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRow(System.Int32)">
      <summary>
            Autofits the row height.
            </summary>
      <param name="rowIndex">Row index.</param>
      <remarks>AutoFitRow is an imprecise function.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Protect(Aspose.Cells.ProtectionType)">
      <summary>
             Protects worksheet.
             </summary>
      <param name="type">Protection type.</param>
      <remarks>This method protects worksheet without password. It can protect worksheet in all versions of Excel file. 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Protect(Aspose.Cells.ProtectionType,System.String,System.String)">
      <summary>
            Protects worksheet.
            </summary>
      <param name="type">Protection type.</param>
      <param name="password">Password.</param>
      <param name="oldPassword">If the worksheet is already protected by a password, please supply the old password.
            Otherwise, you can set a null value or blank string to this parameter.</param>
      <remarks>This method can protect worksheet in all versions of Excel file. 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Unprotect">
      <summary>
            Unprotects worksheet.
            </summary>
      <remarks> This method unprotects worksheet which is protected without password.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Unprotect(System.String)">
      <summary>
            Unprotects worksheet.
            </summary>
      <param name="password">Password</param>
      <remarks>If the worksheet is protected without a password, you can set a null value or blank string to password parameter.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.CopyConditionalFormatting(System.Int32,System.Byte,System.Int32,System.Byte)">
      <summary>
            Copys conditional formatting on a cell to another cell.
            </summary>
      <param name="sourceRow">Source cell row index.</param>
      <param name="sourceColumn">Source cell column index.</param>
      <param name="destRow">Destination cell row index.</param>
      <param name="destColumn">Destination cell column index.</param>
      <remarks>This method can only copy conditional formatting within the same worksheet. </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Move(System.Int32)">
      <summary>
            Moves the sheet to another location in the spreadsheet.
            </summary>
      <param name="index">Destination sheet index.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Replace(System.String,System.String)">
      <summary>
            Replaces all cell's text with a new string.
            </summary>
      <param name="oldString">Old string value.</param>
      <param name="newString">New string value.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.RemoveAllDrawingObjects">
      <summary>
            Removes all drawing objects in this worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.GetSelectedRanges">
      <summary>
            Gets selected ranges of cells in the designer spreadsheet.
            </summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> which contains selected ranges.</returns>
    </member>
    <member name="M:Aspose.Cells.Worksheet.ClearComments">
      <summary>
            Clears all comments in designer spreadsheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Protection">
      <summary>
            Represents the various types of protection options available for a worksheet. Supports advanced protection options in ExcelXP and above version.
            </summary>
      <remarks>This property can protect worksheet in all versions of Excel file and support advanced protection options in ExcelXP and above version.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsRowColumnHeadersVisible">
      <summary>
            Gets or sets a value indicating whether the worksheet will display row and column headers.Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Comments">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Comments" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Cells">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Cells" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.PivotTables">
      <summary>
            Gets the pivotTables in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Type">
      <summary>
            Represents worksheet type
            </summary>
      <value>Excel worksheet type</value>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Name">
      <summary>
            Gets or sets the name of the worksheet.
            </summary>
      <remarks>The max length of sheet name is 31. And you cannot assign same name(case insensitive) to two worksheets. 
            For example, you cannot set "SheetName1" to the first worksheet and set "SHEETNAME1" to the second worksheet.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsGridlinesVisible">
      <summary>
            Gets or sets a value indicating whether the gridelines are visible.Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Pictures">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Pictures" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.TextBoxes">
      <summary>
            Gets a <see cref="T:Aspose.Cells.TextBoxes" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.CheckBoxes">
      <summary>
            Gets a <see cref="T:Aspose.Cells.CheckBoxes" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.OleObjects">
      <summary>
            Represents a collection of <see cref="T:Aspose.Cells.OleObject" /> in a worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Charts">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Charts" /> collection
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.HPageBreaks">
      <summary>
            Gets the <see cref="T:Aspose.Cells.HPageBreaks" /> collection. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.VPageBreaks">
      <summary>
            Gets the <see cref="T:Aspose.Cells.VPageBreaks" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Hyperlinks">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Hyperlinks" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.DisplayRightToLeft">
      <summary>
            Indicates if the specified worksheet is displayed from right to left instead of from left to right.
            Default is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.PageSetup">
      <summary>
            Represents the page setup description in this sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.AutoFilter">
      <summary>
            Represents autofiltering for the specified worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsVisible">
      <summary>
            Represents if the worksheet is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Shapes">
      <summary>
            Returns all drawing shapes in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Index">
      <summary>
            Gets the index of sheet in the worksheets collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsProtected">
      <summary>
            Indicates if the worksheet is protected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Validations">
      <summary>
            Gets the data validation setting collection in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Zoom">
      <summary>
            Represents the scaling factor in percent. It should be btween 10 and 400.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Outline">
      <summary>
            Represents an outline on a worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.FirstVisibleRow">
      <summary>
            Represents first visible row index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.FirstVisibleColumn">
      <summary>
            Represents first visible column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsPageBreakPreview">
      <summary>
            Indications the specified worksheet is shown in normal view or page break preview.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.TabColor">
      <summary>
            Represents worksheet tab color.
            </summary>
      <remarks>This feature is only supported in ExcelXP(Excel2002) and above version. If you save file as Excel97 or Excel2000 format, it will be omitted.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.CodeName">
      <summary>
            Represents worksheet code name.
            </summary>
      <remarks>You cannot change the code name while the template file contains VBA/macro.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ConditionalFormattings">
      <summary>
            Gets the ConditionalFormattings in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ActiveCell">
      <summary>
            Gets or sets the active cell in the worksheet. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Worksheets">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Worksheet" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            
            Workbook workbook = new Workbook();
            
            Worksheets sheets = workbook.Worksheets;
            
            //Add a worksheet
            sheets.Add();
            
            //Change the name of a worksheet
            sheets[0].Name = "First Sheet";
            
            //Set the active sheet to the second worksheet
            sheets.SetActiveSheet(1);
            
            	
            [Visual Basic]
            
            Dim excel as Workbook = new Workbook()
            
            Dim sheets as Worksheets = excel.Worksheets
            
            'Add a worksheet
            sheets.Add()
            
            'Change the name of a worksheet
            sheets(0).Name = "First Sheet"
            
            'Set the active sheet to the second worksheet
            sheets.SetActiveSheet(1)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Worksheets.SortNames">
      <summary>
            Sorts defined names.
            </summary>
      <remarks>If you create a large amount of named ranges in the Excel file, please call this method after all named ranges are created and before saving </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheets.Add(Aspose.Cells.SheetType)">
      <summary>
            Adds a worksheet to the collection.
            </summary>
      <param name="type">Worksheet type.</param>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object index.</returns>
      <example>
        <code>
            [C#]
            Workbook workbook = new Workbook();
            workbook.Worksheets.Add(SheetType.Chart);
            Cells cells = workbook.Worksheets[0].Cells;
            cells["c2"].PutValue(5000);
            cells["c3"].PutValue(3000);
            cells["c4"].PutValue(4000);
            cells["c5"].PutValue(5000);
            cells["c6"].PutValue(6000);
            Charts charts = workbook.Worksheets[1].Charts;
            int chartIndex = charts.Add(ChartType.Column, 10,10,20,20);
            Chart chart = charts[chartIndex];
            chart.NSeries.Add("Sheet1!C2:C6", true);
            
            [Visual Basic]
            Dim workbook As Workbook =  New Workbook() 
            workbook.Worksheets.Add(SheetType.Chart)
            Dim cells As Cells = workbook.Worksheets(0).Cells 
            cells("c2").PutValue(5000)
            cells("c3").PutValue(3000)
            cells("c4").PutValue(4000)
            cells("c5").PutValue(5000)
            cells("c6").PutValue(6000)
            Dim charts As Charts = workbook.Worksheets(1).Charts
            Dim chartIndex As Integer = charts.Add(ChartType.Column,10,10,20,20) 
            Dim chart As Chart = charts(chartIndex) 
            chart.NSeries.Add("Sheet1!C2:C6", True)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Worksheets.Add">
      <summary>
            Adds a worksheet to the collection.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Worksheets.Add(System.String)">
      <summary>
            Adds a worksheet to the collection.
            </summary>
      <param name="sheetName">Worksheet name</param>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Worksheets.RemoveAt(System.String)">
      <summary>
            Removes the element at a specified name.
            </summary>
      <param name="name">The name of the element to remove.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheets.RemoveAt(System.Int32)">
      <summary>
            Removes the element at a specified index.
            </summary>
      <param name="index">The index value of the element to remove.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheets.AddCopy(System.String)">
      <summary>
            Adds a worksheet to the collection and copys data from an existed worksheet.
            </summary>
      <param name="sheetName">Name of source worksheet.</param>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object index.</returns>
      <exception cref="T:Aspose.Cells.CellsException">Specifies an invalid worksheet name.</exception>
    </member>
    <member name="M:Aspose.Cells.Worksheets.AddCopy(System.Int32)">
      <summary>
            Adds a worksheet to the collection and copys data from an existed worksheet.
            </summary>
      <param name="sheetIndex">Index of source worksheet.</param>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Worksheets.GetRangeByName(System.String)">
      <summary>
            Gets Range object by pre-defined name.
            </summary>
      <param name="rangeName">Name of range.</param>
      <returns>Range object.<p></p>Returns null if the named range does not exist.</returns>
    </member>
    <member name="M:Aspose.Cells.Worksheets.GetNamedRanges">
      <summary>
            Gets all pre-defined named ranges in the spreadsheet.
            </summary>
      <returns>An array of Range objects.<p></p>Returns null if the named range does not exist.</returns>
    </member>
    <member name="M:Aspose.Cells.Worksheets.SetOleSize(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets displayed size when Workbook file is used as an Ole object.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column index.</param>
      <remarks>This method is generally used to adjust display size in ppt file or doc file.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheets.Names">
      <summary>
            Gets the collection of all the Name objects in the spreadsheet. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheets.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Worksheet" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.Worksheets.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Worksheet" /> element with the specified name.
            </summary>
      <param name="sheetName">Worksheet name</param>
      <returns>The element with the specified name.</returns>
    </member>
    <member name="P:Aspose.Cells.Worksheets.EnableHTTPCompression">
      <summary>
            Indicates if http compression is to be used in user's IIS.
            </summary>
      <remarks>Please specify this property to true if http compression is used.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheets.ActiveSheetIndex">
      <summary>
            Represents the index of active worksheet when the spreadsheet is opened.
            </summary>
      <remarks>Sheet index is zero based.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheets.WindowLeftInch">
      <summary>
            The distance from the left edge of the client area to the left edge of the window.
            In unit of inch.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheets.WindowLeftCM">
      <summary>
            The distance from the left edge of the client area to the left edge of the window.
            In unit of centimeter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheets.WindowTopInch">
      <summary>
            The distance from the top edge of the client area to the top edge of the window.
            In unit of inch.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheets.WindowTopCM">
      <summary>
            The distance from the top edge of the client area to the top edge of the window.
            In unit of centimeter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheets.WindowWidthInch">
      <summary>
            The width of the window.In unit of inch;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheets.WindowWidthCM">
      <summary>
            The width of the window.In unit of centimeter;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheets.WindowHeightInch">
      <summary>
            The height of the window.In unit of inch;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheets.WindowHeightCM">
      <summary>
            The height of the window.In unit of centimeter;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheets.BuiltInDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the built-in document properties of the spreadsheet. 
            </summary>
      <remarks>A new property cannot be added to built-in document properties list. You can only get a built-in property and change its value.
            The following is the built-in properties name list:
            <p>Title</p><p>Subject</p><p>Author</p><p>Keywords</p><p>Comments</p><p>Template</p><p>Last Author</p><p>Revision Number</p><p>Application Name</p><p>Last Print Date</p><p>Creation Date</p><p>Last Save Time</p><p>Total Editing Time</p><p>Number of Pages</p><p>Number of Words</p><p>Number of Characters</p><p>Security</p><p>Category</p><p>Format</p><p>Manager</p><p>Company</p><p>Number of Bytes</p><p>Number of Lines</p><p>Number of Paragraphs</p><p>Number of Slides</p><p>Number of Notes</p><p>Number of Hidden Slides</p><p>Number of Multimedia Clips</p></remarks>
      <example>
        <code>
            [C#]
            DocumentProperty doc = workbook.Worksheets.BuiltInDocumentProperties["Author"];
            doc.Value = "John Smith";
            
            [Visual Basic]
            Dim doc as DocumentProperty = workbook.Worksheets.BuiltInDocumentProperties("Author")
            doc.Value = "John Smith"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Worksheets.CustomDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the custom document properties of the spreadsheet. 
            </summary>
      <example>
        <code>
            [C#]
            excel.Worksheets.CustomDocumentProperties.Add("Checked by", "Jane");
            
            [Visual Basic]
            excel.Worksheets.CustomDocumentProperties.Add("Checked by", "Jane")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Worksheets.ExternalLinks">
      <summary>
            Represents external links in a workbook.
            </summary>
    </member>
  </members>
</doc>